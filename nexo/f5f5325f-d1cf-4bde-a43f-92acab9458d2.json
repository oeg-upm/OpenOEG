{
  "message": "SYSTEM: ORequirementsSpecification.pdf: Página 8\nTask 3. Identify intended uses. The development of an ontology is mainly \nmotivated by scenarios related to the application that will use the ontology. The goal \nof this task is to obtain the intended uses and use scenarios of the ontology. The \nontology development team has a set of interviews with users and domain experts to \ncarry out this task taking as input a set of ontological needs; the purpose here is to \nobtain the uses of the ontology within the application, and to have a general idea of \nthe application requirements. The task output is a list of intended uses in the form of \nscenarios, which is included in slot 5 of the template shown in Table 1. Such \nscenarios describe a set of general ontology requirements that the ontology should \nsatisfy after being formally implemented. The scenarios should be described in \nnatural language and can be expressed in UML as use cases. The output in the \nSEEMP ORSD is shown in Table 2. \nTask 4. Identify requirements. The goal of this task is to acquire the set of \nrequirements that the ontology should satisfy. Taking as inspiration the Software \nEngineering field, in which requirements are divided into functional10 and non-\nfunctional11 requirements [13], we also divide ontology requirements into the \nfollowing two types, whose definition is different those in Software Engineering:  \n• \nNon-functional ontology requirements refer to the characteristics, qualities, or \ngeneral aspects not related to the ontology content that the ontology should \nsatisfy. Examples of non-functional requirements are: (a) whether the \nterminology to be used in the ontology must be taken from standards, (b) \nwhether the ontology must be multilingual, or (c) whether the ontology should \nbe written following a specific naming convention.  \n• \nFunctional ontology requirements, which can be also seen as content specific \nrequirements, refer to the particular knowledge to be represented by the \nontology, for example in the SEEMP case, the knowledge about curriculum \nvitae with candidate skills, education level, expertise, previous work \nexperience, or about job offers including job location, salary, etc.. \nThe ontology development team should interview users and domain experts taking \nas input a set of ontological needs, and obtain as result the initial set of ontology \nrequirements (non-functional and functional) of the ontology to be built. To identify \nfunctional requirements, the ontology development team uses as main technique the \nwriting of the requirements in natural language in the form of the so-called CQs. \nMind map tools [1] and Excel can be used for obtaining the requirements. If people \nare geographically distributed, wiki tools, such as Cicero12, can also be employed.  \nSome strategies for identifying CQs are: \n• \nTop-Down: The team starts with complex questions that are decomposed in \nsimpler ones. \n• \nBottom-Up: The team starts with simple questions that are composed to \nstructure/create complex ones. \n                                                           \n10 Functional requirements refer to required behavior of the system, that is, functionalities the \nsoftware system should have. \n11 Non-functional requirements refer to implicit expectations about how well the software \nsystem should work. That is, these requirements can be seen as aspects about the system or \nas ‘non-behavior’ requirements.  \n12 http://cicero.uni-koblenz.de/wiki \n",
  "speaker": "SYSTEM",
  "uuid": "f5f5325f-d1cf-4bde-a43f-92acab9458d2"
}
{
  "message": "SYSTEM: 13_LDGeneration.pdf: Página 28\n18/12/12 \n28 \nOperators: comparators \n55 \n•  Parameters: Every time we use a comparator we need \nto set up some parameters \n \nParameter \nDescription \nrequired (optional) \nIf required is true, the parent aggregation only yields a \nconfidence value if the given inputs have values for both \ninstances. \nweight (optional) \nWeight of this comparison. The weight is used by some \naggregations such as the weighted average aggregation. \nthreshold \nThe maximum distance. For normalized distance measures, \nthe threshold should be between 0.0 and 1.0. \nInputs \nThe 2 inputs for the comparison. \nOperators: comparators \n•  Character-based distance metrics: \n•  compare strings on the character level.  \n•  They are well suited for handling typographical errors  \n56 \nMeasure \nDescription \nNormalized \nlevenshteinDistance \nLevenshtein distance. The \nminimum number of edits needed \nto transform one string into the \nother, with the allowable edit \noperations being insertion, deletion, \nor substitution of a single character \nNo \nlevenshtein \nThe levensthein distance \nnormalized to the interval [0,1] \nYes \njaro \nJaro distance metric. Simple \ndistance metric originally developed \nto compare person names. \nYes \njaroWinkler \nJaro-Winkler distance measure. \nThe Jaro–Winkler distance metric is \ndesigned and best suited for short \nstrings such as person names \nYes \nequality \n0 if strings are equal, 1 otherwise. \nYes \ninequality \n1 if strings are equal, 0 otherwise. \nYes \n",
  "speaker": "SYSTEM",
  "uuid": "b368536a-fa57-4dbc-8347-8537eea9e963"
}
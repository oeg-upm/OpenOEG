{
  "message": "SYSTEM: ORequirementsSpecification.pdf: Página 2\neffort, (c) the provision of a basis for estimating costs and schedules, and (d) the offer \nof a baseline for validation and verification. \nWhen a software application based on ontologies is being developed, ontology \nrequirements should be identified in addition to the application ones. Our experience \nin building ontology-based applications, in domains as different as satellite data \nprocessing1, finding funding programs2, fishery stocks3 and e-employment4, has \nshowed that more critical than capturing software requirements was the efficient and \nprecise identification of the knowledge that the ontology should contain. Up to now, \napplication developers already have precise methodologies [13, 10, 18] that help them \nto define application requirements. However, guidelines included in current \nmethodologies for building ontologies are not enough for defining ontology \nrequirements. \nThe analysis of the state of the art of Ontological Engineering reveals that most of \nthe methodologies for building ontologies include the ontology requirements \nspecification activity. In this regard, we can mention that METHONTOLOGY [5] \nidentifies the goals of the ontology requirements specification activity; however, this \nmethodology does not propose any method for carrying out the activity. Grüninger \nand Fox’s methodology [8], On-To-Knowledge methodology [14], and the Unified \nmethodology [17] propose the identification of the following aspects for creating the \nontology requirements specification document (ORSD): (1) the purpose of the \nontology to be developed, (2) the intended uses and users of the ontology to be \ndeveloped, and (3) the set of ontology requirements that the ontology should satisfy \nafter being formally implemented. Most of the existing methodologies suggest the \nidentification of competency questions (CQs) [8] as the technique for establishing the \nontology requirements. CQs are natural language questions that the ontology to be \nbuilt should be able to answer. CQs and their responses play the role of a type of \nrequirements specification against which the ontology can be evaluated. Although the \naforementioned methodologies propose methods for carrying out the ontology \nrequirements specification activity consisting of high level steps, they do not provide \ndetailed guidelines that explain how to carry out each step, what it is needed for \nobtaining a good ORSD; nor how the ORSD can be used later on in the ontology \ndevelopment (for instance, to search knowledge-aware resources to be reused and to \nverify the ontology content). \nThe innovation of this paper lies in the systematization of the ontology \nrequirements specification activity since the paper proposes efficient, prescriptive and \ndetailed methodological guidelines for specifying ontology requirements. Our \nguidelines are based on the use of the so-called CQs and are inspired by existing \nmethodologies for building ontologies and by available practices and previous \nexperiences in different national and European funded projects. These methodological \nguidelines help to capture knowledge from users and to produce the ORSD that will \nbe used by ontology engineers in order to develop an ontology that will fulfill the \nrequirements identified. Therefore, the main purpose of an ORSD is to serve as an \n                                                           \n1 http://www.ontogrid.net \n2 http://esperonto.net/fundfinder \n3 http://www.neon-project.org \n4 http://www.seemp.org \n",
  "speaker": "SYSTEM",
  "uuid": "98bd2abb-4aa7-455a-b1d5-a0a323f7da00"
}
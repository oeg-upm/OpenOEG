{
  "message": "SYSTEM: Neon_2008_d2.2.2.pdf: Página 27\nD2.2.2 Methods and Tools Supporting Re-engineering\nPage 27 of 124\nthe resource elements when deﬁning transformations to ontology elements. This method tackles the\ninternal data model of the resource and describes how the resource data is represented and ac-\ncessed for the transformation. It does not provide the resource provenance information, therefore\nthe resultant ontology does not keep the reference to the database. The proposed method consists of\nthe following steps:\n– To capture information from relational schema through reverse engineering, user interaction is\nnecessary in this step.\n– To analyze the information obtained and map database entities into ontological entities, by using\na set of mapping rules. This step consists of: (1) alignment of the top-level terms; (2) use of\nconcept creation rules to determine the set of relations in relational schema related to a concept;\nand (3) use of attribute creation rules to assign relation’s attributes to the attributes of a concept.\n– To evaluate, validate and reﬁne the mapping.\n– To create a knowledge base, i.e.\ndata migration.\nThis step consists of: (1) creation of the\ninstances; and (2) deﬁnition of the relations between instances.\nThe intranet of the AIFB Institute27 is here presented as a case study. For the automation of the\nmapping process they used KAON-REVERSE28 a tool for semi-automatically connecting relational\ndatabase to ontologies.\nThis method produces one ontology and generates ontology instances. The resultant ontology is\nexpressed in F-Logic29, the ontology instances are expressed in RDF.\n• Barrasa et al.\nin [BCGP04, Bar07] present an integrated framework for the formal speciﬁcation,\nevaluation and exploitation of the semantic correspondences between ontologies and relational data\nsources.\nThe framework consists of the following two main components:\n– R2O, which is a declarative language for the description of arbitrarily complex mapping expres-\nsions between ontology elements (concepts, attributes and relations) and relational elements\n(relations and attributes). The strength of the R2O language lies in its expressivity and in its\nDBMS independence. The elements of the language providing such qualities are conditions,\noperations, and the rule-style mapping deﬁnition for attributes.\n– ODEMapster processor, which generates Semantic Web instances from relational instances\nbased on the mapping description expressed in an R2O document.\nODEMapster offers two\noperation modes: query driven upgrade (on demand query translation) and massive upgrade\nbatch process that generates all possible Semantic Web individuals from the data repository.\nThis method follows the approach to transforming resource content into instances of an existing\nontology and uses a formal speciﬁcation of the conversions between entities of the resource and\nthe ontology.\nThis method contemplates syntactic transformation aspects and how symbols are structured in\nthe database and ontology formats. It also contemplates semantic transformation aspects and the\nsemantic interpretation of the resource elements when deﬁning transformations to ontology elements.\nThe method tackles the internal data model of the resource, and it describes how the resource data\nis represented and accessed for the transformation. This method does not provide the resource\nprovenance information, so the resultant ontology does not keep the reference to the database. This\nmethod consists in\n27http://www.aifb.uni-karlsruhe.de\n28http://kaon.semanticweb.org/alphaworld/reverse/\n29http://flora.sourceforge.net/aboutFlogic.php\n2006–2008 c⃝Copyright lies with the respective authors and their institutions.\n",
  "speaker": "SYSTEM",
  "uuid": "da5749ae-730a-4375-a72e-57481e9a4c85"
}
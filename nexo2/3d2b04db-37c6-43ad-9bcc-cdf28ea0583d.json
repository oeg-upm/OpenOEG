{
  "message": "SYSTEM: Neon_2008_d2.2.2.pdf: Página 114\nPage 114 of 124\nNeOn Integrated Project EU-IST-027595\nWe experimented also with restricting possible classes and subclasses to terms found by TermRaider, a\nterm selection algorithm based on linguistic ﬁltering and tf-idf scoring. If we narrow the results to match\nonly subclasses which are also terms, this improves the precision but lower the recall a little. Adjusting\nTermRaider’s parameters to be a little more ﬂexible with patterns should improve the recall, however. For\nsubclass relations which are also terms, we ﬁnd 50 occurrences, of which 31 are correct (62%). Of these,\nthe Hearst patterns are almost entirely correct, though lacking a little in recall (95% correct, but only 20 are\nfound in total), while the patterns found by the other rules are 40% correct, which is double the previous\nscore, although only 30 are found in total.\n7.4.2\nInstances\nThe recognition of instances, on the other hand, was quite low in recall though with the same precision as\nthat of subclasses. In total, 21 instances were found, of which 10 were correct. Many of the incorrect results\nwere either as a result of erroneous named entity recognition (e.g. Harmonia axyridis Pupal stage eggs\nCoccinellidae was wrongly extracted as a named entity) or due to instances which are somewhat irrelevant\n(e.g. San Francisco Bay was extracted as an instance of principal area in the phrase “some of the principal\nareas are San Francisco Bay, Richardson Bay, Tomales Bay and Humboldt”, which is factually correct but\nnot useful to extract). The main reason for missing instances is that they were wrongly extracted either as\nsubclasses or synonyms.\n7.4.3\nSynonyms\n98 synonyms were found, of which 47 were correct (again 48%). Of the incorrect responses, some of the\nso-called synonyms were actually instances. For example, “A talking dolphin called Howard”, where Howard\nwas identiﬁed as a synonym of talking dolphin rather than as an instance. This was found to be simply due\nto a bug in the rule which prevented items identiﬁed as Entity from being classed as synonyms. Many of\nthe incorrect synonyms were due to the relationship between the two items only holding in a very particular\ncontext. For example, in the sentence “A modiﬁed slit called a spiracle is located just behind the eye”, the\nsystem identiﬁes modiﬁed slit as a synonym of spiracle. Clearly not all modiﬁed slits are spiracles: in fact,\nspiracle should be extracted as a subclass of modiﬁed slit. Since there are many of these examples, we need\nto look more closely at the rules governing these.\n7.4.4\nProperties\nAside from synonyms, the system found 107 class and instance properties. Of these, we analysed the ﬁrst\n50, of which 17 were correct, 13 were incorrect, 5 correct but irrelevant, and 15 were correct but had the\nwrong span of either the domain or range. An improvement to the results could be made by creating a stop\nlist of certain nouns which should not be included as possible ranges, perhaps restricting such nouns to\nterms, as with the subclasses.\n7.5\nDiscussion\nWe can see that the patterns implemented are far from foolproof, since unlike with a controlled language\nsuch as CLOnE, we cannot rely on a one-to-one correspondence between a simple syntactic structure and\nits semantics. First we have the problem of overgeneration. Already, we have discarded some potential\npatterns (such as some of the LSPs) that we consider to generate too many errors. Further reﬁnement is still\nnecessary here, either to remove other patterns or to reimplement them in a different way.\nOne of the main causes of overgeneration is caused by the span of the noun phrase describing the concept\nto be added to the ontology. We have experimented with different possibilities. A larger span provides\nﬁner distinctions and thus better classes, but overgenerates considerably, while a smaller span produces\n",
  "speaker": "SYSTEM",
  "uuid": "3d2b04db-37c6-43ad-9bcc-cdf28ea0583d"
}
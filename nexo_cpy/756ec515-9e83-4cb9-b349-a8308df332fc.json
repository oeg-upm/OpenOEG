{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 7\nBÚSQUEDA \n \n7 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \nescritura depende del entorno concreto con el que estemos trabajando. \nHabitualmente, se continúa en el bucle de lectura-evaluación-escritura o existe algún \nmodo sencillo de volver a él. \nSi un símbolo tiene un valor asociado, este valor es el resultado de la evaluación. \nPara encontrar una muestra de esta situación entre los ejemplos anteriores, hay que \nmirar con un poco más de detalle el proceso de evaluación de una expresión en la \nque aparezca una función definida por el usuario. Así, tras la evaluación de: \n \n> (defun cuadrado (x)   \n \n \n(* x x)) ===> CUADRADO \nsi introducimos: \n \n> (cuadrado 3) ===> 9 \nen el proceso (interno) de evaluación de esa expresión, se produce la ligadura del \nparámetro formal x con el (resultado de evaluar el) argumento 3, de modo que \ncuando se evalúa el cuerpo de la función (* x x), la evaluación de x (en cada \nocasión), produce el valor 3, obteniéndose finalmente el comportamiento observado \n(escritura de 9). Es importante resaltar que la ligadura del parámetro formal x con el \nparámetro real 3 es local al cuerpo de la función, de modo que su evaluación fuera \nde ese contexto producirá un error: \n \n> x ===> ¡¡¡¡ ERROR !!!! \nPor supuesto, también existen modos de ligar valores a símbolos de modo global. \nPero este aspecto será tratado más adelante. \nContinuamos explicando el modo de evaluación del resto de elementos Lisp que \nconocemos: las listas. En cierto modo, aquí se recoge el núcleo de la programación \nLisp, puesto que en Lisp definir un programa es escribir una lista (una definición de \nfunción que, habitualmente, se apoya en muchas otras) y ejecutar un programa no \nes más que evaluar una lista (una llamada a una función con ciertos argumentos). \n  \n– Listas: se comprueba que el primer miembro es un símbolo que tiene \nasociado un operador (predefinido o definido previamente por el usuario) y si esto no \nes cierto (bien porque el primer miembro no sea un símbolo, bien porque éste no \ntenga asociada una función) se produce un error: \n",
  "speaker": "SYSTEM",
  "uuid": "756ec515-9e83-4cb9-b349-a8308df332fc"
}
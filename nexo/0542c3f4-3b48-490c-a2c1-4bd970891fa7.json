{
  "message": "SYSTEM: D5.3.1-v1.0.pdf: Página 71\nD5.3.1 NeOn Development Process and Ontology Life Cycle \nPage 71 of 111 \n2006–2007 © Copyright lies with the respective authors and their institutions. \n \nbut they decide to carry out the ontology aligning activity and the ontology merging activity in \norder to reuse the selected ontologies or ontology modules. This possibility is shown as \nscenario 5 in Figure 20. \nIn this scenario, software developers and ontology practitioners carry out the ontology aligning \nactivity that results in a set of ontology alignments between the selected ontologies or ontology \nmodules (which normally model the same or similar domains). Once the ontology alignments \nhave been established, ontology developers can merge the ontologies or ontology modules \nusing such alignments to obtain a new ontology or ontology module by means of the ontology \nmerging activity.  \nIn this case, Figure 26 shows the ontology aligning activity viewed as a process (following the \n‘process’ definition in Section 2.1) composed of the ontology matching activity. \n \nFigure 26. Ontology Aligning Activity \nIf software developers and ontology practitioners decide to use the merged ontology or \nontology module as it is, then they should integrate the ontology or module codes in the \nontology network code developed following the activities of scenario 1 (Section 4.1). \n Outcomes: The principal outcome is a network of ontologies that represens the expected \ndomain implemented in an ontology language (OWL, F-Logic, etc.). Additionally, a broad range \nof documents including the requirements specification, the ontology documentation, the \nontology evaluation, etc. will be generated as output of different activities. \nFurthermore, a merged ontology or ontology module created from those selected for reuse is \ngenerated. Alignments between the selected ontologies or ontology modules are also output of \nthis scenario. \n4.6. Scenario 6: Building Ontology Networks by Reusing, Merging and \nReengineering Ontologies or Ontology Modules \n Assumptions: It is supposed that software developers and ontology practitioners “want” to use \nexisting ontologies or ontology modules by means of merging and reengineering them before \nthey are reused in the ontology network building.  \n Prerequisite resources: Knowledge of the domain (general or specific) of the ontology \nnetwork to be developed should be available for building the ontology network. \nFurthermore, ontologies or ontology modules related to the domain to be covered by the \nontology network to be developed should be available. \n Sequence of activities: This scenario has the same sequence of activities as scenario 5 \n(Section 4.5); however, in this case, software developers and ontology practitioners decide not \nto use the merged ontology or ontology module as it is, but to reengineer the merged \nontologies or ontology modules. Once they have reengineered such merged ontologies or \nmodules by means of the ontology reengineering activity, they should integrate the result of \nsuch activity (code, conceptualization, specification, or scope) in the corresponding activity of \nscenario 1 (Section 4.1). \n",
  "speaker": "SYSTEM",
  "uuid": "0542c3f4-3b48-490c-a2c1-4bd970891fa7"
}
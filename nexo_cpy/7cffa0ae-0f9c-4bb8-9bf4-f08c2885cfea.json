{
  "message": "SYSTEM: Wiki: https://delicias.dia.fi.upm.es/wiki/index.php/Art%C3%ADculos_relacionados_con_el_data_provenance \n\nAutores :\nJennifer Goldbeck y James Hendler.\nFecha :\n15 de Noviembre de 2006. MaryLand\nEl provenance es crítico para los sistemas científicos, dado que permite  verificar datos, repetir experimentos y descubrir dependencias. En este artículo se presenta una aproximación semántica del \"Desafío Provenance\", usando Web services, ontologías y razondadores OWL entre otros.\nActualmente la búsqueda por palabras clave está bastante desarrollada, pero no así las imágenes, audio o video.\nLos lenguajes de la web semántica son 3 principalmente: Resource Description Framework,(RDF), RDF Schema(RDFS) y Web Ontology Lenguage (OWL). Se usan para escribir ontologías y describir modelos para codificar los datos.\nFuncionamiento\n:\nCada uno de los archivos tiene asignada una URI, que permite referenciar los archivos en documentos semánticos y transmitir las referencias mientras ejecutamos el flujo de trabajo. Cada proceso es encapsulado en un webservice, que recupera los archivos y ejecuta el proceso, creando los archivos de salida. A su vez cada uno de los archivos de salida es almacenado y tendrá su correspondiente URI, por lo que será accesible desde cualquier lado. Con cada ejecución también se guarda un archivo OWL en el servidor, que también posee la URI identificativa.\nUna vez termine el proceso, se devolverá como resultado todos los String de los ficheros de salida.\nTodo el flujo de trabajo lo lleva acabo un web service (Workflow Execution Service, WES). Se encargará de invocar los servicios representantes de los procesos en el flujo de trabajo, pasar las URIs de los archivos de entrada, y de obtener las URIs de los ficheros de salida.\nRepresentación de la información\n:\nSe ha generado la ontología de manera que no es totalmente genérica, sino con la idea de que sea modificada o extendida por los programadores que la usen.\nLa clase raíz es \"Recurso\", bajo las cuales se organizan las clases \"Archivos\". Las clases están conectadas mediante propiedades, que recogen los datos que hemos grabado para cada clase de objetos.\nEjecución de servicio: clase que describe una ejecución de un servicio específico. Se usa para almacenar la fecha, hora, inputs y putputs the la invocación.\nArchivo: representa la parte de provenance para todos los archivos producidos por el flujo de trabajo. Se usa para almacenar los propios datos así como para conectar otros archivos a las clases \"Ececución de servicio\" correspondientes.\nFlujo de trabajo: sirve para representar el flujo completo de la ejecución. Almacenará tanto las fechas de comienzo y fin como todas las ejecuciones de servicio que hayamos generado.\nComparación con otras propuestas\n:\nEl beneficio de la alternativa que se propone en este artículo es que está basada completamente en la web, siendo un sistema sistema distribuido e independiente. Además básicamente todos los formatos pueden ser convertidos a una representación RDF, por lo que el frontend usado se puede usar para interactuar con la información.\nEn conclusión, el artículo resume que ha conseguido alcanzar los objetivos que se ha propuesto, pero que actualmente están invirtiendo sus esfuerzos en métodos para filtrar los resultados basándose en la confianza y cómo utilizarla cuando hay múltiples fuentes para un un archivo. Admite que los filtros sociales son comunes cuando hablamos de datos científicos, y que un sistema automático para usarla en un sistema con provenance podría resultar interesante y útil.\nUsing trust and Provenance for content filtering on the semantic Web\n\nAutores :\nJennifer Goldbeck y Aaron Mannes, ambos de la universidad de Marylannd\nFecha :\nMayo 2006, para la WWW2006, Edinburgo, UK\nArtículo en el que se enfatiza la importancia de la confianza, provenance y anotaciones en la web semántica. Propone un algoritmo para inferir relaciones de confianza usando el provenance, y por último 2 aplicaciones en las que se usa como ejemplo.\nLas anotaciones acerca de la confianza son particularmente interesantes, puesto que pueden ser aplicadas de dos maneras: En primer lugar, se pueden dar recomendaciones acerca de cuánto un usuario debería confiar en otro basándose en los caminos que los comunican en una red social.\nEn segundo lugar, si además disponemos de información de provenance en el sistema, podemos filtrar la información que le llega al usuario basándonos en la confianza que tenga de la fuente que hizo la anotación.\nCuando dos individuos están directamente conectados en una red, pueden tener puntuaciones de confianza del otro. Si no están conectados directamente, no tienen información de confianza desde un principio. Sin embargo, los caminos que les conectan a través de la red pueden contener información acerca de cuánto es probable que confíen el uno en el otro.\nEvidentemente las inferencias de confianza no van a ser tan precisas como una puntuación directa. Surgen dos cuestiones: cuánto afectan las personas intermedias a la confianza inferida, y la longitud total del camino.\nAlgoritmo\n:\nLa idea es que el nodo fuente comienza una búsqueda por el nodo destino. Pregunta a cada uno de sus vecinos para que le de su opinión sobre el destino, y éstos repetirán el proceso llevando la cuenta de la lejanía respecto a la fuente. \nLa fuerza del camino a cada vecino es la mínima puntuación  de la fuente al nodo y la puntuación del nodo al vecino. Cada vecino graba el camino con más fuerza hacia el destino, y se establece la profundidad a la máxima profundidad disponible.\nUna vez completado, se fija el umbral escogiendo el máximo de los caminos que se dirigen al destino. Cualquier nodo puntuado por encima de este umbral será el accedido por sus vecinos para que les de la información de confianza.\nPara ilustrar el algoritmo, el artículo hace pruebas con dos aplicaciones diferentes: un  recomendador de películas y una red de confianza entre agencias de inteligencia para determinar la validez de los informes acerca de objetivos o de evaluación.\nEn el primer caso, no parece funcionar muy bien debido a que se habían votado masivamente las cincuenta mejores películas, e interferían demasiado con el algoritmo como para dar alternativas mejores. Sin embargo, para la gente que discrepaba con la media, se ofrecían mejores propuestas. Se concluye diciendo que el mejor método sería una mezcla entre la solución propuesta y los métodos de filtrado colaborativo con los que se compararon los resultados.\nEn el segundo caso, resulta una herramienta útil para la comunidad de inteligencia. Basándose también en el provenance, obtenemos un análisis básico para comprender cómo funciona la propia comunidad y cómo analiza la información.\nAnnotation and Provenance Tracking in Semantic Web Photo Libraries",
  "speaker": "SYSTEM",
  "uuid": "7cffa0ae-0f9c-4bb8-9bf4-f08c2885cfea"
}
{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 37\nBÚSQUEDA \n \n37 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \nsimple. En la mayoría de las aplicaciones los espacios de estados que aparecen son \nsimples (compruébese con todos los ejemplos aparecidos hasta el momento), por lo \nque en el resto del texto nos olvidaremos de la posibilidad de que algunos grafos de \nestados pueden ser no simples. \nTerminamos este apartado haciendo una comparación entre la teoría algorítmica de \ngrafos y la búsqueda en Inteligencia Artificial. Los principales esquemas algorítmicos \n(recorrido en anchura, en profundidad, caminos óptimos, algoritmos voraces, etc.) \nson comunes a ambos campos, pero en la teoría de grafos se supone que el grafo \nque se recorre, o en el que se busca, es explícitamente conocido. Se trata de un \ndato para el problema que habitualmente está almacenado en una estructura de \ndatos (lo que excluye el tratamiento de grafos infinitos). Sin embargo, la búsqueda \nen espacios de estados no supone que el árbol o grafo esté previamente generado. \nNo asume tampoco que se tengan que generar todos los estados (sólo serán \ntratados los estados necesarios para resolver el problema). Esto es imprescindible si \nse tiene en cuenta que los problemas que ataca la Inteligencia Artificial suelen ser \nsumamente costosos en espacio y tiempo. Lo anterior es cierto incluso en los \nejemplos que parecen más inofensivos. Por ejemplo, el grafo del 8-puzzle tiene … \n¡362.880 vértices! (explosión combinatoria). De hecho, en la búsqueda en espacios \nde estados, ni siquiera es necesario que el espacio de estados aparezca de ningún \nmodo reconocible dentro de los algoritmos (aunque el espacio de estados siempre \nserá un marco en el que entender el desarrollo de la ejecución de los algoritmos). Si \nel espacio de estados es (parcialmente) almacenado o tenido en cuenta por el \nalgoritmo de búsqueda, obtenemos la clase más importante de sistemas de \nproducción / estrategias de búsqueda: la exploración en grafos de estados. \n(Habitualmente en este tipo de sistemas de producción el almacenamiento consiste \nen listas de nodos: estados enriquecidos con algún tipo de información que, en \nparticular, codifica las relaciones de adyacencia; volveremos sobre esta importante \nnoción en los temas siguientes.) \n \n",
  "speaker": "SYSTEM",
  "uuid": "840b51a7-e253-47e2-9a86-90c2a68b9f6c"
}
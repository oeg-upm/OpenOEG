{
  "message": "SYSTEM: Planing_Scheduling.pdf: Página 6\n \nAnalyzing the answers in Table 3, we can say that  \n \nThe students perceived gOntt as a useful \nscheduling tool. \n \nThe students in general perceived as a positive and \nuseful issue the fact that gOntt provided them with \nmethodological guidelines for each process and \nactivity involved in the ontology development.  \n \nRegarding the functionality of triggering NeOn \nToolkit plug-ins, their opinion was divided, but in \ngeneral, they tended to consider it as a good idea.  \nAdditionally, \nthe \nstudents \nprovided \ngeneral \ncomments that can be summarized as follows: \n \ngOntt is considered a good scheduling tool that is \nbased on activities and processes of the ontology \nengineering field. \n \ngOntt is considered a good help in providing a \npreliminary schedule for a development project. \n \ngOntt is considered one of the easiest tool for \ncreating Gantt charts, thanks to its simple wizard. \n \ngOntt is seen as a centralized environment that \nallows the user to obtain methodological and \ntechnological guides without searching in external \nlocations.   \nThe students also commented that the tool \nestablished at random the length of the processes and \nactivities planned and not according to previous \nexperiences. They also missed the functionality of \nexporting the schedule to Microsoft Project. \n \n7. Conclusions and future work \n \nThis paper outlines the methodological basis for \nscheduling \nontology \ndevelopment \nprojects \nand \nexplains the technological infrastructure, gOntt, which \nsupports the automatic generation of the initial \nontology development plan using a Gantt chart. \ngOntt, which is integrated within the NeOn Toolkit, \nis the first tool that has been created for systematizing \nthe planning and scheduling of ontology projects. It \nuses templates and decision trees to create initial \nontology development project schedules in the form of \nGantt charts. In addition, gOntt is the first meta-tool \nthat helps ontology developers to execute ontology \ndevelopment \nprojects. \nIt \nincludes \nprescriptive \nmethodological guidelines and informs about the \nrecommended tools to use when performing a process \nor activity in an ontology development. \nIn short, the most important difference between \ngOntt and Microsoft Project is that while in gOntt the \nsystem generates automatically the initial ontology \ndevelopment plan, in Microsoft Project the user selects \na particular project template from the library. \nFurthermore, gOntt is the only planning tool for \ncreating and managing project schedules that provides \ndevelopers with (a) the guidelines to how to execute \nthe project and (b) the recommended tools to be used \nduring the project execution. \nThe work described in this paper has important \nimplications for our further research for two mains \nreasons. The first one, as soon as the tool is used by \nthe \ncommunity, \nwe \nwill \nconduct \nadditional \nexperiments. The second, we plan (a) to integrate \ngOntt with the works carried out by the ONTOCOM \nteam for predicting the total costs of the ontology \ndevelopment project, and (b) to propose how long \nprocesses and activities should take by considering \npast \nand \npresent \nexperiences \nwithin \nontology \ndevelopment. \n \nAcknowledgments. This work has been partially \nsupported by the projects NeOn (FP6-027595) and \nBuscaMedia (CENIT 2009-1026). \n \n8. References \n \n[1] Taylor, J.C.: Project Scheduling and Cost Control: \nPlanning, Monitoring and Controlling the Baseline. J. \nRoss Publishing, 2008, ISBN: 9781932159110 \n[2] Stellman, A., Greene, J.: Applied Software Project \nManagement. 2005. ISBN: 0-596-00948-8 \n[3] Gómez-Pérez, A., Fernández-López, M., Corcho, O.: \nOntological Engineering. Springer Verlag. Advanced \nInformation and Knowledge Processing series. ISBN 1-\n85233-551-3. November 2003 \n[4] Staab, S., Hans, P., Studer, R., Sure, Y.: Knowledge \nProcesses and Ontologies. IEEE Intelligent Systems \n16(1): 26–34. (2001) \n[5] Pinto, H.S., Tempich, C., Staab, S.: DILIGENT: \nTowards a fine-grained methodology for DIstributed, \nLoosely-controlled and evolvInG Engineering of \noNTologies. 16th European Conference on Artificial \nIntelligence (ECAI 2004), pp. 393-397 \n[6] Simperl, E., Popov, I., Bürger, T.: ONTOCOM \nRevisited: Towards Accurate Cost Predictions for \nOntology Development Projects. In: Proceedings of the \nEuropean Semantic Web Conference 2009 (ESWC '09) \n[7] Suárez-Figueroa, M.C., Gómez-Pérez, A.: First Attempt \ntowards a Standard Glossary of Ontology Engineering \nTerminology. \n8th \nInternational \nConference \non \nTerminology and KE (TKE 2008). ISBN: 87-91242-50-\n9. Pp 1-15. Copenhagen, Denmark. August 2008 \n[8] Larman, \nC.: \nApplying UML and patterns: an \nintroduction to object-oriented analysis and design and \nthe unified process. Second edition. Pearson Education, \nInc. 2002. ISBN: 0-13-092569-1 \n[9] Suárez-Figueroa, \nM.C., Gómez-Pérez, A.: NeOn \nMethodology for Building Ontology Networks: a \nScenario-based Methodology. In Proceedings of the \nInternational Conference on Software, Services and \nSemantic Technologies (S3T 2009). ISBN: 978-954-\n9526-62-2. Pp: 160-167. Sofia, Bulgary. October 2009 \n",
  "speaker": "SYSTEM",
  "uuid": "86c170af-4e94-4e37-beec-8c48cafc1c5c"
}
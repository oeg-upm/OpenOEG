{
  "message": "SYSTEM: OEG_submission_SSN2014.pdf: Página 2\ning data streams using SPARQLStream [6]. Clients register queries in SPARQL-\nStream, which extends SPARQL operators to perform continuous queries over\nstreams. The Query Rewriting module translates SPARQLStream to SPARQL\nand sends the translated query to be processed. R2RML mappings are used to\nconvert data streams to streams of RDF triples.1 The Query Processing module\npulls data from streaming engines, such as Esper or GSN. Then, query results in\nthe form of tuples are sent to the Data Translation module that converts them\nto RDF triples using R2RML.\nFig. 1. Morph-streams information ﬂow diagram (adapted from [6]).\nIn order to enhance the query processing part of morph-streams, features\nfrom existing solutions for large-scale stream processing, e.g. Storm,2 Spark\nStreaming,3 or CQELS Cloud [11],4 are being considered for the extension of the\nsystem. At this moment, we use Storm topologies to manage the data stream\npolling/pushing and the query processing. Storm topologies are formed by spouts\nand bolts.5 Spouts are stream sources, whereas bolts are stream processors.\n3\nTowards Eﬃcient Processing of Queries over RDF\nStreams\nHeterogeneous data streams are generated from diﬀerent sources, at diﬀerent\nrates, and include multiple domains. Our purpose is to build a distributed stream\n1 http://www.w3.org/TR/r2rml/\n2 http://storm.incubator.apache.org/\n3 http://spark.incubator.apache.org/streaming/\n4 https://code.google.com/p/cqels/wiki/CQELSCloud\n5 https://github.com/nathanmarz/storm/wiki/Tutorial\n",
  "speaker": "SYSTEM",
  "uuid": "aacce38c-9bf0-4eb9-bb27-98b938c12874"
}
{
  "message": "SYSTEM: NeOn_2007_D5.3.1.pdf: Página 79\nD5.3.1 NeOn Development Process and Ontology Life Cycle \nPage 79 of 111 \nThe main difference, and thus contribution, of this model is that in ontology engineering we do not \ndeal with “subsystems” as in Software Engineering, but with ontologies or ontology modules (work \non ontology modules is being carried out in WP1). That is, this model proposes to divide the \nontology network requirements in different parts and to develop each part in a different cycle as an \nontology (if we are developing an ontology network) or as an ontology module (if we are \ndeveloping a networked ontology embedded in a network of ontologies). A mixed approach can be \nalso applied. Each set of requirements is completely developed and maintained following any type \nof waterfall ontology network life cycle model of those presented in Section 5.1.1. So, as a \nsummary we can say that the ontology network grows in layers (in a concentric way). \n5.1.3. Iterative Ontology Network Life Cycle Model \nThe main characteristic of this model (as that of its homonymous in Section 2.3.4) is to divide all \nthe requirements into small parts and to develop the ontology network including partially \nrequirements from all the parts. \nAs in the model presented in Section 5.1.2, the requirements are divided into parts, but in this \nmodel ontologies and ontology modules satisfying each requirement part are developed in a non \ncomplete manner in each cycle; the idea here is to improve increasingly the ontologies or ontology \nmodules in the next cycles. In each iteration different uncompleted parts of the network are \nimproved, until all the requirements are included. For example, in the first iteration we deal with \nconcepts and then in the next iteration we can improve the ontology with properties, etc. \nEach cycle follows any type of waterfall ontology network life cycle model of those presented in \nSection 5.1.1.    \n5.1.4. Evolving Prototyping Ontology Network Life Cycle Model \nThe main feature of this model (as that of its homonymous described in Section 2.3.5) is the \ndevelopment of a partial product (in this case, partial ontology network) which meets the \nrequirements best understood. But in the case of ontology network, this model includes the \nevaluation and assessment carried out during the development. The preliminary versions of the \nontology network being developed (that is, the prototypes) permit the user to give feedback of \nunknown or unclear requirements.  \n5.1.5. Spiral Ontology Network Life Cycle Model \nThe main feature of the spiral ontology network life cycle model is that it follows the same \nphilosophy as its homonymous model (Section 2.3.7) and proposes a set of repetitive cycles, \nbased on waterfall and prototype models.  \nIn Software Engineering the homonymous model divides the space into four quadrants: \nmanagement planning, formal risk analysis, engineering, and customer assessment. However, in \nthis model, taking into account the special characteristics of ontology networks, the space is \ndivided into three section, as Figure 33 shows. This differentiation is based on the need to evaluate \nand assess all the outputs of all the ontology network stages, but not after the engineering phase \nas it happens in software projects.  \nIn this model it is assumed that the requirements are not completely known at the beginning of the \ndevelopment, and that they can change along the life of the ontology network. \nThis life cycle model consists of the following three repetitive phases: \n Planning: in this phase it is carried out the whole schedule for the ontology network \ndevelopment and the specification of the ontology network requirements. \n2006–2007 © Copyright lies with the respective authors and their institutions. \n \n",
  "speaker": "SYSTEM",
  "uuid": "f8354eed-22ea-4b90-89f4-701d554eb77a"
}
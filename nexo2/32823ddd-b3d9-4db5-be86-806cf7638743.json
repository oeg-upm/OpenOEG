{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 90\nBÚSQUEDA \n \n90 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \n3) La función expandir-nodo puede ser expresada en notación algorítmica del \nsiguiente modo: \nExpandir-nodo (n) --> lista nodos \ne := estado-de-nodo (n) \n(e1, ..., er) := expandir-estado (e) \nlista-nuevos-nodos := () \nDesde i = 1 hasta r hacer \n Construir un nodo ni con informaciones: \n  estado de ni : ei \n  g, coste de ni : coste-arista (e,ei) + valor de g en el nodo n \n  padre de ni : n \n Añadir el nodo así construido a la lista-nuevos-nodos \ndevolver (lista-nuevos-nodos) \nVeamos un ejemplo artificial del funcionamiento de la estrategia \"primero el menos \ncostoso\" en árbol. Consideremos el árbol de estados de la figura 1, en el que los \nestados son letras, el estado inicial es I y los dos únicos estados objetivos son O1 y \nO2. El coste de las aristas ha sido anotado al lado de cada una de ellas. \nI \nA \nB \nC \nD \nH \nO1\nE \nF \nG \nO2\n4 \n1 \n1 \n2 \n2 \n3 \n4 \n3 \n2 \n1 \n \nFigura 1 \nEl árbol de búsqueda ha sido recogido en la figura 2, en la que aparecen todos los \nestados generados (todos en este ejemplo), la información g aparece al lado de los \nestados (la información padre está implícita por tratarse de un árbol de búsqueda) y \nlos nodos han sido numerados (con números subrayados) según van siendo \nexplorados (así, un estado no numerado quedará en un nodo de ABIERTOS y un \nestado numerado, y no objetivo, quedará en CERRADOS). En caso de conflicto \n",
  "speaker": "SYSTEM",
  "uuid": "32823ddd-b3d9-4db5-be86-806cf7638743"
}
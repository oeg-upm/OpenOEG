{
  "message": "SYSTEM: RQRQR.pdf: Página 2\nthe publication of RDF data according to the Linked Data guidelines, some of\nthese tools originated earlier as a means to create wrappers in ontology-based\ninformation integration architectures [2]. This will be the focus of this paper.\nFinding answers in information integration scenarios requires a logical and\nphysical path search. The former consists on ﬁnding rewritings of the query\nthat keep the semantics. The latter consists in ﬁnding the physical information\nsources that provide the relevant information for the rewritten query [3]. Thus\nin information integration the rewriting consists on these two aspects. On the\none hand the concepts involved in the query can be replaced by the combination\nof other concepts according to the inference enabled by the TBox. On the other\nhand, once the relevant concepts have been found it is necessary to pose the\nqueries to the original sources of information, for which the mappings, either\nGAV, LAV or GLAV [4], between this TBox and the local schemas of the sources\nare used.\nIn information integration scenarios using ontologies [2,5] description logic\n(DL) has been applied extensively. The TBox normally takes the role of the\nglobal schema [6] in the description of the contents of the integrated ABoxes,\nwhich are constructed from the distributed data sources.\nThis knowledge base provides a more expressive description of the infor-\nmation contained in these ABoxes and allows the use of reasoning for query\nanswering [7]. The reasoning procedure uses the TBox for the rewriting of the\noriginal query according to the rules deﬁned for the ontology language used. As\nthe expressiveness of the ontology language increases so do the number of rules,\nand thus the complexity of this process. After the rewriting, a greater number\nof simpler queries are generated, whose combination will provide the results for\nthe original query. However, performing this reasoning introduces an eﬃciency\npenalty in the query answering process, and thus most RDB2RDF systems with\nrun-time query answering approach do not use any reasoning [1].\nMoreover, when the ABox is generated from a RDB by the use of an RDB2RDF\ntool and a TBox is added for the provision of reasoning capabilities, the presence\nof concepts and relations in the TBox that are not covered in the RDB2RDF\nmappings is not uncommon. This is even mroe common in information integra-\ntion scenarios, where the same TBox, as a global schema, covers several ABoxes.\nIn these scenarios, the previously stated logical path search corresponds with the\nreasoning performed to deduce predicates that contain answers that are correct\nfor the predicates in the original query. Reasoning in those cases can be seen\nas a navigation through the clauses in the TBox, from the predicates in the\noriginal query to those oﬀered by the RDB2RDF mappings. If a predicate is the\nhead in several clauses in the TBox, all of them will provide correct answers for\nthis predicate, but when only some of them lead to RDB2RDF mappings and\nthe remaining clauses do not provide answers, these remaining clauses can be\nremoved from the obtained query plan.\nPruning these clauses that do not provide any solution leads to a reduction\nin the number of clauses that the system has to handle, which causes an increase\nin the eﬃciency of the whole process. As usual, the sooner the information that\n",
  "speaker": "SYSTEM",
  "uuid": "939fb66a-3e79-46b6-8520-56687edce579"
}
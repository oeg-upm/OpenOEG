{
  "message": "SYSTEM: Wiki: https://delicias.dia.fi.upm.es/wiki/index.php/GeoLinkedData \n\nLuis:\nImagínate un dataset de actividades acuáticas y el punto/segmento X del Ebro es donde se realiza Kayak. Para qué vincularlo con toda la geometría del Ebro si esa actividad se produce en un punto concreto, punto que tienes en un determinado dataset.\nAlex:\nEl ejemplo del kayak es bueno pero yo diría que no es realista. Si tú tienes información sobre este sitio donde se hace kayak lo más probable que sepas tres cosas: el lat, el long, y que esta en el Ebro. Si tu quieres linkear esto a GeoLinkedData no vas a ponerte a buscar entre todos los puntos de la geometría del Ebro hasta encontrar el punto que más se asemeje a tu lat,long para hacer el link a ese punto.  Simplemente harías explícita la posición del centro de kayak creando un nuevo punto con el lat,long y utilizarías un predicado como isLocatedIn para linkear con geoes:Río/Ebro\nTodo esto me hace pensar:\n1) ¿Puede, en Linked Data, coexistir RDF con otros formatos que son application-specific? En este caso, ¿es RDF más bien un lenguaje de \"metadatos\" que ofrece con una semántica explícita los attributos mas relevantes del recurso y sus relaciones con otros recursos?\n2) ¿Cual es el valor de modelar la geometría en RDF? Mi argumento era que ofrecía los datos geométricos en un lenguaje transparente y que es application-independent. ¿Que han hecho los demás? ¿Somos los únicos ofreciendo datos geométricos (e.g. polígonos) en RDF (me refiero solo a datos, porque las ontologías existen)?\n3) Dbpedia y la mayoría de la gente publicando datos geo en linked data está usando\ngeo:lat\ny\ngeo:long\ncomo attributos del recurso, mientras que nosotros  usamos un recurso aparte para la posición. Por ejemplo:\nDBPedia:\n<Madrid> <\ngeo:lat\n> \"12\" .\n<Madrid> <\ngeo:long\n> \"45\" .\nGeoLinkedData.es\n<Madrid> <\ngeo:geometry\n> <Point_12_45> .\n<Madrid> <rdf:type> <\ngeo:Point\n>\n<Madrid> <\ngeo:lat\n> \"12\"\n<Madrid> <go:long> \"45\"\n¿Estamos nosotros en lo correcto? Yo pienso que sí porque el recurso (Madrid) y el punto donde dice estar localizado son cosas distintas. Por ejemplo el mismo recurso puede tener varias posiciones cada una en distintos sistemas de coordenadas o a distintas escalas. También se me ocurre que un recurso podría tener posiciones distintas en distintos intervalos de tiempo (algo que se mueve). Bueno el hecho es que nosotros somos \"the strange kids from the block\" así que si creemos que estamos en lo correcto deberíamos \"speak up\". Sin embargo debemos preguntarnos también: ¿Estamos complicando las cosas sin necesidad?\n4) Si vamos a tener el campo\ngeo:gml\ndebemos ser completos. Un Punto es una geometría, es más, en nuestro modelo es la unidad básica de cualquier geometría. Así que si vamos a tener un campo GML para las geometrias tambíen los puntos se merecen tenerlo, gml=\"POINT(12,45)\"\n5) Si vamos a manter las geometrias en RDF entonces tenemos que resolver el problema con el orden de los puntos. Adjunto la última propuesta (no muy completa) que se envió (no sé si ustedes allá han pensado en algo nuevo) para que la evaluemos.\nOscar:\nBuen contraejemplo... Que alguien abra en el wiki este ejemplo y ponga las posturas, por si podemos reflexionar en algún momento sobre ello cuando escribamos algo, o para tener un \"ideario\" que mostrar al público si nos preguntan. Esto incluye también por ejemplo la respuesta a Gio, etc. Sería además bueno contrastar en algún momento con lo propuesto con John Goodwin, mi amiguete de Ordnance, para ver qué piensa...\nBoris/Victor/Oscar:\nFor example, let's suppose that you are going for holidays to visit the Mora Municipality in Spain. Since you practice water-related sports, you may want to know resources for this within a specific distance (bounding box) of this municipality (e.g., beaches, lakes, rivers or something similar).\nIn the geospatial context, the transformation and publication of the OpenStreetMap [1], Ordnance Survey [2], and GeoLinkedData [3] data according to the Linked Data principles have added a new dimension to the Web of Data. In this way spatial data can be retrieved and interlinked.\nFor our example, we query the GeoLinkedData [3] for that purpose. GeoLinkedData [3] has geospatial resources like rivers, lakes, reservoirs, etc. Most of these resources have associated geometry objects. These geometry objects consist basically of points, and linestrings, for example, the course of a river. SPARQLing for them and putting them on a map isn't too hard.  So, you can express this query in SPARQL.\nNext, the (inefficient) query without geospatial support\nPREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>\nSELECT  ?subject ?label ?latitude2 ?longitude2\nWHERE {\n<http://geo.linkeddata.es/resource/Municipio/Mora> <http://www.w3.org/2003/01/geo/wgs84_pos#geometry> ?g.\n               ?g geo:lat ?latitude. ?g geo:long ?longitude.\n               ?subject <http://www.w3.org/2003/01/geo/wgs84_pos#geometry> ?g2. ?g2 geo:lat ?latitude2. ?g2 geo:long ?longitude2.\n               ?subject rdfs:label ?label.\n               FILTER(xsd:double(?latitude2) - xsd:double(?latitude) <= 0.1 && xsd:double(?latitude) - xsd:double(?latitude2) <= 0.1 &&\n               xsd:double(?longitude2) - xsd:double(?longitude) <= 0.1 && xsd:double(?longitude) - xsd:double(?longitude2) <= 0.1 &&\n               lang(?label) = \"es\").\n}\nlimit 20\nNext, a similar query with RDF-based geospatial support\nPREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>\nSELECT ?subject ?latitude2 ?longitude2 (bif:st_distance(bif:st_point(?longitude,?latitude),\n             bif:st_point(?longitude2,?latitude2)) ) as ?distancia ?latitude ?longitude\nWHERE {\n<http://geo.linkeddata.es/resource/Municipio/Mora> geo:geometry ?g .\n                ?g geo:lat ?latitude. ?g geo:long ?longitude.\n                ?subject geo:geometry ?g2.\n                ?g2 geo:lat ?latitude2. ?g2 geo:long ?longitude2.\n} limit 20\nAs you may know there are some SPARQL extensions for geometry and geographical data, and people are using that. You can check the Virtuoso mailing list to see how many people are asking/using the Virtuoso geospatial features. And there are lots of additional queries that you can do, for example: distance between two resources, intersection with respect a point, etc. Of course, this does not necessarily have to substitute (either partially or completely) the native support that many geographical databases already provide, and for which they are very well designed and tested in production environments. The situation is that sometimes it may prove to be interesting to have (some of) this data in RDF as well, so that inclusion in SPARQL queries is easier. It may be considered similar to why we make transformations of (partial or complete) relational databases into RDF.\nLuis:\nOtro ejemplo de geometría (puntos)\nAnte un posible accidente en carretera, resulta más útil tener los puntos que componen la geometría de una carretera para indicar \"exactamente\" dónde se localiza el punto/km que tener la geometría completa de la misma.\nContinuando con el ejemplo de las carreteras, puede resultar útil tener los puntos/segmentos que componen la geometría de una determinada carretera para indicar dónde está cortada por nieve, dónde hay un control policial o dónde se están haciendo obras...\nTo do list\n\nRegistro\n\n· Ontologías (hydrOntology, Red hydrOntology, Red GeolinkedData) - Marzo\n   · Software (geometry2RDF, Map4GeoRDF, NOR2O) - Marzo/Abril\nWeb\n\n· Actualización website\n   . Geometry2RDF - improve\n   · GeolinkedData ontology (descripción+owl)\n   · Noticias Geometry2RDF...\n   · Visualizador con servicios OGC\nOntologías\n\n· Multilingüismo (@en, eu, ca, gl)\n   · Revisar ontologías (por si falta alguna)\n   · Modelo geometría\nEndpoint\n\n· Generación RDF para distintos datasets (URI datasets) \n   · Virtuoso comercial version - status\n   · Medatada  - Datasets\nLinks\n\n· Continuar Geolinked Data owl:sameAs DBpedia/Geonames...\n   · Evaluación colaborativa de owl:sameAs\nRevisión planning Miguel Ángel\n\nDifusión",
  "speaker": "SYSTEM",
  "uuid": "f1d73e05-798c-452c-9730-f9e23ca54d00"
}
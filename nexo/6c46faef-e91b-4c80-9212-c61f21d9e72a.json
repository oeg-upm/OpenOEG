{
  "message": "SYSTEM: Wiki: https://delicias.dia.fi.upm.es/wiki/index.php/LinearRoad \n\n</conceptmap-def>\n<!-- Toll --------------------- -->\n\t<conceptmap-def name=\"http://ontology.oeg.dia.fi.upm.es/linearroad/PositionReport\" identify-by=\"PositionReport\">\n\t\t<has-table name=\"TollStr\" />\n\t\t\n\t\t<uri-as encodeURI=\"false\">\n\t\t\t<operation oper-id=\"concat\">\n\t\t\t\t<arg-restriction>\n\t\t \t\t\t<has-value>http://ontology.oeg.dia.fi.upm.es/linearroad/toll_<has-value>\n\t\t\t\t</arg-restriction>\n\t\t\t\t<arg-restriction>\n\t\t\t\t    <has-column datatype=\"int\">CarSegStr.carId</has-column>\n\t\t\t\t</arg-restriction>\n\t\t\t\t<arg-restriction>\n\t\t\t\t    <has-value>_<has-value>\n\t\t\t\t</arg-restriction>\n\t\t\t\t<arg-restriction>\n\t\t\t\t    <has-column datatype=\"int\">CarSegStr.timestamp</has-column>\n\t\t\t\t</arg-restriction>\n\t\t\t</operation>\n\t\t</uri-as>\t\t\n        \n        <attributemap-def name=\"http://ontology.oeg.dia.fi.upm.es/linearroad/amount\">\n\t\t\t<selector>\n                <aftertransform>\n                    <operation oper-id=\"constant\">\n                        <arg-restriction on-param=\"const-val\">\n                            <has-column>TollStr.amount</has-column>\n                        </arg-restriction>\n                    </operation>\n                </aftertransform>\n            </selector>\n        </attributemap-def>\n\t\n\t\t<dbrelationmap-def name=\"http://ontology.oeg.dia.fi.upm.es/linearroad/chargedTo\"\n\t\t\t    to-concept=\"car\">\n\t\t\t<joins-via joins-type=\"left\">\t\n                <condition oper-id=\"equals\">\n                    <arg-restriction on-param=\"value1\">\n                        <has-column>TollStr.carId</has-column>\n                    </arg-restriction>\n                    <arg-restriction on-param=\"value2\">\n                        <has-column>CurActiveCars.carId</has-column>\n                    </arg-restriction>\n                </condition>\n            </joins-via>\n \t\t</dbrelationmap-def>\n \t\t\n \t\t<dbrelationmap-def name=\"http://ontology.oeg.dia.fi.upm.es/linearroad/segment\"\n\t\t\t    to-concept=\"segment\">\n\t\t\t<joins-via joins-type=\"left\">\t\n                <condition oper-id=\"equals\">\n                    <arg-restriction on-param=\"value1\">\n                        <has-column>TollStr.seg</has-column>\n                    </arg-restriction>\n                    <arg-restriction on-param=\"value2\">\n                        <has-column>Seg.seg</has-column>\n                    </arg-restriction>\n                </condition>\n            </joins-via>\n \t\t</dbrelationmap-def>\n\n \t</conceptmap-def>\nQueries\n\nWARNING\n: NEEDS TO BE UPDATED\nSegAvgSpeed:\nThe average speed of the cars in the segment over the last 5 min.\nSPARQL-stream\nSELECT RSTREAM ?expWay ?dir ?seg ?avgSpeed\n    FROM STREAM <\nhttp://oeg.dia.fi.upm.es/linearroad/stream/speeds\n> [FROM NOW - 5 MINS TO NOW]\n    WHERE \n    {\n         SELECT AVG(?speed) AS ?avgSpeed\n         WHERE\n         {\n                ?car a linearroad:Car;\n                        linearroad:hasSpeed ?speedMeasurement;\n                        linearroad:hasPosition ?positionMeasurement.\n                ?speedMeasurement a linearroad:SpeedMeasurement;\n                         linearroad:hasValue ?speed. \n               ?positionMeasurement a linearroad:PositionMeasurement;\n                         linearroad:hasDirection ?dir;\n                         linearroad:onSegment ?seg.\n                ?seg linearroad:isPartOf ?expWay.\n        } GROUP BY ?speedMeasurement\n     }\nTollStr:\nStream of tolls. This is one of the output streams of the benchmark. Each car, on entering a segment, pays a toll determined by the current state of traffic in the segment. The formulation of TollStr below uses a relation, SegToll, that contains the current toll for each segment.\nSPARQL-stream\nSELECT RSTREAM ?car ?charge\n    FROM STREAM <\nhttp://oeg.dia.fi.upm.es/linearroad/stream/tollCharges\n> [NOW]\n    WHERE \n    {\n         ?toll a TollCharge .\n         ?toll linearroad:hasValue ?charge .\n         ?toll linearRoad:chargedTo ?car .\n     }\nData Generation with MITSIMLab\n\nDownload MITSIMLab from\nhttp://www.cs.brandeis.edu/~linearroad/tools.html\nUnpack the contenten of the archive\nConfigure\nmitsim.config\nModify\nDuplicateCars.pl\nto add the proper path to the unix socket of Postgres\nReplace line 64 with:\nmy $dbh = DBI->connect(\"DBI:PgPP:dbname=$dbname;path=/var/run/postgresql\", $dbuser, $dbpassword)\nSTREAM Installation\n\nDownload sources from\nhttp://infolab.stanford.edu/stream/code/\nWith the new GCC the code may not compile. If this is the case, you need to  modify some sources to add the missing imports.\nNotes\n\nS2O must have a well-known operator to refer to the timestamp of a tuple.",
  "speaker": "SYSTEM",
  "uuid": "6c46faef-e91b-4c80-9212-c61f21d9e72a"
}
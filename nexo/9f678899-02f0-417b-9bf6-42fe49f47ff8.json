{
  "message": "SYSTEM: Wiki: https://delicias.dia.fi.upm.es/wiki/index.php/Sostenibilidad_y_evaluaci%C3%B3n \n\nAre you developing software? Is it sustainable?\nOriginal evaluation is available at\n[1]\n.\nNumber\nSSI Questionnaire (Y/N answers)\nOOPS!\nTool2\nTool3\netc.\n1.\nWhat does your software do?\n1.1\nDoes your website, and any READMEs or documentation, provide a clear, high-level description of your software?\nY\n1.2\nDoes your website, and any READMEs and documentation, clearly describe the type of user who should use your software?\nN\n1.3\nDo you make case studies available to show how your software has been used by other users?\nN\n2.\nSupport\n2.1\nDoes your website describe how a user can get help with your software?\nN\n2.2\nDoes your software distribution describe how a user can get help with the software?\nN\n2.3\nDoes your project have an email address that is dedicated to support requests from users?\nY\n2.4\nAre emails to your support email address received by more than one person?\nY\n2.5\nDoes your project have a ticketing system for recording support requests?\nN\n2.6\nIs your project's ticketing system publicly accessible so that your users can view the support requests you have received and your response to them?\nNA\n2.7\nDoes your project have a blog that is regularly updated (approximately a post per week)?\nN\n3.\nDocumentation\n3.1\nIs your documentation easy to locate? Can a user quickly access the documentation on your website or from links in your software distribution?\nY\n3.2\nDo you provide a \"quick start\" guide (a guide that provides a quick overview of the software with some basic examples of use)?\nY\n3.3\nDoes your documentation provide clear, step-by-step instructions for installation and use of your software?\nY\n3.4\nDoes your documentation describe the different support options that are available for your software?\nN\n3.5\nDoes your documentation clearly state the intended users of your software (e.g. any users, or only users with specific knowledge or from a specific background)?\nN\n3.6\nDo you provide a reference guide for your software (i.e. a comprehensive guide to all software functions and options)?\nY\n3.7\nDo you provide a troubleshooting guide: a guide that describes the symptoms and step-by-step solutions for problems and error messages?\nN\n3.8\nDo you provide comprehensive API documentation?\nY\n3.9\nIf your software's source code is available, do you store the software's documentation under version control with the source code?\nNA\n3.10\nDoes the documentation for your source code describe the licence and copyright for the code?\nNA\n3.11\nDoes the documentation for your binary distribution describe the licence and copyright for the code\nNA\n4.\nPlans for the future\n4.1\nDoes your website include a project roadmap (i.e. a list of project and development milestones)?\nN\n4.2\nDoes your website describe how your project is funded, and the period over which funding is guaranteed?\nN\n5.\n'\nAvailability of your software\n5.1\nIs your software available as a pre-compiled binary distribution?\nN\n5.2\nIs the binary distribution available for free?\nN\n5.3\nIs the source code for your software available to download?\nN\n5.4\nIs your software, and the resources for your project, hosted in a established, third-party repository like SourceForge, GoogleCode, LaunchPad or GitHub?\nN\n6.\nSource code structure\n6.1\nDoes your project recommend the use of a coding standard?\nN\n6.2\nIs your source code structured into modules or packages?\nY\n6.3\nIs your source code stored in a repository under revision control?\nY\n6.4\nIs each source code release a snapshot of the repository?\nN\n6.5\nIs your source code well laid out and indented?\nN\n6.6\nIs your source code well commented?\nN\n6.7\nDoes your source code use sensible class, package and variable names?\nY\n7.\nOpen standards\n7.1\nDoes your software use open standards?\nY\n7.2\nAre the standards you use mature and ratified?\nY\n7.3\nDoes your software provide tests to demonstrate compliance with open standards?\nN\n8.\nBuilding from source\n8.1\nDo you provide instructions for building your software from the source-code distribution?\nNA\n8.2\nDo you build your software using an automated build (e.g. Make, ANT)?\nNA\n8.3\nDoes your source distribution list all third-party dependencies?\nNA\n8.4\nDoes your source distribution list the web address, suitable version number and licences for all third-party dependencies and state whether the dependencies are mandatory or optional?\nNA\n8.5\nIs dependency management used to download dependencies (e.g. ANT, Ivy, Maven)?\nNA\n8.6\nDo you provide tests to show whether the build has been successful?\nNA\n9.\nInstalling the binary\n9.1\nIs your binary distribution provided with installation instructions?\nNA\n9.2\nIs dependency management used to automatically download dependencies (e.g. ANT, Ivy, Maven)?\nNA\n9.3\nDoes your binary distribution list all third-party dependencies?\nNA\n9.4\nDo you provide tests to show that the install of the binary has been successful?\nNA\n10.\nTesting\n10.1\nDo you provide a unit test suite as part of your software distribution?\nNA\n10.2\nIs your software provided with an integration test suite as part of its distribution?\nNA\n10.3\nDo you support continuous integration by automatically running tests whenever changes are made to your source code?\nN\n10.4\nAre the continuous integration test results publicly visible?\nN\n11.\nPortability\n11.1\nIs your software compatible with Windows, Unix/Linux AND Mac OS X?\nY\n11.2\nIs your browser application compatible with Internet Explorer, Firefox, Chrome AND Safari?\nY\n12.\nCommunity\n12.1\nDoes your website state the size of your users/developers/member community?\nY\n12.2\nDo you provide success stories on your website?\nN\n12.3\nDo you list your important partners and collaborators on your website?\nN\n12.4\nDo you list your project's publications on your website?\nY\n12.5\nOn your website, do you list third-party publications that cite your software?\nN\n12.6\nDo you make timely announcements of the deprecation of components, APIs, etc.?\nN\n13.\nContributor policy\n13.1\nDo you allow people to contribute to your software even though they are not part of your project?\nY\n13.2\nIs your contributions' policy publicly available?\nN\n13.3\nDo contributors to your project retain the copyright/IP of their contributions?\nN\n13.4\nAre changes in your source code repository emailed to a mailing list?\nN\n13.5\nCan anyone subscribe to the mailing list to see when changes have been made to your source code?\nNA\n14.\nIdentity\n14.1\nDoes your project/software have its own domain name?\nN\n14.2\nIs the name of your project/software unique within its application area?\nY\n14.3\nIs your project/software name free from trademark violations?\n?\n15.\nCopyright\n15.1\nDoes your website clearly state the owner of the copyright for your software?\nN\n15.2\nDoes each of your source-code files include a copyright statement?\nY\n16.\nLicences\n16.1\nIs your software (source and binaries) distributed under a licence?\nY\n16.2\nIs the name of the licence under which your software is distributed clearly stated on your website?\nN\n16.3\nIs your software distributed under an open-source licence?\nY\n16.4\nDoes each of your source-code files include a licence header?\nY",
  "speaker": "SYSTEM",
  "uuid": "9f678899-02f0-417b-9bf6-42fe49f47ff8"
}
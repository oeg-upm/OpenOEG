{
  "message": "SYSTEM: The_Return_of_the_Entity-Relationship_Model_-_Ontological_Query_Answering.pdf: Página 3\n1 The Return of the Entity-Relationship Model: Ontological Query Answering\n3\nWorks in\n1\n2\nGroup\n1\n2\nLeads\nMember\nmemb name\nstud gpa\ngr name\nPhd student\nProfessor\n(1,1)\n(1,1)\n(1,N)\nsince\n(1,1)\n(0,1)\n[1,2]\nFig. 1.1 An ER+ schema.\nare both members. For instance, the constraint (1,1) (min. 1, max. 1) on the partic-\nipation of Member in Works in imposes that every instance of Member participates\nat least once (mandatory participation) and at most once (functional participation)\nin Works in. The constraint (0,1) (min. 0, max. 1) on the participation of Professor\nin Leads imposes that every instance of Professor participates at most once (func-\ntional participation) in Leads. The constraint (1,N) (min. 1, max. arbitrary) on the\nparticipation of Group in Works in imposes that every instance of Group participates\nat least once (mandatory participation) in Works in. The constraint (1,1) on the at-\ntribute memb name states that such an attribute is mandatory (at least one value) and\nfunctional (at most one value). The is-a constraint among the relationships states\nthat each professor works in the same group that (s)he leads, considering the com-\nponents in the same order; components of relationships are ordered and marked by\nthe integers 1 and 2. The notation [1,2] indicates the permutation of the components\ninvolved in the containment.\nIn our setting we admit arbitrary permutations of objects in an is-a between\ntwo relationships. For example, we can assert that each instance ⟨a,b,c⟩of a\nternary relationship R1 is also an instance of another ternary relationship R2, but\nthe three objects (instances of the participating entities) appear in R2 in the or-\nder ⟨c,a,b⟩; this would be indicated by the annotation [3,1,2] in the correspond-\ning diagram. The addition of the permutation feature increases the complexity of\nquery answering. The permutation is a common feature in DL-Lite and other Se-\nmantic Web languages, where it is usually in the form of inverse roles, where\nroles are binary relations among concepts (sets). With this feature we can express,\nfor instance, the reﬂexive property of a relation; for example (in ﬁrst-order logic)\n∀X∀Y brother(X,Y) →brother(Y,X).\nSimilarly to what is found in the literature on DL-Lite, we are interested in query\nanswering under ontologies, and in particular in the data complexity of (the decision\nversion of) such problem in the presence of ER+ ontologies. We identify and study\nsub-languages of ER+ which are tractable in data complexity, and we also provide\na complete complexity study (data and combined complexity) of query answering\nunder such sub-languages.\n",
  "speaker": "SYSTEM",
  "uuid": "334c60f9-f724-4a8b-bc71-7bdfd8b6b196"
}
{
  "message": "SYSTEM: Wiki: https://delicias.dia.fi.upm.es/wiki/index.php/Herramientas_y_proyectos_relacionados_con_el_data_provenance \n\nBreve resumen de las herramientas:\nOPM (Open Provenance Model):\nEl 19 de Junio de 2008, veinte participantes asistieron al primer workshop sobre el OPM, para discutir una especificación del modelo y lograr un estándar que unificara las distintas propuestas que resultaron del First Provenance Challenge.\nDe esta reunión surgieron las bases teóricas del OPM, un modelo cuya granularidad se centra en las colecciones de datos y sus miembros,  que se representa como un grafo dirigido acíclico y que es independiente de un dominio concreto, definido al margen de cualquier estándar tecnológico. De hecho, uno de los prerrequisitos que se establecen es que no se va a especificar cómo cada sistema ha de representar el provenance internamente, dejando libertad a los desarrolladores para hacerlo de acuerdo al criterio que consideren más acertado.\nNo utiliza ningún recurso ontológico para jerarquizar y relacionar las entidades que define, tanto en el modelo basado en tiempo que propone como en el que no lo está, y aunque es un modelo ideado sobre todo para workflows científicos, se puede adoptar también para gestionar el provenance en bases de datos.\nSin embargo, también tiene limitaciones. Algunas de las definiciones que ofrece para la inferencia de conocimiento no están demostradas, y algunos modelos más recientes alegan que son inconsistentes o contradictorias.  Asimismo, se trata de un modelo que representa ejecuciones pasadas o incluso presentes, pero no hace ninguna elucubración sobre lo que pudiera ocurrir en el futuro basándose en los datos anteriores\nPrOM\nEs una de las propuestas más recientes, (año 2009), y está basada en la ontología Provenir, desechando el modelo del OPM. Sin embargo, argumenta porqué lo hace, explicando que el OPM modela únicamente propiedades causales, mientras que la ontología Provenir  modela propiedades que incluyen la situación geográfica. Además, argumenta que las reglas para realizar inferencia propuestas en el OPM se contradicen fácilmente debido a la generalidad de su grafo.\nEl modelo es independiente del dominio, y gracias a la ontología usada, los desarrolladores pueden extenderla para tratar otros dominios de forma específica. Su capacidad de consulta es alta, pudiendo no sólo contestar a todas las consultas propuestas en el primer Provenance Challenge, sino pudiendo realizar comparaciones con grafos provenance.\nEn cuanto a la implementación del sistema, la herramienta tiene el mismo nombre (PrOM), y los lenguajes que usa son los estándares RDF y SPARQL, (para consultas). Es una de las pocas herramientas que ha sido diseñada para tratar con provenance incompleto, que es el que vamos a encontrar en la realidad con mayor probabilidad.\nRedux\nModelo multicapa diseñado en 2006-07 con el propósito de responder todas las consultas del Provenance Challenge. Posee cuatro capas, donde cada una representa un nivel de abstracción distinto: la primera para las consultas generales, la segunda actividades específicas, la tercera para representar las ejecuciones de las instancias especificadas en la capa anterior, y la cuarta y última para representar información de la ejecución específica.\nNo usa ningún recurso ontológico, y gestiona automáticamente toda la creación del provenance mientras se está ejecutando el workflow, siendo completamente transparente al usuario.\nLa implementación del modelo utiliza bases de datos para el almacenamiento y el lenguaje SQL para responder correctamente todas las consultas del Challenge. Utiliza el Windows WorkFlow Foundation como motor de workflows.\nWings/PEGASUS\nOtro de los modelos multicapa surgidos con motivo del Provenance Challenge, (2006-07). Está dividido en tres capas, donde la capa uno es una plantilla del workflow, (para garantizar que el modelo sea genérico e independiente de dominio), la capa dos representa los datos específicos de las instancias del workflow, y la capa tres almacena todo lo relevante a la ejecución actual del mismo.\nLa granularidad que presenta es a nivel de colecciones y sus miembros, y puede manejar comparaciones con grafos provenance. Además, destaca porque introduce las colecciones anidadas de elementos, que equivaldrían a la capacidad de expresar subtareas dentro de un workflow con mayor nivel de detalle.\nAunque la creación del provenance no es automática a partir de logs, el sistema puede adivinar parte de las ejecuciones futuras a partir de las plantillas del workflow que se introducen en la capa uno. Responde a todas las preguntas del Challenge, y utiliza una ontología para representar toda la información provenance, (en el sistema Wings).\nVISTRAILS\nSe trata del último modelo basado en capas que analizaremos en este documento, creado en el año 2006-07 y con el mismo propósito que los dos anteriores. Se caracteriza por tener un mecanismo basado en cambios, donde cada nodo del grafo representa una versión del workflow, y cada arista corresponde al cambio que transforma un workflow en otro. Se organiza en tres capas: la primera, (capa de evolución del workflow), captura las relaciones entre las series de workflows. La segunda, la capa de workflow, consiste en especificaciones de workflows individuales, y la última, la capa de evolución,  almacena información  acerca de las ejecuciones de los módulos de los workflows.\nLa granularidad que se maneja es a nivel de archivo, (grano muy fino), y está orientado por eventos, (que son los “cambios” que se producen entre versión y versión). Aunque presume ser independiente de dominio, posee un lenguaje específico del mismo.\nLa gestión y creación del provenance se realiza de manera automática a partir de logs guardados, lo que implica que tan sólo se representan ejecuciones pasadas y no el estado actual de los workflows.\nLa herramienta que implementa el modelo está basada en XML y MySQL, y usa los sistemas AIR y FSL como soporte. No gestiona el acceso seguro a los datos del provenance.\nPASOA\nAcrónimo de “Provenance Aware Software Oriented Architecture”, surgida en el año 2007 con el objetivo de crear, almacenar, consultar y gestionar el provenance de los datos electrónicos en workflows.\nHace uso de los “Concept Maps”, que son recursos ontológicos en los que se muestra una visión general de los conceptos y sus relaciones, lo que asegura que la propuesta sea independiente de un dominio concreto. Además, está dirigido por eventos, definiendo interacciones en las que los agentes que intervienen juegan roles e intercambian mensajes.\nLa herramienta que implementa el modelo, (también llamada PASOA), es intensional, puesto que se todas las consultas se hacen en función a una ejecución determinada dentro de un workflow, y no respecto a una entidad. No ofrece ningún tratamiento de seguridad para acceder a los datos, (cualquiera que pueda acceder al sistema accederá a todo lo que haya almacenado en él).\nZOOM\nPresenta un modelo de provenance genérico, orientado sobre todo a workflows científicos en el área de la bioinformática. Data del año 2006-07, por lo que no está basado en el OPM, pero introduce el concepto de sub-workflows o “vistas de usuario”, que son muy parecidas a las “cuentas”, (accounts), del OPM. En ellas se representan con detalle los subprocesos de un workflow, permitiendo tener mayor o menor nivel de granularidad según queramos. En concreto, ZOOM utiliza este sistema para tratar la seguridad, restringiendo la capacidad de explorar a bajo nivel a aquellos usuarios que no dispongan de los permisos suficientes para ello.\nEs un modelo orientado por eventos, y su capacidad de consulta es de nivel dos. Sin embargo, se limita al provenance de ejecuciones pasadas con información basada en logs.\nPara la implementación de la herramienta, se utiliza Oracle en almacenamiento y SQL y Java, (JDBC), en las consultas, (que son intensionales). Además es compatible con otros sistemas como Kepler o Taverna.\nKARMA",
  "speaker": "SYSTEM",
  "uuid": "db062a64-0de3-48db-aa0a-364009cb6d7e"
}
{
  "message": "SYSTEM: Planing_Scheduling.pdf: PÃ¡gina 2\nthe groundings for scheduling ontology projects, and \n(3) presents gOntt, a tool that supports the scheduling \nof ontology developments and their guided execution. \nThe paper is organized as follows: Section 2 \npresents the scheduling activity. Section 3 deals with \nontology life cycle models. Section 4 summarizes the \nmethodological groundings for the scheduling activity. \nSection 5 shows the main gOntt functionalities. \nSection 6 presents an evaluation of gOntt. Finally, \nSection 7 provides the conclusions. \n \n2. Scheduling ontology developments \n \nScheduling [7] refers to the activity of identifying \nthe different processes and activities to be performed \nduring the ontology development as well as their \narrangement, and the time and resources needed for \ntheir completion. An important task within this activity \nis the establishment of the ontology network life cycle, \nthat is, the specific ordered sequence of processes and \nactivities that ontology practitioners have to carry out \nduring the life of the ontology network.  \nTo establish the particular schedule for the ontology \ndevelopment, four questions have to be answered: (1) \nWhich life cycle model is the most appropriate for the \ndevelopment?; (2) Which processes and activities \nshould be carried out in the ontology development?; \n(3) Which order and dependencies exist among \nprocesses and activities?; and (4) How many resources \nare needed for the development of the ontology? \nThe first three questions are related to the \nestablishment of the ontology life cycle, and their \nresponses would provide a plan for the ontology \ndevelopment. The fourth question (out of the scope of \nthis paper) is related to the inclusion of time and \nhuman resources restrictions, and its response would \nprovide the concrete schedule for the ontology \ndevelopment. The information about how many people \nshould be involved in the ontology development can be \nobtained using the ONTOCOM model [6].  \n \n3. Ontology network life cycle models \n \nThe ontology network life cycle model establishes in \nan abstract way how to develop an ontology network \ndevelopment project. The ontology network life cycle \nis created by mapping the processes and activities \nidentified in the ontology development onto a selected \nontology life cycle model. While the model refers to a \ngeneral framework, the life cycle refers to the concrete \nsequence of processes and activities. In this regard, \nwhile METHONTOLOGY and DILIGENT propose a \nmodel based on evolutionary prototypes, On-To-\nKnowledge proposes an incremental and cyclic model.  \nAlong this section we will try to show that there is \nnot a unique life cycle model valid for all ontology \ndevelopment projects and that each life cycle model is \nappropriate for projects with different features.  \nFor this reason, we propose two ontology network \nlife cycle models; the waterfall ontology network life \ncycle model and the iterative-incremental ontology \nnetwork life cycle model. These models were created \nby (1) adapting the life cycle models described in \nSoftware Engineering to the characteristics of the \nontology development (that is, the acquisition of \nknowledge, the evaluation and assessment of the \ndifferent phase outputs, project and configuration \nmanagement and documentation should be performed \nin all of the phases); (2) reusing the ideas presented by \nLarman [8]; and (3) analyzing our experiences in \ndifferent ontology development projects.  \n \n3.1. The waterfall life cycle model \n \nThe waterfall model represents the stages of the \nontology development as a waterfall, where a concrete \nstage must be completed before the following stage \nbegins and where backtracking is permitted from the \nmaintenance phase to the phase that follows that of the \nrequirements. Taking into account the importance of \nreusing and reengineering knowledge resources as well \nas ontology merging in the ontology network \ndevelopment, we define five different versions of the \nwaterfall model (as presented in Figure 1).  \n \na) 4-Phase Waterfall Model. It represents the stages of an \nontology network, starting with the initiation phase and going \nthrough the design, the implementation and the maintenance. \nb) 5-Phase Waterfall Model. It extends the 4-phase model with \nthe reuse of existing ontological resources as they are.  \nc) 5-Phase + Merging Phase Waterfall Model. It is a special case \nof the 5-phase model. It includes the Merging Phase to obtain a \nnew ontological resource from two or more ontological resources \npreviously selected in the reuse phase. \nd) 6-Phase Waterfall Model. It extends the 5-phase model with \nthe Reengineering Phase. It allows the reengineering of knowledge \nresources (ontological and non-ontological).  \ne) 6-Phase + Merging Phase Waterfall Model. It extends the 6-\nphase model by including the Merging Phase after the \nreengineering of knowledge resources. \nInitiation Phase\nDesign Phase\nImplementation Phase\nMaintenance Phase\nReuse Phase\nReengineering Phase\nMerging Phase\n \nFigure 1. Waterfall model family \n",
  "speaker": "SYSTEM",
  "uuid": "ebd1803e-e31e-466f-b7fc-c9e237ce330d"
}
{
  "message": "SYSTEM: RDF%28S%29-SPARQL-Pr%C3%A1ctica.pdf: Página 12\n•12\nJena example. Graph creation\nhttp://.../JohnSmith\nJohn Smith\nd Gi\nd F\nil\nvcard:FN\nvcard:N\nSmith\nJohn\nvcard:Given\nvcard:Family\n// some definitions \nString personURI = \"http://somewhere/JohnSmith\"; \nString givenName = \"John\"; \nString familyName = \"Smith\"; \nString fullName = givenName + \" \" + familyName; \n// create an empty \n//\np y\nModel Model model = ModelFactory.createDefaultModel(); \n// create the resource \n// and add the properties cascading style \nResource johnSmith = model.createResource(personURI) \n.addProperty(VCARD.FN, fullName) \n.addProperty(VCARD.N, model.createResource()   \n.addProperty(VCARD.Given, givenName)\n.addProperty(VCARD.Family, familyName)); \n23\nJena example. Read and write\n// create an empty model\nModel model = ModelFactory.createDefaultModel();\n// use the FileManager to find the input file\nInputStream in = FileManager.get().open( inputFileName );\nif (in == null) {\nthrow new IllegalArgumentException(\"File not found\");\ng\ng\np\n(\n);\n}\n// read the RDF/XML file\nmodel.read(in, \"\");\n// write it to standard out\nmodel.write(System.out);\n<rdf:RDF\nxmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'\nxmlns:vcard='http://www.w3.org/2001/vcard-rdf/3.0#'\n>\n<rdf:Description rdf:nodeID=\"A0\">\n<vcard:Family>Smith</vcard:Family>\n<vcard:Given>John</vcard:Given>\n</rdf:Description>\n<rdf:Description rdf:about='http://somewhere/JohnSmith/'>\n<vcard:FN>John Smith</vcard:FN>\n<vcard:N rdf:nodeID=\"A0\"/>\n</rdf:Description>\n...\n</rdf:RDF>\n24\n",
  "speaker": "SYSTEM",
  "uuid": "1462e216-3ddc-445c-9eb8-92444908c424"
}
{
  "message": "SYSTEM: D5.3.1-v1.0.pdf: Página 21\nD5.3.1 NeOn Development Process and Ontology Life Cycle \nPage 21 of 111 \n2006–2007 © Copyright lies with the respective authors and their institutions. \n \nThis tenet addresses an often-seen feature of larger, longer software projects, which is by \nsome referred to as ‘over the wall’ design – limited interaction of parties involved in different \nstages of the development process, which decreases efficiency and often quality. \n4. Demonstrating the added value iteratively. As above, software projects are assumed to be \ndelivered in increments and in an iterative fashion. The increment, which includes the value of \nthe past iteration, is also used as a measure of the project progress. That increment is also \nused to encourage feedback from stakeholders about the direction of the project. All this allows \nthe provision of a timely feedback and rectification of identified shortcomings. \n5. Elevating the level of abstraction. This is the key innovation championed by RUP. RUP \nmotivates the use of reusable assets such as software patterns. Its importance is in preventing \nthe engineers from ‘doing hacks’; i.e. going directly from the requirements to custom-made \nsoftware code. A higher level of abstraction also allows discussions on different architectural \nlevels, which are in practice often accompanied by visual representations, for example using \nUML. \n6. Focusing continuously on quality. Quality checks are not only at the end of each iteration but \nform a continuous activity, often performed daily and supported by the entire team. Automating \ntest scenarios (scripts) are increasingly popular to cope with the increasing amount of tests due \nto iterative development. \nThe RUP development process recognizes the following four broad phases: \n Inception phase. In this initial phase, the business case (including the context of the product \nand its success factors) is established. At least two aspects are crucial for this phase – an \ninitial use case and an initial project description comprising the key requirements, \nconstraints and features. The purpose of this phase is to appreciate the scope of the \ndefinition, the understanding of the requirements and their satisfaction in the proposed use \ncase(s), and the overall credibility of the project. \nThis is also the phase where one usually defines base milestones related to satisfying the \nkey aspects discussed in this phase. \n Elaboration phase. This is where the project starts taking its shape; the key activity in this \nstep is the problem domain analysis and the key outcome is usually the initial architecture. \nThe purpose of this phase is to extend and elaborate the initial use case(s) and use case \ndescriptions that start driving the formulation of key architectural modules.  \n Construction phase. In this phase, the main focus goes away from the analysis and to the \nsynthesis and development of components and other features of the system being \ndesigned. This is the phase when the bulk of the coding, modelling and also testing take \nplace. In larger projects, several construction iterations may be developed in an effort to \ndivide the use cases into manageable segments. Thus, two key outcomes come from this \nphase – a realistic project plan (e.g. the familiar Gantt chart is a good example of this) and \na suite of demonstrable prototypes. It is also in this phase when the first software releases \nare produced; hence, this phase is often associated with the operational capability \nmilestones. \n Transition phase. Here the project is moving from the development organization to the end \nuser(s). The activities of this phase include training of the end users and maintainers and \nbeta testing of the system to validate it against the end users’ expectations. The product is \nalso checked against the quality level set in the inception phase. If it does not meet this \nlevel or the standards of the end users, the entire cycle may begin again or may be \nreturned to the appropriate earlier phase. \n",
  "speaker": "SYSTEM",
  "uuid": "65034d6a-efb5-492d-a1c9-e83905b538d9"
}
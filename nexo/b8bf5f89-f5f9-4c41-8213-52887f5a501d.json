{
  "message": "SYSTEM: RQRQR.pdf: Página 1\nEﬃcient Query Rewriting for RDB2RDF\nSystems based on mapping coverage\nJose Mora1 and Oscar Corcho1\nOntology Engineering Group, Departamento de Inteligencia Artiﬁcial,\nFacultad de Inform´atica,Universidad Polit´ecnica de Madrid, Spain\n{jmora,ocorcho}@fi.upm.es\nAbstract. RDB2RDF systems generate RDF from relational databases,\neither by syntactically transforming the relational database schema or\nusing mapping languages with a semantically richer correspondence be-\ntween the database schema and existing ontologies, to which the gen-\nerated RDF data can be related. Besides, these systems operate in two\ndiﬀerent manners: materializing the database content into RDF or acting\nas virtual RDF datastores that transform SPARQL into SQL queries. In\nthe former, query answering is handled by the RDF triple store where the\nRDF data is materialized, and inferences could be handled by this triple\nstore, even if not natively considered in the SPARQL semantics. In the\nlatter, existing RDB2RDF systems do not normally perform inferences\nthat could be done with the corresponding ontologies. This paper shows\nhow the algorithm used in the REQUIEM system can be adapted to\nhandle run-time inferences in query answering with RDB2RDF systems\nthat use rich mapping languages, such as ODEMapster.\nKeywords: RDB2RDF, query rewriting, reasoning\n1\nIntroduction\nOrganisations store ever growing amounts of information and a big part of that\ninformation is stored in relational databases (RDBs). In the context of the Se-\nmantic Web, and specially related to the Linked Data initiative, RDB2RDF tools\nare being used to generate RDF from a large number of these databases.\nThese RDB2RDF tools may use mappings for a merely syntactical conver-\nsion from the database schema, usually performed automatically, or may use\nmappings with existing ontology, relating the generated RDF with their classes\nand properties and thus considering semantics for this conversion to RDF.\nTheir mapping implementation may be either a static Extract Transform\nLoad (ETL) implementation or a query-driven dynamic implementation, de-\npending on how the generation of the RDF code is performed, either in a batch\nprocess for the total of the information contained in the database or as an on-\ndemand process for the answering of each query posed to the system [1].\nAlthough RDB2RDF tools have attracted more attention recently due to the\nemergence of the Linked Data initiative, where eﬀorts are mainly focused on\n",
  "speaker": "SYSTEM",
  "uuid": "b8bf5f89-f5f9-4c41-8213-52887f5a501d"
}
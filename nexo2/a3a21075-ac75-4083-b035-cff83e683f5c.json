{
  "message": "SYSTEM: D5.3.1-v1.0.pdf: Página 25\nD5.3.1 NeOn Development Process and Ontology Life Cycle \nPage 25 of 111 \n2006–2007 © Copyright lies with the respective authors and their institutions. \n \n \nFigure 4. ‘V’ Life Cycle Model \n2.3.3. Incremental development life cycle model \nIncremental development model [52] involves producing and delivering the software in increments \nrather than in a single package. \nIn the incremental development model [46], the system, specified in the requirement documents, is \ndivided into functional subsystems, which are completely developed in different cycles. Each cycle \nfollows the waterfall model. The system development starts with a small functional subsystem \nwhich is fully developed. In each cycle a functional subsystem is developed and a new version is \ndelivered to the user at the end of each cycle. Following this model, the software development \nprocess begins with the most essential functionalities and continues and ends with the less \nimportant ones. \nIn this model, the complete system is built gradually through different iterations. This model can be \nseen as a repetition of the waterfall model for each functional subsystem. So, in each iteration \neach subsystem passes through the requirements, design, implementation and testing phases.  \nThe two main advantages of this approach are: accelerated delivery of customer services and user \nengagement with the system [52]. \nThe main advantage of the incremental development model [19] is that it produces an operational \nsystem more rapidly, thus reducing the possibility that the user needs change during the \ndevelopment process. Incremental development implies that we understand up front most of our \nrequirements and simply choose to implement them in subsets of increasing capability. With the \nincremental development life cycle model, risk of developing the wrong thing is reduced by \nbreaking the project into a series of smal subprojects (increments).  \nIn the incremental development model, as in the waterfall one, the problem and the overall \nrequirements of the final product are well-known at the start of the development. In incremental \nmodels however a limited set of requirements is allocated to each increment and with each \nsuccessive release more requirements are addressedd until the final release satisfies all \nrequirements. \n",
  "speaker": "SYSTEM",
  "uuid": "a3a21075-ac75-4083-b035-cff83e683f5c"
}
{
  "message": "SYSTEM: Wiki: https://delicias.dia.fi.upm.es/wiki/index.php/Linking_Data_To_Ontologies_Summary \n\nSummary of paper : Linking data to ontologies(Poggi, A. and Lembo, D. and Calvanese, D. and De Giacomo, G. and Lenzerini, M. and Rosati, R.) LNCS08\nThe problem\n: Designing effective system for Ontology Based Data Access (5 issues identified)\nIssue 1: The ontology language to be used\nAnswer : DL Lite\nIssue 2: How much expressive power can be pushed while still maintaining effective query answering (QA)\nAnswer : DL Lite as the maximum fragment of expresivity that still enjoys effective QA\nIssue 3: Mapping mechanism. While Ontology to Ontology Mapping is widely studied, Ontology to Relational Mapping is not.\nAnswer : ?\nIssue 4: Impedance mismatch problem. R2O is mentioned as not dealing with this problem\nAnswer : ?\nIssue 5: Query Answering\nAnswer : Reformulation, Unfolding, evaluation\nDL LiteA\n(see the paper for the syntax/semantics of the language)\nDistinguishes between \"set of objects\" vs \"set of values\"\nDistinguishes between \"attributes\" vs \"roles\"\nAdopts unique name assumption\nConvention: To \"answer\" query means to obtain \"certain answers\", which means valid answer for all models of the ontology\nDL Reasonings in DL LiteA\nConcept and Role Subsumption, Ontology satisfiability,\tInstance checking\nThey can be reduced to\nSatisfiability : can be reduced to evaluate Violates(TBox T).\nViolates(TBox T): asking all constants in ABox A that violates: functionality, disjoint assertions\nQuery answering: PerfectReformulation(TBox T, UCQ Q) -> UCQ Q'\nAnswer(UCQ Q, TBox T, Mappings M, Database DB) = answer(UCQ Q', -, Mappings M, Database DB)\nThat means that the new UCQ Q' contains knowledge from TBox T, so T is not needed anymore.\nDL LiteA ontology with mappings\nis defineds as OM = (T, M, DB)\nT = DL LiteA TBox\nM = (MT, MA)\nMT = Typing mappings, used to specify type of database column\nMA = Assertion mappings, GLAV approach\nDB = Relational Database\nMappings Split\ndenoted as Split(OM(T, M, DB)) = (T, M', DB)\nM' = (MT, MA')\nMA' = splitted version of MA\nThis split function basically transform the mappings GLAV to GAV.\nThe complexity of split function is PTIME\nQuery Answering\nDone in three steps: Reformulation, unfolding, evaluation\nReformulation: Creating UCQ Q1 which is UCQ Q with the knowledge of TBOX T\nNot explained here, but explained in other papers\n(CGLLR) Tractable Reasoning and Efficient Query Answering in Description Logics: The DL-Lite Family\n(RQR) Efficient Query Answering for OWL 2. CGLLR + Skolem function\nUnfolding: transforming the UCQ Q1 into SQL Q2 (possibly with UNION operators)\nEvaluation: database task to evaluate Q2\nComplexity of DL LiteA query answering = LOGSPACE (wrt size of DB)\nNote\nQuery Rewriting algorithms in CGLLR and RQR doesnt take into account the concept negation, although this is supported in DL-Lite. That's because the algorithms accept CQ and CQ doesnt support negation.",
  "speaker": "SYSTEM",
  "uuid": "56e8f04c-0fc7-452e-b5a7-2d630f4e3b9b"
}
{
  "message": "SYSTEM: Poveda_et_al_ISWC_2010_vFinal.pdf: Página 5\n \nCoverage of the problem. This aspect is related to the functional dimension. In \nthis sense we observed if the ontology represents all the features that were \nexpected to find in it. This aspect is directly related to the requirements \nspecified in the ORSD. \n \nUnderstandability and clarity. These aspects refer to the usability-profiling \ndimension. In this sense we observed if the ontology provides some \ninformation to facilitate its comprehensibility.  \nAs a result of this analysis, we obtained a set of shortcoming in the ontologies that \nwe identified as pitfalls. We want to note that we consider pitfalls as a clue to find \npossible mistakes that often appear when modelling ontologies.  \nThe results of the analysis are shown in the next sections. Section 4 shows a set of \npitfalls that include not only those discovered in this experiment but also the ones \nidentified by [6, 8, 11]. Section 5 demonstrates that there are recurrent pitfalls that \noccur when developers build ontologies without knowing this set of pitfalls in \nadvance. \n4   Catalogue of Pitfalls \nThe manual inspection of the 26 ontologies implemented in OWL-DL obtained in the \nglobal practical training explained in Section 3.1.1 allows us to demonstrate that there \nare common pitfalls that occur when developers build ontologies knowing modelling \ntechniques and ontological foundations but without knowing the set of pitfalls in \nadvance. As a result of this empirical analysis, in this section we present the catalogue \nof 24 pitfalls1. \nP1. Creating polysemous elements: an ontology element, whose name has different \nmeanings, is included in the ontology to represent more than one conceptual \nidea. For example, the class “Theatre” is used to represent both the artistic \ndiscipline and the place in which a play is performed.  \nP2. Creating synonyms as classes: several classes whose identifiers are synonyms \nare created and defined as equivalent. As an example we could define “Car”, \n“Motorcar” and “Automobile” as equivalent classes. This pitfall is related to the \nguidelines in [8] which explain that synonyms for the same concept do not \nrepresent different classes.  \nP3. Creating the relationship “is” instead of using “subclassOf”, “instanceOf” \nor “sameIndividual”: a relationship “is” is created in the ontology instead of \nusing OWL primitives for representing the subclass relationship (“subclassOf”), \nthe membership to a class (“instanceOf”), or the equality between instances \n(“sameAs”). An example of this type of pitfall is to define the class “Actor” in \nthe following way „Actor ≡ Person ⨅ interprets.Actuation ⨅ is.Man‟. This \npitfall is related to the guidelines for understanding the “is-a” relation provided \nin [8]. \nP4. Creating unconnected ontology elements: ontology elements (classes, \nrelationships or attributes) are created with no relation to the rest of the \n                                                           \n1 http://delicias.dia.fi.upm.es/wiki/index.php/Catalogue_of_Pitfalls \n",
  "speaker": "SYSTEM",
  "uuid": "d12baed8-8942-440e-94f9-d3182676016e"
}
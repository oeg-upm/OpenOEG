{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 89\nBÚSQUEDA \n \n89 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \nDenominaremos a las estrategias que llevan a cabo esta idea \"primero el menos \ncostoso\". Se tratará de estrategias que permitirán calcular soluciones de coste \nóptimo, pero que van a ser tan ineficaces (en tiempo y en espacio) como la \nbúsqueda en anchura. De hecho, si el coste de cada arista es una constante fija k \n(antes hemos comentado el caso k = 1), tendremos que estas estrategias son \nequivalentes (se examinan y expanden los mismos estados y en el mismo orden) a \nla búsqueda en anchura. Por otra parte, si el coste es constante y ordenamos \nABIERTOS de mayor a menor, obtendremos un comportamiento equivalente al de la \nbúsqueda en profundidad. \nEn cuanto a la implementación, supondremos conocida una función \n \n(defun coste-arista (estado1 estado2) …) \nque calcula el coste de la arista que se supone que existe de estado1 a estado2. \nEn estas condiciones, si los nodos tienen al menos información relativa al padre (la \ninformación relativa al estado es obligatoria), se puede calcular el coste del camino \n\"contenido\" en un nodo a partir exclusivamente del nodo. Sin embargo, para evitar el \nrecálculo es mucho mejor añadir una nueva información a los nodos que almacene \nel coste del camino de ese nodo, calculando su valor conforme se va desarrollando \nel proceso de búsqueda (Esta misma idea podía haber ser utilizada en \"primer lugar \nel mejor\", almacenando en los nodos el valor heurístico del estado correspondiente; \nesta idea es explotada en los algoritmos A del siguiente apartado). Habitualmente se \ndenomina g a esta nueva información (como se llamaba h al valor heurístico). En \ngeneral, el valor de g dependerá del nodo (es decir, del modo de llegar a un estado) \ny no del estado en sí. En el caso de que el espacio de estados sea un árbol, sólo \nhay (a lo más) un camino que une el estado inicial con cualquier otro estado y así el \nvalor de g depende del estado únicamente. Esta diferencia es esencial y, por tanto, \nva a haber dos estrategias diferentes según se considere que el espacio de estados \nes un árbol o un grafo. \nEn el caso de la estrategia \"primero el menos costoso\" en árbol, las modificaciones a \nrealizar en la implementación son las siguientes: \n1) Al crear el nodo inicial se actualiza la información g poniendo el valor 0. \n2) La función reorganizar-nodos-a-expandir ordena ABIERTOS de menor a \nmayor valor de g (aquí se pueden aplicar tres estrategias diferentes, como \nsucedía en \"primer lugar el mejor\"). \n",
  "speaker": "SYSTEM",
  "uuid": "91e85f53-de86-4f09-be70-8fef28c51760"
}
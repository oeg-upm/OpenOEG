{
  "message": "SYSTEM: Wiki: Contents\n[\nhide\n]\n1\nDescription\n2\nScenario\n3\nTareas\n4\nPlanning\n5\nReadings\n6\nRelated work\nDescription\n\nThe main goal of this thesis is to produce a methodology for the development of large-scale semantic applications drawing upon contextualised networked ontologies, heterogeneous data and other knowledge-level resources. This methodology will provide the necessary framework to organise and manage the development of semantic applications.\nCurrently a lot of techcnologies for building semantic applications are available or continously appearing. At the same time several methodologies have been developed or are been developped to support the ontology engineering proccesses. However there are no methodologies describing how to develop applications that incorporate and use ontologies in semantic applications as well as how to combine the existing technology in order to produce a semantic application.\nThe methodology will be focused on the rapid prototyping and development of large scale semantic applications, helping application developers to build semantic applications from scratch or to include semantic components into traditional information systems.\nThis thesis first will present several characteristics of semantic applications that determine this kind of application's behaviour.\nNext it will describe the processes and activities involved in the development of software, adapting them when needed to the development of semantic applications.\nUsing this methodology the software developer will select a set of use cases that will solve the application needs. These use cases will have significant variations according to several application requirements related to the characteristics presented before. This variations are named scenarios in this thesis. In consequence the software developer will select the appropiate scenario and for each scenario, the methodology will provide a set of architectural patterns that will help the software developer to organise the semantic application.\nScenario\n\n\"large scale semantic applications using distributed data and ontologies, including web applications\"\nTareas\n\nAnalyse the relationship with OBSE\n[1]\n.\nAnalyse these semantic web applications and if the methodology covers them\n[2]\n[3]\n.\nPlanning\n\nNeOn D5.5.1\nImplementation Costs:\nIntroduction, Executive Summary and Conclusions (1 d.)\nRelated Work Modifications (4 d.)\nResearch Methodology (1 d.)\nGlossary of Processes and Activities (1 d.)\nDesign (1 d.)\nApplication Characteristics Refinement (3 d.)\nUse cases/System Models/Architectural patterns (7 d. per use case)\nCorrections after Reviews (2 d. per review)\nCalendar\nSWAP Paper Correction (2/12/2008)\nInformation Integration finishing (4/12/2008)\nRelated Work Modifications (10/12/2008)\nUse cases/System Models/Architectural patterns (12/1/2008)\nApplication Characteristics Refinement (15/1/2008) --> PAPER SENDING TO CASE STUDIES\nIntroduction and Executive Summary (19/1/2008)\nResearch Methodology (20/1/2008)\nReviews/Corrections/Language (27/1/2008)\nCASE STUDIES -> Cases studies integration (29/1/2008)\nFirst version sent to reviewer (16/1/2008)\nReadings\n\nInsert readings.\nRelated work\n\nMcGuiness et al. 2009.\nExplaining Semantic Web Applications\nIn this work the authors introduce the concept of explanation for Semantic Web applications. Explanation can be viewed as a way in wich the SW application provides transparency to the user concerning its results. This work presents three paragims in the SW context, and for each paradigm the authors identify explanation requirements. Finally they describe a general framework called, Inference Web that includes the Proof Markup Language (PML), an ontology describing terms used to represent provenance, justifications and trust relations.\nThe three paradigms that this work identifies are:\nCollaboration: human or machine agents that interact and share knowledge with the common goal of solving a particular problem. Examples provided are Semantic Wiki, Content Management Systems and the integration of multy-agent systems and Semantic Web Services.\nAutonomy: an individual agent's autonomy controls its ability to act independently. Traditional web-based applications have very little autonomy, since they primarily take direct input from the user and retrieve information consistent with the query. In contrast SW appications have more autonomy because they can take several autonomous decision, such as wich content sources to use, wich services to call and compose, and how to enhace the query with background representation information, all in attemp to answer the user's question as efficently and usefully possible.\nUse of ontologies: to support information integration as well as to to identify inconsistences between data coming from multiple sources. Agents (human or machines) can decide to use a term meaning as specified in a particular ontology in order to comunicate more effectively as well as improving consistence across applications. Other typical use of ontologies are content search and context search.",
  "speaker": "SYSTEM",
  "uuid": "2a3122c8-bf0e-4292-ab57-1bdcac9ee475"
}
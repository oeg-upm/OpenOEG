{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 21\nBÚSQUEDA \n \n21 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \n• \nel modelo es independiente de la representación elegida para reglas \ny memoria de trabajo; \n• \nes posible siempre que el lenguaje soporte el reconocimiento de \npatrones. \n• Modelo plausible del mecanismo humano de resolución de problemas. \n \nIntérpretes generales de sistemas de producción: \n• Lenguajes basados en reglas: \n• \nOPS5 (Brownston, en 1985, de CMU, en Common Lisp usa RETE); \n• \nCLIPS (C Language Integrated Production System) (de NASA, \npermite la integración con lenguajes como C y Ada). \n• Lenguajes basados en lógica: el más extendido es PROLOG. \n• Armazones de sistemas expertos: \n• \nEMYCIN; \n• \nen entornos de IA (KEE, KnowledgeCraft, LOOPS, …). \n• Arquitecturas generales de resolución de problemas: \n• \nGPS (Newell, Shaw, Simon) 1963; \n• \nSOAR (Newell, Laird, …) 1987. \n \n2.3. Representación de problemas. \nUna vez decidido que el problema planteado va a ser resuelto por medio de un \nsistema de producción/búsqueda en el espacio de estados, debemos elegir una \nrepresentación adecuada para el problema. Esto debe ser resuelto en tres niveles: \n• Conceptual. \n• Lógico. \n",
  "speaker": "SYSTEM",
  "uuid": "04cb5213-e209-46bd-af3e-074706997937"
}
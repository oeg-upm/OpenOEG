{
  "message": "SYSTEM: Neon_2008_d2.2.2.pdf: Página 106\nPage 106 of 124\nNeOn Integrated Project EU-IST-027595\nText2Onto [CV05] performs synonym extraction on the basis of patterns.\nIt combines machine learning\napproaches with basic linguistic processing such as tokenisation or lemmatisation and shallow parsing. Since\nlike SPRAT it is based on the GATE framework, it offers ﬂexibility in the choice of algorithms to be applied.\nCompared with our work, it has a smaller number of lexico-syntactic patterns. On the other hand, it applies\nadditional statistical clustering and parsing for relation extraction All in all, this leads to more data, but not\nnecessarily to an improvement in the resulting ontology in terms of precision.\nWe have identiﬁed three sets of patterns which can help us identify concepts, instances and properties to\nextend the ontology: the well-known Hearst patterns (Section 7.2.1), the Lexico-Syntactic Patterns developed\nin NeOn corresponding to Ontology Design Patterns (Section 7.2.2), and some new contextual patterns\ndeﬁned by us which take into account contextual information (Section 7.2.3).\n7.2.1\nHearst patterns\nThe Hearst patterns are a set of lexico-syntactic patterns that indicate hyponymic relations [Hea92], and\nhave been widely used by other researchers. Typically they achieve a very high level of precision, but quite\nlow recall: in other words, they are very accurate but only cover a small subset of the possible patterns for\nﬁnding hyponyms and hypernyms. The patterns can be described by the following rules, where NP stands\nfor a Noun Phrase and the regular expression symbols have their usual meanings1:\n• such NP as (NP,)* (or|and) NP\nExample: . . . works by such authors as Herrick, Goldsmith, and Shakespeare.\n• NP (,NP)* (,)?\n(or|and) (other|another) NP\nExample: Bruises, wounds, or other injuries. . .\n• NP (,)?\n(including|especially) (NP,)* (or|and) NP\nExample: All common-law countries, including Canada and England. . .\nHearst actually deﬁned ﬁve different patterns, but we have condensed some of them into a single rule. Also,\nwhere Hearst deﬁnes the relations as hyponym-hypernym, we need to be more speciﬁc when translating\nthis to an ontology, as they could represent either instance-class or subclass-superclass relations. To make\nthis distinction, we tested various methods. In principle, POS-tagging should be sufﬁcient, since proper\nnouns generally indicate instances, but our tagger mistags capitalised common nouns (at the beginning of\nsentences) as proper nouns frequently enough that we cannot rely on it for this purpose. We also looked\nat the presence or absence of a determiner preceding the noun (since proper nouns in English rarely have\ndeterminers) and whether the noun is singular or plural, but this still left the problem of the sentence-initial\nnouns. Finally, we decided to pre-process the text with the named entity recognition application ANNIE, and\nonly consider certain types of named entities (Person, Location, Organization, and potentially some unknown\nentity types) as candidates for instances; all other NPs are considered to be classes. This gave much better\nresults, occasionally missing an instance but almost never overgenerating.\n7.2.2\nLexico-Syntactic Patterns\nThe second type of patterns investigated was the set of Lexico-Syntactic Patterns (LSPs) corresponding to\nOntology Design Patterns [dCGPMPSF08]. We implemented a number of these patterns in our application\n(for the time being, we ignored some of the more complex relation types because we were not able to\nimplement them easily). For each relation, there are several possible patterns: mostly these are all combined\ninto a single rule in our grammars, but we separate them here for ease of comprehension. The grammars\nare written in JAPE [CMT00]: further details are discussed in Section 7.3.1.\n1() for grouping; | for disjunction; *, +, and ? for iteration.\n",
  "speaker": "SYSTEM",
  "uuid": "a65a22cd-5e98-4340-9f0b-07665a7ff050"
}
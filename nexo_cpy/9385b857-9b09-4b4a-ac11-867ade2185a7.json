{
  "message": "SYSTEM: D5.3.1-v1.0.pdf: Página 57\nD5.3.1 NeOn Development Process and Ontology Life Cycle \nPage 57 of 111 \n2006–2007 © Copyright lies with the respective authors and their institutions. \n \nInformation inside the implemented ontology includes natural language comments, ontology \nmetadata, and implementation code. \nIn summary: anything that could be useful to help users, who did not build the ontology, to \nunderstand and learn how the ontology was built. Note that the level of granularity of \ndescriptions (might) help or hinder the understanding of the ontology.  \n Ontology Elicitation is a knowledge acquisition activity in which conceptual structures (e.g. T-\nBox) and their instances (e.g. A-Box) are acquired from domain experts. \n \n Ontology Enrichment refers to the activity of extending an ontology with new conceptual \nstructures (e.g., concepts, roles, axioms, etc.). \n Ontology Environment Study refers to the activity of analyzing the environment in which the \nontology is going to be developed. \n Ontology Evaluation refers to the activity of checking the technical quality of an ontology \nagainst a frame of reference. \n Ontology Evolution [54] refers to the activity of facilitating the modification of an ontology by \npreserving its consistency. \nNote: Ontology Evolution can be seen as a consequence of different activities during the \ndevelopment of the ontology. \n Ontology Extension is an ontology enrichment activity for stretching the ontology in width. \n Ontology Feasibility Study [32] refers to the activity of answering questions like: is it possible \nto build the ontology? is it suitable to build the ontology?, etc. \n Ontology Formalization [32] refers to the transformation of a conceptual model into a formal \nor semi-computable model according to a knowledge representation paradigm (e.g., \ndescription logics, frames, rules, etc.).  \n Ontology Forward Engineering [33] refers to the activity of outputting a new implementation \nof the ontology on the basis of the new conceptual model. \n Ontology Implementation refers to the activity of generating computable models according to \nthe syntax of a formal representation language (e.g., RDF(S), OWL, FLogic, etc.). \n Ontology Integration refers to the activity of including one ontology in another ontology. \n Knowledge Acquisition for Ontologies comprises activities for capturing knowledge (e.g., T-\nBox and A-Box) from a variety of sources (e.g., documents, experts, data bases, etc.). We can \ndistinguish between: Ontology Elicitation, Ontology Learning and Ontology Population. \n \n Ontology Learning is a knowledge acquisition activity that relies on (semi-) automatic \nmethods to transform unstructured (e.g. corpora), semi-structured (e.g. folksonomies, html \npages, etc.) and structured data sources (e.g. data bases) into conceptual structures (e.g. T-\nBox). \n \n Ontology Localization refers to the adaptation of an ontology to a particular language and \nculture. \n Ontology Mapping refers to the activity of finding the correspondences between two or more \nontologies and storing/exploiting them. A synonym for this activity is Ontology Aligning. \n Ontology Matching refers to the activity of finding or discovering relationships or \ncorrespondences between entities of different ontologies or ontology modules. \nNote: Ontology Matching can be seen as the first stage of Ontology Aligning. \n Ontology Merging refers to the activity of creating a new ontology or ontology module from \ntwo or more, possibly overlapping, source ontologies or ontology modules. \n",
  "speaker": "SYSTEM",
  "uuid": "9385b857-9b09-4b4a-ac11-867ade2185a7"
}
{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 68\nBÚSQUEDA \n \n68 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \nde vista de la programación es ordenar las reglas (casillas) de derecha a izquierda o \nde izquierda a derecha. Formalmente, si Ri,j representa la regla \"pon una reina en la \ncasilla (i,j)\" las dos ordenaciones que podríamos construir, sin mucha reflexión \nprevia, serían [Ri,1, Ri,2, …, Ri,n] o [Ri,n, Ri,n-1, …, Ri,1]. Nótese que sólo es \nrelevante el orden de las reglas en una misma fila, pues, por el modo de \nrepresentación, son las únicas que pueden estar sensibilizadas simultáneamente. \nSin embargo, esas ordenaciones no tienen en cuenta que no todas las casillas \n\"cubren\" el mismo espacio en el tablero. Por ejemplo, una dama en la diagonal \nprincipal (en una casilla (i,i)) limita mucho las posibilidades en las siguientes filas. \nSiguiendo esta idea podemos definir la siguiente función asociada a cada casilla: \ndiag(i,j) es la máxima longitud de las dos diagonales que pasan por la casilla (i,j). Por \nejemplo, en el caso de las 4 reinas, diag(3,2) = 4, ya que una de las diagonales \ncubre 3 casillas y la otra 4. Entonces ordenamos las reglas en una misma fila del \nsiguiente modo: Ri,j precede a Ri,m si o bien (1) diag(i,j) < diag(i,m), o bien (2) \ndiag(i,j) = diag(i,m) y j < m. Por ejemplo, en las 4 reinas el orden en la fila 3 sería: \n[R3,1, R3,4, R3,2, R3,3]. \nEjercicios.  \n1) Dibujar el árbol de búsqueda en profundidad para las 4 reinas con este nuevo \norden en las reglas. Compárese con el árbol de búsqueda con las ordenaciones \nanteriores. Comprobar que en anchura no varía demasiado el árbol de búsqueda \ncon cualquiera de las ordenaciones. \n2) Implementar esta variante (basta con modificar la función expandir-nodo). \nEstas últimas disquisiciones respecto al orden de las reglas en el problema de las n \nreinas podrían llevar a pensar que estamos aprovechando información sobre el \nproblema concreto que vamos a resolver y, por tanto, que las estrategias de \nbúsqueda (en anchura y en profundidad) no serían \"ciegas\" en este caso. Sin \nembargo, la diferencia entre estrategias no informadas y estrategias heurísticas se \nencuentra en el momento en el que el conocimiento particular sobre el problema es \naplicado. En las estrategias no informadas el conocimiento es utilizado en la fase de \ndiseño del sistema de producción (y de análisis: piénsese en como afecta el modo \nde representar el problema en el proceso de búsqueda). Aquí se incluye qué son las \nreglas, cómo están implementadas, etc. y, también, cuál es el orden de disparo de \nlas reglas sensibilizadas. Por el contrario, en las estrategias heurísticas el \nconocimiento particular sobre el problema a resolver es utilizado en tiempo de \nejecución, dirigiendo directamente la búsqueda. \n",
  "speaker": "SYSTEM",
  "uuid": "6b49141c-a0b2-415a-8a07-1ea44aea913f"
}
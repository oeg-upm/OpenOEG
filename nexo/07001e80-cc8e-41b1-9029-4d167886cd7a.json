{
  "message": "SYSTEM: Eswc2010webofdatatrack_submission_2.pdf: PÃ¡gina 11\nrepresentation of data types. If a query returns two values, the internal representation \nis <value1, value2>. This is encoded as a data stream for a faster transfer of data \nbetween OGSA-DAI nodes. \nOGSA-DQP [12] is the Distributed Query Processing extension of OGSA-DAI, \nwhich optimizes the access to distributed OGSA-DAI data resources.  \n3.3.2 SPARQL-DQP OGSA-DAI and OGSA-DQP implementation \nFrom a high level point of view, SPARQL-DQP can be defined as an extension of \nOGSA-DQP that considers an additional query language: SPARQL. The design of \nSPARQL-DQP follows the idea of adding a new type of resource to the standard data \nresources provided by OGSA-DAI (relational databases, XML databases and file \nsystems), and extending the parsers, planners, operators and optimizers that are \nhandled by OGSA-DQP in order to handle this new type of resource.  \nTherefore our first extension to OGSA-DAI consists in adding a new type of data \nresource that accesses RDF datasets. This RDF data resource provides access to thse \nRDF stores that offer their data by means of SPARQL endpoints. This resource is \nconfigured with the URL of the SPARQL endpoint to which the query is addressed, \ntogether with other lifetime properties. \nQueries are sent to this new type of RDF data resource by means of OGSA-DAI \nactivities. The implementation of the RDF data resource sends the query to the \ncorresponding SPARQL endpoint and waits for the results. These results can be \ndirectly returned to the requester or kept at the server wrapped as a new data resource, \nfollowing direct and indirect access modes respectively. These results are provided as \nRDF data streams, using the internal data representation used by OGSA-DAI, what \nallows faster communication between nodes in the distributed settings.  \nOnce it is possible to access RDF datasets using OGSA-DAI, it is also possible to \nextend OGSA-DQP to accept, optimize and distribute SPARQL queries across \ndifferent data nodes. SPARQL-DQP extends OGSA-DQP with the new parsers, LQP \nbuilders, operators and optimizers described in the previous section, so as to read the \nquery, create a basic query plan, optimize it, partition it and send it to the different \nnodes in which the different parts of the query will be processed. The extension \nfollows the recommendations described in [7] and [9].  \nOnce the query plan has been created, optimized and distributed across the nodes it \nis time for executing it. From the original planning a set of OGSA-DAI workflows is \ncreated. Each of these workflows represents a partition of the logical query plan \ncreated and these workflows are connected through their inputs and outputs to \nproduce the result of the query. Once the workflow has been created the generated \nremote requests and local sub-workflows are executed and the results collected and \nreturned by the activity.  \n",
  "speaker": "SYSTEM",
  "uuid": "07001e80-cc8e-41b1-9029-4d167886cd7a"
}
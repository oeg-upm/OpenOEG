{
  "message": "SYSTEM: OntologyDebugging_KCAP2009.pdf: Página 6\nthe ontology developer has to verify that the taxonomic \nrelations between C2 and its subclasses are still up-to-date \n(disjoint and exhaustive decompositions, if they existed). \nAnother check to be done is whether there is any difference \nbetween the formal definitions of some of the existing \nclasses up in the hierarchy, since it could be the case that \ntwo upper level classes now have the same definition, what \nmay mean that one of them is not useful anymore.  \nAntiPattern OILWPI \nR1⊆R2, C1⊆∀R1.C2, C1⊆∀R2.C3, disj(C2,C3) => \nC1⊆∀R2.(C2∪C3) \nIf it makes sense, follow the same recommendation pro-\nposed for the OIL anti-pattern, as if the axiom C1⊆∀R2.C2 \nhad been included.  \nAntiPattern UE \nC1⊆∀R.C2, C1⊆∃R.C3, disj(C2,C3) => \n     #1: C1⊆∀R.(C2∪C3)  \n     #2: C1⊆∀R.(C2∪C3)∩∃R.C2 \n     #3: C1⊆∀R.(C2∪C3)∩∃R.(C2∪C3)  \n     #4: C1⊆∃R.(C2∪C3) \nAs described in [12], ontology developers sometimes do not \ndistinguish clearly between existential and universal restric-\ntions. In general, the solution #2 is the most accepted one. \nHowever, there are other possibilities that can be selected \naccording to the intended meaning of the original defini-\ntions. \nAntiPattern UEWI \n(I) C1⊆C2, C1⊆∃R.C3, C2⊆∀R.C4, disj(C3,C4) => \nC1⊆∀R.(C3∪C4),C2⊆∀R.(C3∪C4) \n(II) C1⊆C2, C1⊆∀R.C3, C2⊆∃R.C4, disj(C3,C4) =>  \nC1⊆∀R.(C3∪C4)∩∃R.C4 \nThese two anti-patterns are very difficult to debug, since \nthere could be multiple reasons for their appearance. Our \nproposal is aimed at obtaining consistency, but it should be \nclearly analysed by the ontology developer.  \nAntiPattern UEWPI \nR1⊆R2, C1⊆∃R1.C2, C1⊆∀R2.C3, disj(C2,C3) => \nC1⊆∀R2.(C2∪C3) \nIf it makes sense, we propose following the UE recommen-\ndations after adding the restriction C1⊆∀R2.C2. Like in the \nprevious case, there are several solutions for this antipat-\ntern. For instance, in some of our experiments we realised \nthat our ontology developers misunderstood the subProper-\ntyOf relation between roles, and hence the solution was to \nremove that relation. \nAntiPattern UEWIP \nC2⊆∃R-1.C1, C1⊆∀R.C3, disj(C2, C3) \nC1⊆∀R.(C2∪C3) \nWe propose adding the reverse axiom of the C2 definition \n(C1⊆∃R.C2) and, if it makes sense, follow the UE recom-\nmendations.  \nAntiPattern EID \nC1 ≡ C2, disj(C1,C2) => C1⊆C2 or C2 is a label of C1.  \nThe ontology developer should be asked about whether he \nreally wants to define a synonym or a subclass-of relation. \nMaybe he made an error and one of these axioms can be \nremoved. Depending on the ontology developer’s answer, \nthe equivalent axiom should be transformed into a subclass-\nof one or the less used concept should be suppressed ac-\ncording to the SOE recommendations. \n3.2.2 \nRecommendations for Non-Logical Anti-\npatterns \nAntiPattern SOE \nC1 ≡ C2 => C1.[rdfs:label|comment] = \nC2.[rdfs:label|comment] \nIn this case, it is quite normal that C1 or C2 are not used in \nany other definitions of the ontology. Considering that this \nis the case for C2, the recommendation would be, if it \nmakes sense, to add the label and natural language defini-\ntion of C2 to the corresponding annotation properties of C1. \nIf the two concepts are used in other ontology axioms, then \nthe expert can decide which one to remove, if it makes \nsense, and the renaming has to be done across the whole \nontology.  \nAntiPattern SOS  \nC1⊆∃R.C2, C1⊆∃R.C3, disj(C2,C3) => C1⊆∃R.(C2∪C3) \nThis anti-pattern has to be debugged taking into account the \nrelationship between C2 and C3. If it had been C2⊆C3 then \nthe ontology developer may want to define C1 with the \nmost specialized axiom (C1⊆∃R.C2) or the most general \none (C1⊆∃R.C3). If C2 and C3 are disjoint, the expert has \nto be asked about whether this is really what he intended to \nrepresent, explaining clearly that an instance of C1 would \nneed to have R connected to at least two other instances, \neach one coming from each of the concepts C2 and C3. \nNormally, the solution will be the one proposed, using a \ndisjunction. \nAntiPattern SOSWI  \nC1⊆C2, C1⊆∃R.C3, C2⊆∃R.C4, disj(C3,C4) => \n     C2⊆∃R.(C3∪C4) \nIf it makes sense, add the existential restriction ∃R.C3 to \nthe definition of class C2 and apply the SOS recommenda-\ntion. The strategy for correcting this antipattern is similar to \nwhat was proposed for OILWI, that is, move from the \nleaves to the concepts that are up in the hierarchy.  \n",
  "speaker": "SYSTEM",
  "uuid": "cac2a9ac-0ff4-41b8-ab10-9e2d86b849cd"
}
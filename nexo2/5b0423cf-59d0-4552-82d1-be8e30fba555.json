{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 5\nBÚSQUEDA \n \n5 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \nLa primitiva DEFUN de Common Lisp va a permitir ligar un cierto símbolo (cuadrado \nen el ejemplo) con una definición de función (en este caso, la función que a x le \nhace corresponder (* x x)). La sintaxis es fácilmente deducible del ejemplo: se \ntrata de una lista en la que defun es seguido de un símbolo (el nombre de una \nfunción), de una lista de símbolos (los nombres de los parámetros formales) y de \nuna expresión Lisp cualquiera (el cuerpo de la función). Obsérvese el formato en que \nha sido escrita la expresión de entrada: el cuerpo de la función aparece en una línea \ndiferente. En Lisp, los elementos de una lista pueden estar separados por cualquier \nnúmero de espacios en blanco o de saltos de línea. Pero la forma de escribir la \ndefinición de esa función no es casual: hay unas reglas de escritura del código y de \nsangrado (indentación) que permiten hacer los programas más fácilmente legibles. \nDurante el proceso de evaluación de la expresión anterior tiene lugar algo que no \naparecía en los ejemplos anteriores: se produce un efecto lateral. Un efecto lateral \nes algo que acontece durante el proceso de evaluación y que es distinto de la \nconstrucción del valor a devolver (el valor que será escrito en la fase de escritura del \nbucle de lectura-evaluación-escritura). En el caso de defun el efecto lateral obtenido \nes la ligadura del nombre de la función con la función en sí, ligadura que altera el \ncontexto de modo que el nombre podrá ser utilizado en las siguientes expresiones \ndel usuario (hasta que termine la sesión). Habitualmente defun es utilizado para \nconseguir ese efecto lateral. Pero las normas generales de Lisp deben ser \nrespetadas, por lo que la evaluación de la expresión debe producir un valor que será \na continuación escrito. El valor que se devuelve es el nombre de la función, como \nqueda recogido en el ejemplo. Nótese que el entorno puede decidir escribir el \nsímbolo nombre en mayúsculas. En Lisp los símbolos pueden ser escritos (por el \nusuario o por el sistema) indistintamente con mayúsculas o minúsculas (como los \nidentificadores en Pascal, por ejemplo, pero no como sucede en C). \nTras evaluar la expresión anterior, el usuario puede utilizar el símbolo cuadrado \ncomo si se tratase de un operador predefinido, como puede comprobarse en los \nsiguientes ejemplos:  \n \n> (cuadrado 3)  \n===> 9 \n \n> (+ (cuadrado 3) (cuadrado 5)) \n===> 34 \n \n1.2. Primera visita a la familia de \nelementos Lisp y al evaluador. \n",
  "speaker": "SYSTEM",
  "uuid": "5b0423cf-59d0-4552-82d1-be8e30fba555"
}
{
  "message": "SYSTEM: DistributedSPARQLRelatedWork.pdf: Página 2\n●\nCatalog stores descriptions and statistics of sources\n●\nstatistics updated periodically by monitoring service\n●\nDescription using own vocabulary in RDF\n●\nFinds sources that store instances of a determined type. Breaks the 'canonical' plan into \nsub-plans that will be executed by the sources.\n●\nSo the D2R system transforms the SPARQL sub-plan to SQL internally and executes it \nin case of wrapped relational sources.\nOptimisations\n●\nPush down of filter expressions\n●\nPush down of optional graph patterns\n●\nPush down of local joins where possible\n●\njoin and union reordering. All optimisations are 'being implemented' at the time of the \nwriting of the paper, so no  more details given.\nLimitations\n●\nMappings through D2R, need to know language for wrapping relational sources\n●\nNeed to explicitly provide service description for sources, how are statistics updated?\n●\nIdentify the SPARQL queries that can be handled, some construct not supported, only \nSELECT. \n●\nRequires all subject variable to be typed\nArchitecture\n●\nMediator-wrapper architecture\n●\nSources are SPARQL endpoints (wrapped or not)\nStatus\n●\nResearch prototype.\nNetworked Graphs\nSchenk, S. & Staab, S. (2008), Networked graphs: a declarative mechanism for SPARQL rules, \nSPARQL views and RDF data integration on the web, in 'WWW '08: Proceeding of the 17th \ninternational conference on World Wide Web' , ACM, New York, NY, USA , pp. 585--594\n \nJan Zemánek, Simon Schenk: Optimizing SPARQL Queries over Disparate RDF Data Sources \nthrough Distributed Semi-Joins. International Semantic Web Conference (Posters & Demos) \n2008\n \nFunctionality\n●\nExtend Named Graphs with SPARQL-based mechanism\n●\nViews NG=(n,G,[G1,....Gn],m),  G is graph, m is a mapping from list of networked graps \nto a view\n●\nA view can be used to reference a graph in another remore RDF data source\n●\nSyntactic extension to RDF for expressing views in RDF Graphs, essentially\n●\nSesame SAIL implementation capable of doing Networked graphs\n●\nUser explicitly says which queries are executed in which source (using the views)\nOptimisations\n●\nDistributed semi-joins used when dealing with remote nodes.\nLimitations\n",
  "speaker": "SYSTEM",
  "uuid": "af2defd9-a509-45a4-85e9-ce5eec296ecf"
}
{
  "message": "SYSTEM: OWL.pdf: Página 18\nBasic Inference Tasks\n•\nSubsumption – check knowledge is correct (captures intuitions)\n–\nDoes C subsume D w.r.t. ontology O? (in every model I of O, CI ⊆DI )\n•\nEquivalence – check knowledge is minimally redundant (no unintended \nsynonyms)\nsynonyms)\n–\nIs C equivalent to D w.r.t. O? (in every model I of O, CI = DI )\n•\nConsistency – check knowledge is meaningful (classes can have instances)\n–\nIs C satisfiable w.r.t. O? (there exists some model I of O s.t. CI ≠∅)\n•\nInstantiation and querying\n–\nIs x an instance of C w.r.t. O? (in every model I of O, xI ∈CI )\n–\nIs (x,y) an instance of R w.r.t. O? (in every model I of O, (xI,yI) ∈RI )\n© O. Corcho, MC Suárez de Figueroa Baonza\n35\nOWL and SWRL\n•\nAll reducible to KB satisfiability or concept satisfiability w.r.t. a KB\n•\nCan be decided using highly optimised tableaux reasoners\nTableaux Algorithms\n•\nTry to prove satisfiability of a knowledge base\n•\nHow do they work\n–\nThey try to build a model of input concept C\n•\nTree model propert\n•\nTree model property\n– If there is a model, then there is a tree shaped model\n•\nIf no tree model can be found, then input concept unsatisfiable\n–\nDecompose C syntactically \n•\nWork on concepts in negation normal form (De Morgan’s laws)\n•\nUse of tableaux expansion rules\n•\nIf non-deterministic rules are applied, then there is search\n–\nStop (and backtrack) if clash\n•\nE.g. A(x), ¬A(x)\n© O. Corcho, MC Suárez de Figueroa Baonza\n36\nOWL and SWRL\n–\nBlocking (cycle check) ensures termination for more expressive logics\n•\nThe algorithm finishes when no more rules can be applied or a \nconflict is detected\n",
  "speaker": "SYSTEM",
  "uuid": "1f0a926b-2166-47a7-9126-1a8e2625e59e"
}
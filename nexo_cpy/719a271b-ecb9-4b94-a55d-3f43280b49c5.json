{
  "message": "SYSTEM: Neon_2008_d2.2.2.pdf: Página 71\nD2.2.2 Methods and Tools Supporting Re-engineering\nPage 71 of 124\nTable 4.6: Pattern for Re-engineering a Classiﬁcation Scheme which follows the\nﬂattened model(continued)\nSlot\nValue\n(UML) Example Solution\nOntology\nPROCESS: How to Re-engineer\nGeneral\n1. Identify the different classiﬁcation scheme item groups, i.e. Gi levels, and create a\nclass for each level, Ci.\n2. If there is a relationship between the entity classes then create it as an ad-hoc binary\nrelation, ri ∈R.\n3. If there is a super-class for the new entity related classes then create it and set the\nappropriate subClassOf relation between the entity classes and the super-class.\n4. Identify the classiﬁcation scheme items from the ﬁrst level, cei ∈G1 , using the level\ncolumn and taking care to avoid duplicity.\n5. For each one of the above selected classiﬁcation scheme items cei:\n5.1. Create the corresponding instance of the appropriate entity class, Ii.\n5.2. Identify the classiﬁcation scheme items, cej, on the next level, which are chil-\ndren of cei, using the path and level columns.\n5.3. For each one of the identiﬁed classiﬁcation scheme items, cej:\n5.3.1. Create the corresponding instance of the appropriate entity class, Ij.\n5.3.2. If there is a relation between the entity classes, Ci and Cj, create the\nrelation instance between Ii and Ij.\n5.3.3. Repeat from step 5.2 for cej as a new cei.\n2006–2008 c⃝Copyright lies with the respective authors and their institutions.\n",
  "speaker": "SYSTEM",
  "uuid": "719a271b-ecb9-4b94-a55d-3f43280b49c5"
}
{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 8\nBÚSQUEDA \n \n8 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \n \n> (5 3) \n \n===> ¡¡¡¡ ERROR !!!! \n \n> (cuadrad 3) ===> ¡¡¡¡ ERROR !!!! \nEn otro caso, se procede a evaluar secuencialmente de izquierda a derecha el resto \nde miembros de la lista, siguiendo (recursivamente) las mismas reglas que estamos \ndando; si en algún momento se produce un error, el proceso es detenido y el usuario \nes informado de que se ha producido un error. En otro caso (es decir, si cada uno de \nlos miembros de la lista han sido evaluados con éxito), se procede a aplicar el \noperador que aparecía en cabeza (primer lugar) de la lista a los valores obtenidos en \nel proceso de evaluación anterior. Aquí pueden volver a aparecer nuevos errores, \npor ejemplo debidos a que el número de argumentos o el tipo de los argumentos \ndefinitivos (es decir, tras su evaluación) no sean los adecuados. Si no se produce \nningún error adicional, se alcanza un elemento lisp que será el resultado de la \nevaluación de la lista inicial. La situación puede ser explicada con más detalle en el \ncaso de que el operador haya sido definido por el usuario (si es predefinido, el \nmanual del lenguaje es el que nos indicará el comportamiento del operador), en la \nlínea que ha sido esbozada más arriba cuando se ha hablado de la evaluación de \nsímbolos con ligaduras (locales), pero por el momento nos contentamos con dar esta \ninformación somera. \nEsta es la regla general, la que se aplica por defecto, para la evaluación de listas. \nPero ya conocemos un ejemplo de evaluación de una lista que no ha seguido el \nmismo proceso. Así cuando explicamos el ejemplo: \n \n> (defun cuadrado (x) \n \n \n(* x x)) \n \n===> CUADRADO \nno se produjo ningún error, mientras que si se hubiese seguido el procedimiento \ngeneral se hubiese producido un error al intentar evaluar el símbolo cuadrado que \nno tiene asociado ningún valor. Esto es así porque una lista encabezada por defun \nes tratada de un modo especial por el evaluador. En particular, los argumentos \nprovisionales de defun no serán evaluados. Un símbolo como defun, que tiene \nasociado un operador predefinido y tal que si aparece en cabeza de una lista las \nreglas generales de evaluación de listas no son aplicadas sobre ella, se denomina \nelemento especial. Cada elemento especial requiere una información adicional sobre \ncómo se evalúan las listas en las que aparece como primer miembro. \nOtra observación que puede ser extraída de las explicaciones anteriores es que, de \nhecho, los símbolos son tratados por el evaluador de modo diferente según \naparezcan como primer miembro de una lista o en cualquier otra situación (dentro o \n",
  "speaker": "SYSTEM",
  "uuid": "54eb62fb-ea0b-4b2d-b704-198a41913392"
}
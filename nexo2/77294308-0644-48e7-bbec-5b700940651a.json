{
  "message": "SYSTEM: D5.3.1-v1.0.pdf: Página 58\nPage 58 of 111 \nNeOn Integrated Project EU-IST-027595 \n \n Ontology Modification [54] refers to the activity of changing the ontology, without considering \nthe consistency. \n Ontology Modularization refers to the activity of identifying one or more modules in an \nontology with the purpose of supporting reuse or maintenance. \nNote: We can make distinctions between: Ontology Module Extraction and Ontology \nPartitioning. \n \n Ontology Module Extraction refers to the activity of obtaining from an ontology concrete \nmodules to be used for a particular purpose (e.g. to contain a particular sub-vocabulary of the \noriginal ontology).  \n Ontology Partitioning refers to the activity of dividing an ontology into a set of (not necessary \ndisjoint) modules that together form an ontology and that can be treated separately.  \n Ontology Population is a knowledge acquisition activity that relies on (semi-) automatic \nmethods to transform unstructured (e.g. corpora), semi-structured (e.g. folksonomies, html \npages, etc.) and structured data sources (e.g. data bases) into instance data (e.g. A-Box).  \n Ontology Pruning refers to the activity of discarding conceptual structures (e.g., part of T-Box) \nof a given ontology that are not or no longer relevant. \nNote: Pruning is mostly used in combination with ontology learning methods to discard \npotentially irrelevant learned concepts/relations. \n Ontology Quality Assurance [32] refers to the activity of assuring that the quality of each and \nevery process carried out and product built (ontology, software and documentation) is \nsatisfactory.   \n Non Ontological Resource Reengineering refers to the process of retrieving and \ntransforming an existing non ontological resource (data bases, controlled vocabularies, etc.) \ninto an ontology.  \n Ontology Reengineering [33] refers to the process of retrieving and transforming a \nconceptual model of an existing and implemented ontology into a new, more correct and more \ncomplete conceptual model which is reimplemented.   \n Ontology Restructuring [33] refers to the activity of correcting and reorganizing the \nknowledge contained in an initial conceptual model, and detecting missing knowledge.  \nNote: This process contains two phases: analysis and synthesis. The ''analysis phase goal'' is \nto evaluate the ontology technically, that is, to check that the hierarchy of the ontology and its \nclasses, instances, relations and functions are complete (contain all the definitions required for \nthe domain of chemical substances), consistent (there are no contradictions in the ontology \nand with respect to the knowledge sources used), concise (there are no explicit and implicit \nredundancies) and syntactically correct. The ''synthesis phase'' seeks to correct the ontology \nafter the analysis phase and document any changes made. \n Ontology Repair refers to the activity of resolving errors (incompleteness, incorrecteness) in \nthe ontology and it is triggered by ontology diagnosis.  \n Non Ontological Resource Reuse refers to taking available non ontological resources (data \nbases, controlled vocabularies, etc.) for the development of ontologies.  \n Ontology Reuse refers to using an ontology or an ontology module in the solution of different \nproblems. Ontology reuse is the activity that allows employing an ontology or an ontology \nmodule in, for example, the development of new ontologies, the development of different \nontology-based applications, the activity of ontology aligning (as background knowledge), etc. \n Ontology Reverse Engineering [33] refers to the activity of outputting a possible conceptual \nmodel on the basis of the code in which the ontology is implemented. \n",
  "speaker": "SYSTEM",
  "uuid": "77294308-0644-48e7-bbec-5b700940651a"
}
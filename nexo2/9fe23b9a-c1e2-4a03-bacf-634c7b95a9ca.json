{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 11\nBÚSQUEDA \n \n11 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \n1.3. Condicionales, recursividad y listas \ncomo estructuras de datos. \nTras la primera visita al evaluador vamos a terminar el tema con una breve \nintroducción a la programación en Lisp. Para ello en primer lugar necesitaremos una \nprimitiva de selección condicional (un if) y esto a su vez requiere de la noción de \npredicado: función que devuelve un valor booleano. Así pues debemos comenzar \npor explicar cuáles son los valores booleanos en Lisp. El valor \"falso\" es \nrepresentado en lisp por el símbolo nil. Este símbolo es una constante predefinida \ncuyo valor es el mismo símbolo nil: \n \n> nil \n===> NIL \nEl valor booleano \"cierto\" por defecto es el símbolo t (por \"true\") que también se \ncomporta respecto al evaluador como una constante de valor ella misma: \n \n> t ===> T \nHemos indicado que t es el valor \"cierto\" por defecto debido a que en Lisp cualquier \nelemento distinto de nil es considerado como \"cierto\" (es una situación similar a la \nque se produce en C, donde el entero 0 es el valor booleano \"falso\", mientras que \ncualquier número distinto de cero es considerado \"cierto\", aunque el valor \"cierto\" \npor defecto es 1). Eso significa que el valor t es sólamente elegido por Lisp para ser \ndevuelto cuando ningún otro valor distinto de nil es significativo en ese contexto. \nPara terminar con esta breve introducción a los valores booleanos en Lisp, es \nnecesario observar que el símbolo nil tiene un sinónimo: la lista vacía (). Es decir, \nel símbolo nil y la lista vacía () son elementos indistinguibles en Lisp. Se trata de \nun solo elemento que es el único que es simultáneamente un átomo (de hecho, un \nsímbolo) y una lista. Esto conlleva varias consecuencias. Así la regla de evaluación \nde listas se generaliza del siguiente modo para la lista sin ningún miembro: \n \n> () ===> NIL \nY la afirmación de que cualquier elemento distinto de nil en Lisp representa el valor \nbooleano \"cierto\" no nos debe hacer pensar que toda lista en Lisp representa el valor \n\"cierto\"; esto sólo es verdad para las listas que tienen algún miembro, las que no son \nla lista vacía. \nEl Lisp existen muchos predicados predefinidos que permiten conocer propiedades o \ncomparar elementos. Veamos algunos: \n",
  "speaker": "SYSTEM",
  "uuid": "9fe23b9a-c1e2-4a03-bacf-634c7b95a9ca"
}
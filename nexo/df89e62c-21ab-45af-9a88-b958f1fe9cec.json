{
  "message": "SYSTEM: 03_SPARQL.pdf: Página 48\n•  SPARQL executes “inference” rules on the data, \nwhen answering queries, e.g.: \nrdfs1: { ?S rdf:type ?C } :- { ?S ?P ?O . ?P rdfs:domain ?C . }!\nrdfs2: { ?O rdf:type ?C } :- { ?S ?P ?O . ?P rdfs:range ?C . }!\n!\nrdfs3: { ?S rdf:type ?C2 } :- {?S rdf:type ?C1 . ?C1 rdfs:subclassOf ?\nC2 . }!\n56 \nOntological Engineering Group \nEssential idea behind RDFS inference: \nbeer:Ale   rdfs:subClassOf beer:TopFermentedBeer . \n \nbeer:Bock  rdfs:subClassOf beer:BottomFermentedBeer . \n \nbeer:Lager rdfs:subClassOf beer:BottomFermentedBeer . \n \nbeer:Pilsner rdfs:subClassOf beer:BottomFermentedBeer . \n \nbeer:White rdfs:subClassOf beer:TopFermentedBeer . \n \nbeer:TopFermentedBeer rdfs:subClassOf beer:Beer. \n \nbeer:BottomFermentedBeer rdfs:subClassOf beer:Beer. \n \nbeer:Boddingtons rdf:type beer:Ale . \n \n \nbeer:Grafentrunk  rdf:type  beer:Bock . \n \n \nbeer:Hoegaarden  rdf:type  beer:White . \n \n \n… \n \nbeer:Boddingtons rdf:type beer:Ale ; \n     rdf:type beer:TopFermentedBeer; \n     rdf:type beer:Beer. \nbeer:Grafentrunk  rdf:type  beer:Bock . \n     rdf:type beer:BottomFermentedBeer; \n     rdf:type beer:Beer. \nbeer:Hoegaarden  rdf:type  beer:White ; \n     rdf:type beer:TopFermentedBeer; \n     rdf:type beer:Beer. \n \n… \n",
  "speaker": "SYSTEM",
  "uuid": "df89e62c-21ab-45af-9a88-b958f1fe9cec"
}
{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 80\nBÚSQUEDA \n \n80 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \n• \nLa escalada en profundidad (es una variante de la búsqueda en profundidad, en \nla que la heurística dirige la búsqueda, pero que sigue manteniendo el carácter \nexhaustivo). \nEn los métodos irrevocables cada estado genera a lo más un nuevo estado, de \nmodo que ABIERTOS nunca posee más de un elemento. Esto conlleva un gran \nahorro en espacio, pero hace que sólo se mantenga en expectativa un único camino \nen la búsqueda de la solución. \nEl modo en que se determina qué estado es el que sigue a uno dado, da lugar a dos \nvariantes de los esquemas en escalada irrevocables: \n• \nLa escalada simple. En este método, en el momento es que se encuentra un \nestado E que es más favorable que el que se está expandiendo, dicho estado E \nes devuelto sin generar el resto de estados hijos. \n• \nLa escalada por la máxima pendiente. En este caso, se generan todos los hijos \nde un estado, se calculan sus valores heurísticos y se determina uno de los \nestados de mejor valor heurístico; se compara dicho valor con el de el estado \nexpandido y si es mejor, se devuelve ese estado como expansión. \nEn ambos casos, si ningún estado hijo es mejor que el estado que está siendo \nexpandido, no se devuelve nada, lo que conllevará que la búsqueda termine sin \nhaber encontrado un objetivo. Nótese que la escalada simple es mucho más \ndependiente que la escalada por la máxima pendiente del orden de disparo de las \nreglas (pese a que ésta última también lo es: el valor heurístico mejor puede ser \nalcanzado en varios hijos y, en ese caso, el método no dice nada sobre qué estado \nelegir). \nEjercicios. \n1) Supóngase que se dispone de una función (defun expandir-estado \n(estado) …) que devuelve una lista de estados (tal vez vacía) con los estados \ngenerados a partir de un estado dado. Y también de otra función (defun \nfuncion-heuristica (estado) …) que asocia a cada estado un número \npositivo o cero que mide lo cerca que está el estado argumento de un estado \nobjetivo (esto es, a valores más pequeños les corresponden estados preferibles). \nPrográmese (defun expandir-nodo (nodo) …) de dos modos diferentes de \nmanera que se implemente: \n \na) una escalada simple; \n \nb) una escalada por la máxima pendiente. \n",
  "speaker": "SYSTEM",
  "uuid": "79d1cb21-ffb3-4cc0-b236-98b17aa75b58"
}
{
  "message": "SYSTEM: 03_SPARQL_Curso20122013.pdf: Página 2\n2 \nCurso Biblioteca Nacional. 21-25th November 2011 \n© Raúl García Castro et al. \nRDF(S) query languages \n• \nLanguages developed to allow accessing datasets expressed in RDF(S) (and in some cases OWL) \n• \nSupported by the most important language APIs \n- \nJena (HP labs) \n- \nSesame (Aduna) \n- \nBoca (IBM) \n- \n... \n• \nThere are some differences wrt. languages like SQL, such as \n- \nCombination of different sources \n- \nTrust management \n- \nOpen World Assumption \nRelational \nDB \nApplication \nSQL queries \nRDF(S) \nOWL \nApplication \nSPARQL, RQL, etc., queries \n3 \nCurso Biblioteca Nacional. 21-25th November 2011 \n© Raúl García Castro et al. \nQuery types \n•  Selection and extraction \n-  “Select all the essays, together with their authors and their authors’ \nnames” \n-  “Select everything that is related to the book ‘Bellum Civille’”  \n•  Reduction: we specify what it should not be returned \n-  “Select everything except for the ontological information and the book \ntranslators” \n•  Restructuring: the original structure is changed in the final \nresult \n-  “Invert the relationship ‘author’ by ‘is author of’” \n•  Aggregation \n-  “Return all the essays together with the mean number of authors per \nessay” \n•  Combination and inferences \n-  “Combine the information of a book called ‘La guerra civil’ and whose \nauthor is Julius Caesar with the book whose identifier is ‘Bellum Civille’” \n-  “Select all the essays, together with its authors and author names”, \nincluding also the instances of the subclasses of Essay \n-  “Obtain the relationship ‘coauthor’ among persons who have written the \nsame book” \n4 \n",
  "speaker": "SYSTEM",
  "uuid": "c29a98b0-1e68-4436-b5a5-ceb3b81d3645"
}
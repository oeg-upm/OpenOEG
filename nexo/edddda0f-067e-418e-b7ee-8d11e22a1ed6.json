{
  "message": "SYSTEM: Neon_2008_d2.2.2.pdf: Página 48\nPage 48 of 124\nNeOn Integrated Project EU-IST-027595\nFigure 3.1: Re-engineering Model for Non-Ontological Resources\nderlying components and create representations of the resource at the different levels of abstraction\n(design, requirements and conceptual). Since NORs can be implemented as XML ﬁles, databases or\nspreadsheet among others, we can consider them as software resources, and therefore, we use the\nsoftware abstraction levels (implementation, design, requirements and conceptual) shown in Fig. 3.1\nwithin this activity. Here the requirements and the essential design, structure and content of the NOR\nmust be recaptured.\n2. Non-Ontological Resource Transformation, whose goal is to generate a conceptual model from the\nNOR. We propose the use of Patterns for Re-engineering Non-Ontological Resources (PR-NOR) to\nguide the transformation process. First, the non-ontological resource type has to be identiﬁed. Second,\nthe internal data model of the non-ontological resource has to be identiﬁed as well. Third, the semantics\nof the relations between the non-ontological resource entities have to be identiﬁed, these semantics\ncan be a)subClassOf, b) an ad-hoc relation like partOf or c) a mix of subClassOf and ad-hoc relations.\nNext, a pattern for re-engineering non-ontological resources has to be searched according to the type\nof non-ontological resource, the internal data model and the semantics of the relations between the\nnon-ontological resource entities. Finally, the selected re-engineering pattern has to be applied to\ntransform the non-ontological resource into a conceptual model.\n3. Ontology Forward Engineering, whose goal is to output a new implementation of the ontology on the\nbasis of the new conceptual model. We use the ontology levels of abstraction to depict this activity\nbecause they are directly related to the ontology development process.\n3.1.4\nNon-ontological Resources Re-engineering Process\nThe non-ontological resource re-engineering process consists of the activities depicted in Fig.3.2. This pro-\ncess is based on the one described in D.5.4.1 [SFdCB+08]. In general, we follow the same process, but use\nthe set of patterns for re-engineering non-ontological resources described in this deliverable.\n1. Non-Ontological Resource Reverse Engineering, whose goal is to analyze a non-ontological re-\nsource to identify its underlying components and create representations of the resource at the different\nlevels of abstraction (design, requirements and conceptual).\n• Task 1. Gather documentation. The goal of this task is to search and compile all the available\ndocumentation about the non-ontological resource including purpose, components; data model\nand implementation details.\n• Task 2. Extract the conceptual schema of the non-ontological resource. The goal of this\ntask is to identify the schema of the non-ontological resource including the conceptual compo-\nnents and their relationships. If the conceptual schema is not available in the documentation, the\nschema should be reconstructed manually or by using a data modeling tool.\n",
  "speaker": "SYSTEM",
  "uuid": "edddda0f-067e-418e-b7ee-8d11e22a1ed6"
}
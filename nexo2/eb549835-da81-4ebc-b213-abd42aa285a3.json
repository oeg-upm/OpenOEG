{
  "message": "SYSTEM: D5.3.2.pdf: PÃ¡gina 8\nPage 8 of 48 \nNeOn Integrated Project EU-IST-027595 \n \n2. Life cycle models defined in Software Engineering have not been seriously analyzed and no \nnew life cycle models have been proposed to date to cope with the special features of networks \nof ontologies. METHONTOLOGY proposes a unique type of life cycle model based on evolving \nprototypes for building single ontologies. On-To-Knowledge proposes an incremental and cyclic \nontology life cycle model based on evolving prototypes, and DILIGENT proposes an ontology \nlife cycle model based on evolving prototypes. The ontology engineering field lacked a set of \nontology life cycle models, in contrast with the software life cycle models.  \nFor this reason, in deliverable D5.3.1 [ 10] the first collection of theoretical ontology network life \ncycle models was included. Such models are based on those models defined in the Software \nEngineering field and take into account the specific features of the ontology network \ndevelopment. \n3. There were no guidelines that help software developers and ontology practitioners to select a \nspecific life cycle model to create a particular ontology life cycle for their ontology projects. \nFor this reason, in deliverable D5.3.1 [ 10] guidelines for obtaining the concrete life cycle for an \nontology network were included. Such guidelines are mainly based on two decision trees: one \nfor selecting the ontology network life cycle model most appropriate for the concrete case and \nanother for selecting which activities, from the NeOn Glossary of Activities, should be carried \nout. \n4. Existing methodologies do not cover more complex scenarios in which reuse and \nreengineering of ontological and non-ontological resources are needed.  \nFor this reason, in deliverable D5.3.1 [ 10] the identification and description of complex \nscenarios for building network of ontologies collaboratively with special emphasis in reuse, \nreengineering and merging ontological and non-ontological resources were included.  \nTaking into account preliminary evaluation results of the notions presented in [ 10], we plan this \ndeliverable as a revision and an extension of the following issues:  \n\u0001 Improvement of the existing NeOn Glossary of Activities by obtaining the NeOn Glossary of \nProcesses and Activities, including new processes and activities and relationships between \nprocesses and activities; and creation of the NeOn Resource Glossary by including other \ndefinitions (ontological resource, non-ontological resource, etc.).  \n\u0001 Detailed description of the scenario that involves the reuse of ontology design patterns. \n\u0001 Update of the collection of ontology network life cycle models, based on preliminary \nevaluations, in which it was demonstrated that the distinction among the different iterative \nmodels (incremental, iterative, evolving prototyping and spiral) is not easy for software \ndevelopers and ontology practitioners; and taking into account the ideas presented by Larman \n[ 6], who basically  proposes the existence of two different models: waterfall and iterative-\nincremental. \n\u0001 Establishment of the relationships between scenarios for building ontology networks and \nontology network life cycle models. \n\u0001 Enhancement of the existing guidelines for scheduling ontology network projects. \n\u0001 Proposal of a NeOn plug-in, called gOntt, for supporting end-users in carrying out the \nscheduling activity for their ontology development. \n",
  "speaker": "SYSTEM",
  "uuid": "eb549835-da81-4ebc-b213-abd42aa285a3"
}
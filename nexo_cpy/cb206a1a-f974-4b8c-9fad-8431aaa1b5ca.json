{
  "message": "SYSTEM: RDF%28S%29-SPARQL-Pr%C3%A1ctica.pdf: Página 5\n•5\nTyped literals\n• So far, all values have been presented as strings\n• XML Schema datatypes can be used to specify \nvalues (objects in some RDF triple statements)\n• In RDF/XML, this is expressed as:\n•\n<rdf:Description rdf:about=”#Oscar”>\n<person:hasBirthDate \noeg:Oscar\n1976-02-02\nperson:hasBirthDate\nrdf:datatype=\"http://www.w3.org/2001/XMLSchema#date\">1976-02-02\n</person:hasBirthDate>\n</rdf:Description>\n• In N3, this is expressed as:\n•\noeg:Oscar person:hasBirthDate ”1976-02-02”^^xsd:date .\n9\nRDF Containers\n•\nThere is often the need to describe groups of things\n•\nA book was created by several authors\n•\nA lesson is taught by several persons\n•\netc.\n•\nRDF provides a container vocabulary\n•\nrdf:Bag Æ A group of resources or literals, possibly including \nduplicate members, where the order of members is not \nsignificant\n•\nrdf:Seq Æ A group of resources or literals, possibly including \nduplicate members, where the order of members is significant\n•\nrdf:Alt Æ A group of resources or literals that are alternatives \n(typically for a single value of a property)\noeg:Oscar\n“ocorcho@fi.upm.es”\n“oscar.corcho@upm.es”\nrdf:_1\nperson:hasEmailAddress\nrdf:_2\nrdf:Seq\nrdf:type\n10\n",
  "speaker": "SYSTEM",
  "uuid": "cb206a1a-f974-4b8c-9fad-8431aaa1b5ca"
}
{
  "message": "SYSTEM: The_Return_of_the_Entity-Relationship_Model_-_Ontological_Query_Answering.pdf: Página 21\n1 The Return of the Entity-Relationship Model: Ontological Query Answering\n21\n1\n2\nE1\n(0,1)\n1\n2\n[1,2]\n(1,N)\nE3\nE2\nE4\nR1\nR2\nFig. 1.4 ER+ schema for the proof of Theorem 1.5.\n1.5.1 Data Complexity\nAs we shall see, once we know that the chase does not fail, the problem under con-\nsideration is in the highly tractable class AC0 in data complexity. Before we proceed\nfurther, let us recall the semantic notion of ﬁrst-order rewritability introduced in the\ncontext of description logics [5].\nA class C of dependencies is ﬁrst-order rewritable, henceforth abbreviated as\nFO-rewritable, if for every CQ q/n, and for every set Σ of dependencies in C, it is\npossible to construct a (ﬁnite) ﬁrst-order query qΣ such that, for every database D\nand an n-tuple t ∈Γ n, t ∈ans(q,D,Σ) if and only if t ∈qΣ(D). It is well-known that\nevaluating ﬁrst-order queries is in the highly tractable class AC0 in data complex-\nity [33]. Recall that AC0 is the complexity class of recognizing words in languages\ndeﬁned by constant-depth Boolean circuits with an (unlimited fan-in) AND and OR\ngates (see, e.g., [34]).\nTheorem 1.4. Consider a CQ q/n over a schema R, a database D for R, a set Σ\nof non-conﬂicting CDs over R, and an n-tuple t ∈Γ n. If chase(D,Σ) does not fail,\nthen deciding whether t ∈ans(q,D,Σ) is in AC0 in data complexity.\nProof. Let Σ = ΣT ∪ΣK, where ΣT are TGDs and ΣK are KDs. Theorem 1.2\nimplies that ans(q,D,Σ) and ans(q,D,ΣT) coincide. Thus, the problem whether\nt ∈ans(q,D,Σ) is equivalent to the problem whether t ∈ans(q,D,ΣT). Recall that\nΣT is a set of inclusion dependencies. It is well-known that the class of inclusion\ndependencies is FO-rewritable [11], and the claim follows.\nSince IPCDs and BACDs are special cases of CDs, it is obvious that the above\nresult holds also for non-conﬂicting IPCDs and non-conﬂicting BACDs. Notice that\nTheorem 1.4 does not give the exact upper bound for the data complexity of the\nproblem under consideration. This is because we assume that the chase does not\nfail. The data complexity of the problem whether the chase fails will be studied in\nSubsection 1.5.3.\nInterestingly, general CDs are not FO-rewritable; the proof of this result is similar\nto a non-FO-rewritability proof given in [35].\nTheorem 1.5. The class of CDs is not FO-rewritable.\n",
  "speaker": "SYSTEM",
  "uuid": "8b656e2d-5de4-461b-983d-acae29d6ab97"
}
{
  "message": "SYSTEM: 01.02.L%C3%B3gicaDescriptiva.pdf: Página 14\n14 \nRepresentación de Conocimientos: Lógica Formal y Lógica Descriptiva \nInteresting results (V). Consistency checking \nCows are vegetarian. \nA vegetarian is an animal that does not eat animals nor parts of animals.  \nA mad cow is a cow that eats brains that can be part of a sheep \n⊆⊥\n∃\n∪\n∩\n∃\n∪\n∃\n∪\n∃\n∩\n≡\n∃\n¬\n∀\n∩\n¬\n∀\n∩\n≡\n⊆\n)\n.\n(\n)\n.\n(\n)\n.\n.(\n))\n.\n(\n.\n.\nplant\npartOf\nplant\nanimal\npartOf\nanimal\nsheep\npartOf\nbrain\neats\ncow\nmadCow\nanimal\npartOf\neats\nanimal\neats\nanimal\nvegetarian\nvegetarian\ncow\nWe obtain:  \nMad cow is unsatisfiable \nRepresentación de Conocimientos: Lógica Formal y Lógica Descriptiva \nTableaux Algorithms \n• \nTry to prove satisfiability of a knowledge base \n• \nHow do they work \n–  They try to build a model of input concept C \n•  Tree model property \n–  If there is a model, then there is a tree shaped model \n•  If no tree model can be found, then input concept unsatisfiable \n–  Decompose C syntactically  \n•  Work on concepts in negation normal form (De Morgan’s laws) \n•  Use of tableaux expansion rules \n•  If non-deterministic rules are applied, then there is search \n–  Stop (and backtrack) if clash \n•  E.g. A(x), ¬A(x) \n–  Blocking (cycle check) ensures termination for more expressive logics \n• \nThe algorithm finishes when no more rules can be applied or a conflict \nis detected \n",
  "speaker": "SYSTEM",
  "uuid": "515e36cd-4638-44b1-bb4d-43b1b47e430c"
}
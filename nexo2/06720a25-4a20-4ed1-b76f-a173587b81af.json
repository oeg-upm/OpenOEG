{
  "message": "SYSTEM: IntegratorDesignDocument.pdf: Página 4\n●\nIntegration of past streaming data (still not defined, perhaps flood prediction?)\n●\nHorizontal integration (CCO+WaveNet). Different complementary sources about wave \nheights\n●\nVertical integration: transportation information with the endangered area, storm threshold \ndetection.\nSPARQLStream Language\nDesign of SPARQLStream and relationship with C-SPARQL\nLanguage requirements\nFrom the above use case we see the necessity of defining a language capable of:\n●\nHandling RDF streams \n●\nSpecifying a clear type system \n●\nSpecifying time windows over RDF Streams\n●\nProviding a consistent mechanism and semantics to join streaming and stored data\n●\nProviding window-to-stream operators\nLanguage definitions\nTypes\n●\nbasic types:\n○\ntriples\n○\ntuples (output type only)\n●\ncomplex types\n○\nstream of triples\n○\nstream of tuples (output type only)\n○\nstream of triple windows\n○\nstream of tuple windows (output type only)\nDefinitions\nWe adopt the definitions for the SPARQL operators given in Perez et al (2009), and extend \nthese to support streams. \nFor queries involving aggregates, we support the definition given in the SPARQL1.1 \nrecommendation (Harris and Seaborne, 2010), which can be directly applied to operate over a \nwindow of triples as if they were a stored graph.\nDefinition of RDF Stream\nAn RDF stream is defined as\n \nwhere I is the set of all IRIs, B is the set of all blank nodes, L is the set of all RDF literals, and T \nthe set of non-decreasing timestamps.\n \nTriples are annotated with timestamp. Timestamps are relating to the sensing time of the triple.\n",
  "speaker": "SYSTEM",
  "uuid": "06720a25-4a20-4ed1-b76f-a173587b81af"
}
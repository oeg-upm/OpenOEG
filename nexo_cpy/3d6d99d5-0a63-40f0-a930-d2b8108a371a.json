{
  "message": "SYSTEM: The_Return_of_the_Entity-Relationship_Model_-_Ontological_Query_Answering.pdf: Página 25\n1 The Return of the Entity-Relationship Model: Ontological Query Answering\n25\nNC phd student(X),professor(X) →⊥(entity disjointness). Moreover, the fact that\na student cannot be enrolled in a pension scheme (i.e., it does not participate to\nEnrolled as the ﬁrst component) can be represented by the NC phd student(X),\nenrolled(X,Y) →⊥(non-participation of an entity to a relationship).\nA set of CDs and NCs is separable if the answers to queries can be computed by\nconsidering the TGDs only, and ignoring the KDs and the NCs, once it is known\nthat the chase does not fail, and also that the chase satisﬁes the set of NCs.\nDeﬁnition 1.5. Consider a set Σ = ΣT ∪ΣK of CDs over a schema R, where ΣT are\nTGDs and ΣK are KDs, and a set Σ⊥of NCs over R. Σ ∪Σ⊥is separable if for\nevery database D for R, we have that either chase(D,Σ) fails or chase(D,Σ) ̸|= Σ⊥\nor, for every CQ q over R, ans(q,D,Σ) = ans(q,D,ΣT).\nIt is straightforward to see that given a set Σ of CDs and a set Σ⊥of NCs, the\nfact that Σ is non-conﬂicting is sufﬁcient for separability of Σ ∪Σ⊥; this follows\nimmediately from Theorem 1.2. The question that comes up is whether the non-\nconﬂicting property is also necessary for separability. It is not difﬁcult to show that\nthere exists a set Σ of CDs and a set Σ⊥of NCs such that Σ is not non-conﬂicting,\nbut Σ ∪Σ⊥is separable.\nInterestingly, if we consider only strongly consistent schemata [19], then the non-\nconﬂicting property is also necessary for separability. An ER+\n⊥schema C , where Σ\nis the of CDs over R associated to C and Σ⊥is the of NCs over R associated to C ,\nis strongly consistent if there exists a (possibly inﬁnite) instance I for R such that\nI |= Σ ∪Σ⊥, and for each e ∈fe(R), e(I) ̸= ∅. It is possible to show that the problem\nwhether an ER+\n⊥schema C , where the set of CDs associated to C is non-conﬂicting,\nis strongly consistent is PSPACE-complete. The formal proofs are omitted and can\nbe found in [36].\nWe conclude this section by showing that the addition of NCs does not alter the\ncomplexity of CQ answering under non-conﬂicting CDs.\nTheorem 1.9. CQ-Ans under non-conﬂicting CDs and NCs is in AC0 in data com-\nplexity, and PSPACE-complete in combined complexity. Also, CQ-Ans under non-\nconﬂicting IPCDs and BACDs is NP-complete in combined complexity.\nProof. Consider a CQ q/n over a schema R, a database D for R, a set Σ = ΣT ∪\nΣK of non-conﬂicting CDs (resp., IPCDs, BACDs) over R, where ΣT are TGDs\nand ΣK are KDs, a set Σ⊥of NCs over R, and an n-tuple t ∈Γ n. It holds that\nt ∈ans(q,D,Σ ∪Σ⊥) if and only if chase(D,Σ) fails or chase(D,Σ) ̸|= Σ⊥or t ∈\nans(q,D,Σ). Therefore, we can decide whether t ∈ans(q,D,Σ ∪Σ⊥) by applying\nthe following simple algorithm; given a NC ν = ϕ(X) →⊥, we denote by qν the\nBoolean CQ p ←ϕ(X):\n1. Construct the database D′ from D and the union of Boolean CQs Q from ΣK, as\ndescribed in the proof of Lemma 1.2.\n2. If ⟨⟩∈Q(chase(D′,ΣT)), then accept.\n3. If there exists ν ∈Σ⊥such that ⟨⟩∈ans(qν,D,Σ), then accept.\n",
  "speaker": "SYSTEM",
  "uuid": "3d6d99d5-0a63-40f0-a930-d2b8108a371a"
}
{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 95\nBÚSQUEDA \n \n95 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \n5.2. Estrategias heurísticas: algoritmos \nA. \nConsideremos de nuevo el problema del tren. Supongamos que disponemos de las \n\"coordenadas\" de cada una de las ciudades y, para cada trayecto entre dos \nciudades adyacentes, del número de kilómetros que realiza el tren en ese trayecto. \nSituémonos en un momento intermedio del proceso de búsqueda. Para decidir cuál \nes el siguiente paso a dar, es decir cuál es la siguiente ciudad a la que viajar, \npodríamos utilizar varios criterios: \na) Elegir una cualquiera, sin tener en cuenta el conocimiento adicional del que \ndisponemos (coordenadas, costes). Es esencialmente lo que hacen las búsquedas \nno informadas en anchura o profundidad. No se garantiza que se vaya a obtener un \ncamino solución óptimo ni tampoco que la búsqueda esté dirigida por ninguna otra \nconsideración. \nb) Tener en cuenta la estimación (heurística) de la cercanía dada por la distancia \nen línea recta a la ciudad objetivo. Esto es lo que hacen las escaladas o \"primero el \nmejor\". En estas aproximaciones no se considera la distancia previamente recorrida \n(es decir, la información acerca del coste de las aristas). La búsqueda estará dirigida \npor cierto conocimiento específico, aunque no totalmente seguro, pero no se \ngarantiza el hallazgo de una solución óptima. \nc) Ir calculando el coste de los caminos que van siendo construidos, eligiendo en \ncada paso el menos costoso. Se trata de las estrategias explicadas en el apartado \nanterior. Aseguran el hallazgo de una solución óptima, pero, al no tener en cuenta el \nconocimiento heurístico, pueden resultar tan ineficaces como la búsqueda en \nanchura. \nEn este apartado, estudiamos la posibilidad de integrar las aproximaciones (b) y (c) \nanteriores, para obtener estrategias que encuentren soluciones óptimas, pero de un \nmodo más eficaz que \"primero el menos costoso\". Es lo que se conoce en la \nliteratura con el nombre de Algoritmos A, nominación ciertamente poco descriptiva. \nPara esta familia de algoritmos los nodos han de disponer (al menos) de cuatro \ninformaciones: estado, padre, g (con el mismo significado y modo de cálculo que \nen \"primero el menos costoso\") y h (valor heurístico, que sólo depende del estado y \nque puede ser calculado por una funcion-heuristica como en \"primero el \nmejor\"). \nMás concretamente, vamos a suponer que interactuaremos con los nodos por medio \nde las siguientes operaciones.  \n",
  "speaker": "SYSTEM",
  "uuid": "55ddb6f8-97b2-40f3-9caa-c0638ab8bdb2"
}
{
  "message": "SYSTEM: NeOn_2007_D5.3.1.pdf: Página 69\nD5.3.1 NeOn Development Process and Ontology Life Cycle \nPage 69 of 111 \ncase, Figure 23 shows the ontology reuse activity viewed as a process composed of the \nfollowing activities (according to the ‘process’ definition of Section 2.1): ontology reverse \nengineering, ontology restructuring, and ontology forward engineering. \n \nFigure 23. Ontology Reengineering Activity \nBased on [17], we here propose the levels of abstraction that underlie the ontology \nreengineering activity shown in Figure 24. \n \nFigure 24. Levels of Abstraction for the Ontology Reengineering Activity \n¾ The scope level is the highest level of abstraction, in which the general scope for an \nontology is described.  \n¾ In the specification or linguistic level, the requirement characteristics for an ontology are \ndescribed in detail.  \n¾ In the conceptualization or epistemological level, ontology characteristics such as the \nontology structure and the ontology components are described. The knowledge that the \nontology represents is organized following a set of knowledge representation primitives \n(concepts, relations, etc.).   \n¾ The implementation level is the lowest abstraction level. Here, an ontology description \nfocuses on implementation characteristics and is represented in an ontology language \nunderstandable by computers and usable by automatic reasoners. \nSoftware developers and ontology practitioners should decide at which level (at the \nimplementation level, at the conceptualization level, at the specification level, or at the scope \nlevel) they want to carry out the ontology reengineering activity. Once software developers and \nontology practitoners have decided the level, they should carry out the ontology reengineering \n2006–2007 © Copyright lies with the respective authors and their institutions. \n \n",
  "speaker": "SYSTEM",
  "uuid": "38f2d5ed-d58e-403b-a5e7-1c95bb59bd63"
}
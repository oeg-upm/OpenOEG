{
  "message": "SYSTEM: Wiki: Promoting Scientific Creativity by Utilising Web-based Research Objects\nScientific creativity and innovation represent the beating heart of European growth at a time of rapid technological change. Dr Inventor is built on the vision that technologies have great potential to supplement human ingenuity in science by overcoming the limitations that people suffer in pursuing scientific discovery. It presents an original system that will provide inspiration for scientific creativity by utilising the rich presence of web-based research resources. Dr Inventor will act as a personal research assistant, utilising machine-empowered search and computation to bring researchers extended perspectives for scientific innovation by informing them of a broad spectrum of relevant research concepts and approaches, by assessing the novelty of research ideas, and by offering suggestions of new concepts and workflows with unexpected features for new scientific discovery.\nDr Inventor is an attempt to understand the potential of technology in the scientific creative process within current technology limitations. It represents a sound balance between scientific insight into individual scientific creative processes and technical implementation using innovative technologies in information extraction, document summarization, semantics and visual analytics. The outcomes will be integrated into a web-based system that will allow evaluation in a selected research area under real-world settings with carefully designed metrics, benchmarks and baseline for creative performance, leading to tangible measurements on the performance of the technologies in enhancing human creativity and a blueprint for future technologies in computational creativity.\nDr Inventor has huge implications for scientific innovation in Europe, as it has the potential to change the way in which scientific research is undertaken. The acceptance of the system by general research communities will open opportunities for many industrial sectors, leading to reinforced leadership of European industry.\nMeetings\nContents\n[\nhide\n]\n1\nOntology\n2\nRecommendation\n2.1\nEvaluación\n3\nRepository\n3.1\nInstallation\n3.2\nFunctionalities\n3.2.1\nAPI REST\n3.3\nSystem architecture\n3.3.1\nPom.xml structure\nOntology\n\nRecommendation\n\nIdeas iniciales del recomendador para su discusión\nInformación disponible para hacer las recomendaciones:\nArtículos sobre computer graphics (CG) en txt\nTítulo de cada artículo\nKeywords establecidas por los autores\nLista de referncias de cada artículo\nPosible información semántica de cada artículo\nElementos retóricos (frase+clase)\nSignificado de la presencia de cada cita (\ntrabajo futuro\n)\nPrimer recomendador: Recomendador basado en contenido\nItems: artículos a recomendar representados por: a) vector de las 100 palabras más importantes (=frecuentes); b) keywords\nUsuario: perfil de usuario representado por las keywords más frecuentes encontradas en los artículos visitados\nRecomendación: items que encajan con el perfil de usuario\nMirar cómo hacían la representación de los documentos en (son de los primeros recomendadores pero efectivos):\nK. D. Bollacker, S. Lawrence, y C. L. Giles, «CiteSeer: an autonomous Web agent for automatic retrieval and identification of interesting publications», New York, NY, USA, 1998, pp. 116–123\n.\nJ. Ahn, P. Brusilovsky, J. Grady, D. He, y S. Y. Syn, «Open user profiles for adaptive news systems: help or harm?», New York, NY, USA, 2007, pp. 11–20\n.\nMirar cómo hacían el indexado y recomendación en:\nJ. Hannon, M. Bennett, y B. Smyth, «Recommending twitter users to follow using content and collaborative filtering approaches», New York, NY, USA, 2010, pp. 199–206\n.\nEsta primera aproximación nos dará un recomendador (básico) del que partir.\nSegundo recomendador: Recomendador basado en contenido utilizando información semántica\nItems: artículos a recomendar representados por: a) vectores de los elementos semánticos del discurso que contienen las 100 palabras más importante de cada elemento (i.e: [hypothesis, [words-related-to-hypothesis...]]): b) keywords\nEn este caso para la recomendación se utilizará la información semántica, haciendo comparaciones entre vectores del mismo elemento semántico, i.e. similitud entre vectores de hipótesis, entre vectores de objetivos, etc...\nA partir de los resultados obtenidos podremos observar cómo varían las recomendaciones con respecto al caso mejor, ¿mejoramos precisión? ¿mejoramos CTR? (\nsería ideal poder hacer experimentos con usuarios para medir CTR\n)\nVersiones mejores\nCuando esté disponible todo el proceso de ontology learning y ontology matching incorporar dicha información al recomendador y comparar las recomendaciones con el algoritmo de FolkRank al estilo de cómo hicieron\nS. Doerfel, R. Jäschke, A. Hotho, y G. Stumme, «Leveraging Publication Metadata and Social Data into FolkRank for Scientific Publication Recommendation», en Proceedings of the 4th ACM RecSys Workshop on Recommender Systems and the Social Web, New York, NY, USA, 2012, pp. 9–16\n.\nEvaluación\n\nDataset\nPosibles Dataset para la evaluación\nPapers de computer graphics, los ficheros que tenemos del proyecto. Es necesario dividir en dos el datasest para tener un conjunto de entrentamiento y uno de prueba. También sería necesario establecer relevancias o bien decidir cómo se considera que un paper recomendado es relevante.\nOAI-PMH, ¿de qué fuentes tenemos datos? (arxiv? citeseer? pubmed?) ¿qué datos estamos recopilando guardando?\narxiv, supongo que estaremos guardando todos los metadatos de su oai-pmh. Igualmente habría que formar el dataset y decidir cuándo un artículo es relevante y cuándo no.\nOpciones para construir el dataset de prueba\nUsuario/s que evalúen los papers\nRegla que indique cuándo un paper es relevante (i.e. for each topic all the relevant documents in the collection are selected and classified as relevant if it contains information that is associated with the topic)\nMétricas de evaluación\nPerformance / Relevance evaluation\nNDCG\nDCG measures the usefulness, or gain, of a document based on its position in the result list. The gain is accumulated from the top of the result list to the bottom with the gain of each result discounted at lower ranks.\nPrecision at the top N ranked results (P@N). Precision is defined as the number of retrieved relevant documents divided by the total number of retrieved documents\nMean Average Precision (MAP).  MAP is a precision metric that emphasises ranking relevant documents higher.\nUsage / Users evaluation\nClick-through rate (CTR) is a commonly used metric for assessing the impact of a recommendation system on final users.\nClick-through rate = Click-throughs (#) / Impressions (#)\nFramework\nhttp://rival.recommenders.net/\nRepository\n\nInstallation\n\nPrerequisites\nSome application server (Jetty\nhttp://www.eclipse.org/jetty/\nor Tomcat)\nVirtuoso open-source edition\nDownload virtuoso open-source edition (\nhttp://virtuoso.openlinksw.com/dataspace/doc/dav/wiki/Main/VOSDownload\n)\nWindows: Follow the instructions of prerequisites and installation from the virtuoso site,\nhttp://virtuoso.openlinksw.com/dataspace/doc/dav/wiki/Main/VOSUsageWindows\nLinux:\nhttp://virtuoso.openlinksw.com/dataspace/doc/dav/wiki/Main/VOSUbuntuNotes\nCreate a Virtuoso service\nCassandra. Copy the resources provided with the epnoi distribution. Add the folder to $PATH\nLinux: export PATH=$PATH:/new/path\nWindows: sistema -> configuración avanzada -> variables de entorno -> add\nSOLR. Copy the resources provided with the epnoi distribution. Add the folder to $PATH\nLinux: export PATH=$PATH:/new/path\nWindows: sistema -> configuración avanzada -> variables de entorno -> add\nDeploy in Tomcat\nCopy the .war file to the home user folder\nMove the .war file to\nmv epnoiUIA.war /var/lib/tomcat7/webapps/\nOpen in a browser:\nhttp://zavijava.dia.fi.upm.es:8080/epnoiUIA/\nDeploy in Jetty\nJetty is installed in /opt/jetty and the port has been configured to listen in 8081, in order to avoid conflicts with Tomcat.\nStart the jetty service:\nsudo service jetty start\nCopy the .war file to the home user folder\nMove the .war file to\nmv epnoiUIA.war /opt/jetty/webapps/\nOpen in a browser:\nhttp://zavijava.dia.fi.upm.es:8081/epnoiUIA/\nFunctionalities\n\nWORK IN PROGRESS\nAccording to the Presentation provided by Rafa (Dropbox\\DrInventor\\meetings\\03.CallJun2014, slide 22), the funcionalities of the repository are:\nHandling\nCRUD operations over ROs\nAnnotations: interface AnnotationHandler\nSearch\nKeyword-based faceted search\nSPARQL search\nRO Model: ??\nAnnotations\nIndexing\nScientific resources crawling\nOAI-PMH (arxiv, citeseer, pubmed)\nRSS syndicated content (feeds, blogs)\nLocal file system synchronizing capabilities (dropbox alike)\nAPI REST\n\nHandling services\n/user\nNot available\n: POST /user/create : creates a new user in the repository\nNot available\n: GET /user/{id} : retrieves the user information\nNot available\n: GET /user/{id}/allResources :  retrieves all the resources that belongs to the user {id}\nNot available\n: POST /user/delete : removes the user information from the repository\nNot available\n: POST /user/{id}/addResource :  add a new resource for the user {id}\n/resource\nNot available\n: GET /resource/all : get all the resources (\nI am not sure that this operation is useful\n)\nNot available\n: POST /resource/create : creates a new resource in the repository\nNot available\n: POST /resource/delete/{id} : removes the resources {id} from the repository\nNot available\n: POST /resource/edit/{id} : edit the information of the resource {id}\nNot available\n: GET /resource/{id} : get all the information of the resource {id}\nnext, this information can be presented to the user filtered\n/annotations\nNot available\n: GET /annotations/getAll/{topic} : get all the resources annotated as {topic}\nNot available\n: GET /annotations/getAll/ : get all the annotations\nNot available\n: POST /annotations/create : annotates a new resource\nNot available\n: POST /annotations/remove/{URI}/{topicURI} : removes the annotation {topicURI} from the resource {URI}\nin the source code there are others methods related with labels but I don't know what is the difference between annotations and labels\nSearch services\n/UIA/searchs\nGET \"\" : faceted search. retrieve a list of resources based on the query+facets+filters.\nwhat are each one? (query, facet, filter)\nNot available\n: GET \"/searchAll/{id_resource}\" gets all the resources from the information source with {id_resource}\nNot available\n: GET \"/search/\" retrieves the resources from sparql search\nIndexing services\n\"/rss\"\nNot available\n: POST \"rss/parse/\" : add a new RSS feed with {URI}\nNot available\n: GET \"rss/read/\" : reads the RSS feed with {URI}\nNot available\n: POST \"rss/edit/{ID_RSS}\" : edits the information of the RSS feed with {ID_RSS}\nNot available\n: POST \"rss/remove/{ID_RSS}\" : removes the RSS feed with {ID_RSS}\n\"/oaipmh\"\nNot available\n: POST \"oaimph/harvest/\" : harvests all the repository {name}\nNot available\n: POST \"oaimph/harvestFile\" : haverts the file {file}\nNot available\n: POST \"oaimph/add\" : add a new archive to the indexed archives\nLogin services\n/loginService\nGET /login/{ID} : no disponible\nPOST /login :  login with user and password\nNotifications services\n/users/{USER_ID}/notifications/informationSources\nGET \"\"  : gets the new subscritions from all the information sources\nGET \"/{INFORMATION_SOURCE_ID}\" : gets the new subscriptions from the information sources with ID {ID}\n/notificationsService\nGET \"/suscribe\" :\nno estoy segura de lo que hace\n/users/{USER_ID}/subscriptions/informationSources\nGET \"\" : gets all the subscritions for a user {USER_ID}\nGET \"/{INFORMATION_SOURCE_ID}\" : gets all the resources from a information source? (\nI'm not sure\n)\nUIA\n/UIA\nGET \"/status/\" : shows the information stores that are available.\nPOST \"/resources/{RESOURCE_TYPE}\" : add a new resource?\nI'm not sure but I think that the implemented method doesn't do what are suppose that it will do.\nGET \"/resources/{RESOURCE_TYPE}\" : retrieves the resource that matches the query and is a {RESOURCE_TYPE}\nGET \"/notifications/\" :\nSystem architecture\n\nProject build managed with\nMaven\n. It's used the Jetty Maven Plugin to run the web application in development mode.\nPom.xml structure\n\nPreguntar si el artifactory del grupo está accesible desde fuera\nSetting up a local repository in order to store propietary jars\nhttp://stackoverflow.com/questions/364114/can-i-add-jars-to-maven-2-build-classpath-without-installing-them\n<repository>\n <id>lib</id>\n  <releases>\n     <enabled>true</enabled>\n     <checksumPolicy>ignore</checksumPolicy>\n  </releases>\n  <snapshots>\n     <enabled>false</enabled>\n  </snapshots>\n  <url>file://${project.basedir}/lib</url>\n</repository>\nBuilding for different enviorments: profiles to build and package artifacts\nDefault profile\n: builds the web applications and its ready to be deployed in a server\n<profile>\n   <id>default-profile</id>\n   <activation>\n       <activeByDefault>true</activeByDefault>\n   </activation>\n   <build>\n       <finalName>epnoiUIA</finalName>\n       <plugins>\n           <plugin>\n               <groupId>org.mortbay.jetty</groupId>\n               <artifactId>jetty-maven-plugin</artifactId>\n               <version>${jettyVersion}</version>\n               <configuration>\n                <webApp>\n                   <contextPath>/epnoiUIA</contextPath>\n                </webApp>\n                <connectors>\n                   <connector implementation=\"org.eclipse.jetty.server.nio.SelectChannelConnector\">\n                   <port>8081</port>\n                   </connector>\n                 </connectors>\n                </configuration>\n           </plugin>\n       </plugins>\n    </build>\n</profile>\nJetty managged version\n: According to Jetty slogan, \"Don't deploy your application in Jetty, deploy Jetty in your application.\" this profile allows running Jetty in embedded mode. That means that we put an HTTP module into our application, rather than putting your application into an HTTP server.\nWORK IN PROGRESS\nIt's necessary to implement a Jetty server\nhttp://www.eclipse.org/jetty/documentation/current/embedding-jetty.html\nFuture work\nDevelop enviroment: add cassandra maven plugin for develop enviroment (\nhttp://mojo.codehaus.org/cassandra-maven-plugin/examples/developing-webapp.html\n). The aim is to combine the usage of the cassandra-maven-plugin with the jetty-maven-plugin to make development testing of the web application a lot easier.",
  "speaker": "SYSTEM",
  "uuid": "08598252-15b4-47a2-80d3-46a3f039d428"
}
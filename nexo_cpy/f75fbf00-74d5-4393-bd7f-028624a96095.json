{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 71\nBÚSQUEDA \n \n71 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \nI \nA \nO2\nD \nE \nF \nO2\nD \nE \n... \n1 \n2 \n3 \n4 \n5 \n6 \n \nFigura 9 \nEn cuanto a la versión en grafo (la que mantiene la lista CERRADOS), evitará la no \nterminación en el caso de grafos dirigidos (finitos) con ciclos dirigidos (compruébese \nde nuevo en el caso del problema de las garrafas), lo que permitirá encontrar \nsiempre un estado objetivo (si existe alguno) y hace que la dependencia del orden \nde las reglas sea mucho menor. Sin embargo, en un espacio de estados infinito, \npese a que haya caminos solución, esta versión tampoco asegura que la búsqueda \nen profundidad los encuentre ni que termine la ejecución (de nuevo el ejemplo del \nsistema de reescritura). Si queremos asegurar que la búsqueda en profundidad \ntermine siempre su ejecución en el caso en que haya caminos solución e \nindependientemente de cómo sea el espacio de estados (finito o infinito, grafo o \nárbol), propiedad que tiene la búsqueda en anchura, estamos obligados a perder el \ncarácter exhaustivo de la búsqueda. También veremos que esto implica \nnecesariamente que, en ocasiones, aunque existan caminos solución la búsqueda \nno encuentrará ninguno. \nUn modo de conseguir que la búsqueda en profundidad termine siempre es el \nsiguiente. Se fija un límite máximo de profundidad (por medio de un parámetro \nglobal, por ejemplo) y no se exploran aquellos nodos tales que su profundidad en el \n",
  "speaker": "SYSTEM",
  "uuid": "f75fbf00-74d5-4393-bd7f-028624a96095"
}
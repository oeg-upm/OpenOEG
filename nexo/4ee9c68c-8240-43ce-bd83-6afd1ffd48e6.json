{
  "message": "SYSTEM: Wiki: https://delicias.dia.fi.upm.es/wiki/index.php/Proyectos_Fin_de_Carrera \n\nTipo: TFG\nEstado:No empezado, propuesto\nResumen general del trabajo:  El software que se desarrolla en investigaciones científicas es cada vez más importante para reproducir y reutilizar los resultados descritos en artículos académicos. Sin embargo, los metadatos de los repositorios software (cruciales para su reutilización) se encuentran desperdigados en READMEs, wikis, notebooks e imágenes de contenedores. En este TFG se propone el diseño y la creación de un grafo de conocimiento de software asociado a repositorios de código científico. El TFG incluirá herramientas existentes para capturar metadatos, personas, licencias, notebooks, publicaciones y hasta imágenes de contenedores.\nLista de objetivos concretos:\nDiseño de representación del conocimiento en grafos de software científico\nDiseño de las preguntas a contestar por el grafo.\nImplementación de un paquete en Python para integrar todas las fuentes de conocimiento usando Morph-KGC.\nCreación de grafos de conocimiento de dos organizaciones.\nDesglose de la dedicación total del trabajo en horas (324 horas en los Grados):\nFamiliarización con inspect4py (10%)\nFamiliarización con SOMEF (\nhttps://github.com/KnowledgeCaptureAndDiscovery/somef/\n)  (10%)\nFamiliarización con c2t (10%)\nDiseño del grafo a integrar, incluyendo personas, licencias, publicaciones, etc. (20%)\nImplementación del framework de integración usando Morph-KGC (30%)\nMemoria y documentación (20%)\nConocimientos previos recomendados para hacer el trabajo:\nRDF\nPython\nTítulo del trabajo: Creación de un framework para el mantenimiento, curación e integración continua de catálogos de software\n\nTipo: TFG\nEstado: No empezado, propuesto\nResumen general del trabajo: Mantener catálogos de software de manera actualizada es un proceso costoso. En TFGs anteriores se ha desarrollado un método para crear portales y grafos de conocimiento personalizados a partir de una organización de GitHub. Sin embargo, el proceso se repite de principio a fin en cada ocasión, incluso en aquellos repositorios que no han cambiado. En este TFG se desarrollará un framework para monitorización de catálogos de software, optimizando el proceso existente y actualizando solo aquellos repositorios que hayan cambiado o tengan diferencias. Además, se tendrán en cuenta los requisitos del usuario en cuanto a los repositorios a incluir en el portal final.\nLista de objetivos concretos:\nCreación de una metodología para actualizar entradas sólo en caso de que haya diferencias.\nCreación de un método para detectar entradas que necesiten actualización.\nCuracion de datos basada en usuarios\nDesglose de la dedicación total del trabajo en horas (324 horas en los Grados)\nFamiliarización con SOCA (\nhttps://github.com/oeg-upm/soca\n) (20%)\nFamiliarización con SOMEF (\nhttps://github.com/KnowledgeCaptureAndDiscovery/somef/\n)  (10%)\nExtensión de SOCA basada en diferencias (50%)\nDocumentación y memoria (20%)\nConocimientos previos recomendados para hacer el trabajo\nPython\nJSON\n—-------------\nTítulo del trabajo: Detección de agradecimientos en proyectos software\n\nTipo: TFG\nEstado: No empezado, propuesto\nResumen general del trabajo (a mejorar): Multitud de repositorios de software científico se generan gracias a la financiación de proyectos de distintas organizaciones. En artículos científicos es común encontrar una lista de agradecimientos con los proyectos y organizaciones financiadoras, pero es difícil detectarlas automáticamente.  En este TFG se propone encontrar la lista de organizaciones y proyectos que financiaron un software científico, partiendo de su repositorio de código.\nLista de objetivos concretos:\nEncontrar las citas asociadas a un repositorio software, o los agradecimientos en caso de que existan.\nExplorar artículos asociados al software para extraer agradecimientos\nEncontrar los proyectos y entidades que han financiado el software mediante extracción de entidades nombradas.\nEvaluación de resultados.\nRepresentar los resultados en RDF\nDesglose de la dedicación total del trabajo en horas (324 horas en los Grados)\nFamiliarización con SOMEF (\nhttps://github.com/KnowledgeCaptureAndDiscovery/somef/\n) (10%)\nExtractor de PDF (10%)\nReconocimiento de entidades nombradas (40%)\nProgramación del framework y su evaluación (20%)\nMemoria y documentación (20%)\nConocimientos previos recomendados para hacer el trabajo\nPython\nRDF\nJSON\nCitizen Science\n\nLinguistic Linked Data\n\nOld projects",
  "speaker": "SYSTEM",
  "uuid": "4ee9c68c-8240-43ce-bd83-6afd1ffd48e6"
}
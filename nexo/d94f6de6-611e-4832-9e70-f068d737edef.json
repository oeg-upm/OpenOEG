{
  "message": "SYSTEM: Neon_2008_d2.2.2.pdf: Página 46\nPage 46 of 124\nNeOn Integrated Project EU-IST-027595\nSince folksonomies and free text are unstructured non-ontological resources, chapter 6 (folksonomies) and\n7 (named entities) do not follow the pattern-based approach, they follow their own approach which is speciﬁc\nfor their kind of non-ontological resource.\n3.1.1\nRe-engineering Patterns\nIn software engineering, re-engineering patterns [PS98] are patterns that describe how to change a legacy\nsystem into a new, refactored system that ﬁts current conditions and requirements. Their main goal is to\noffer a solution for re-engineering problems. They are also on a speciﬁc level of abstraction and describe a\nprocess of re-engineering without proposing a complete methodology; the patterns can sometimes suggest\na type of tool that one could use.\nRe-engineering patterns for ontology are deﬁned in [PGD+08] as transformation rules applied to create a new\nontology (target model) from elements of a source model that can be either an ontology or a non-ontological\nresource, e.g., a thesaurus concept, a data model pattern, a UML model, a linguistic structure, etc.\nIn the aforementioned work, re-engineering patterns are not integrated within a method to carry out the\nre-engineering process. Moreover, a template to describe re-engineering patterns in a uniﬁed way is not pro-\nposed. One of the goals of this deliverable is precisely to propose a method to carry out the re-engineering\nprocess of non-ontological resources into ontologies using re-engineering patterns. These patterns will gen-\nerate the ontologies at a conceptualization level, independent of the ontology implementation language.\nAccording to [PGD+08], the use of re-engineering patterns for transforming non-ontological resources into\nontologies has several advantages. The most representative are\n• To improve the efﬁciency of the re-engineering process.\n• To make the transformation process easier for both ontology engineers and domain experts.\n• To improve the reusability of non-ontological resources.\n3.1.2\nPatterns for Re-engineering Non-Ontological Resources\nPatterns for re-engineering non-ontological resources (PR-NOR) deﬁne a procedure that transforms the\nnon-ontological resource components into ontology representational primitives. To this end, patterns take\nadvantage of the non-ontological resource underlying data model. The data model deﬁnes how the different\ncomponents of the non-ontological resource are represented.\nAccording to the non-ontological resource categorization presented in section 2.1, the data model can be\ndifferent even for the same type of non-ontological resource. For every data model we can deﬁne a process\nwith a well-deﬁned sequence of activities to extract the non-ontological resources components and then to\nmap these components to a conceptual model of an ontology. Each of these processes can be expressed\nas a pattern for re-engineering non-ontological resources.\nThe resultant ontologies proposed by the patterns for re-engineering non-ontological resources are modeled\nfollowing the recommendations provided by some other ontological patterns such as logical and architectural\npatterns [SFBG+07]. The current inventory of NeOn Ontology Modelling Components consider as Architec-\ntural Patterns the following ones: taxonomy, lightweight ontology and modular architecture. The patterns for\nre-engineering non-ontological resources deal only with taxonomies and lightweight ontologies. We decided\nto model the resultant ontologies following these recommendations: taxonomy and lightweight ontology.\nMoreover, the patterns for re-engineering non-ontological resources deﬁne the transformation process but\nthey do not provide an algorithm neither an implementation of the process. We plan to include the algorithms\nand implementations later on in a framework which will implement the transformation process. Also we will\ninclude a section to generate ontologies following the Linking Open Data1 recommendations.\n1http://esw.w3.org/topic/SweoIG/TaskForces/CommunityProjects/LinkingOpenData\n",
  "speaker": "SYSTEM",
  "uuid": "d94f6de6-611e-4832-9e70-f068d737edef"
}
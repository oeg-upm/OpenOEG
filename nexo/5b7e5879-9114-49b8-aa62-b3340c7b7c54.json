{
  "message": "SYSTEM: Neon_2008_d2.2.2.pdf: Página 110\nPage 110 of 124\nNeOn Integrated Project EU-IST-027595\n}\ncatch (ClassCastException e) {\nSystem.err.println(\"Warning: ClassCastException in createOrLinkClass!\");\nsuperAnn.getFeatures().put(\"debugInfo\", \"CCE in cOLC\");\n}\n// add a new subclass of the class just added\ntry {\nneon.nebone.Nebone.createOrLinkClass(ontology, doc, subAnn, superAnn);\n}\ncatch (ClassCastException e) {\nSystem.err.println(\"Warning: ClassCastException in createOrLinkClass!\");\nsuperAnn.getFeatures().put(\"debugInfo\", \"CCE in cOLC\");\n}\n},\n// create the annotations on the documents\n:sub.Subclass = {rule=Subclass1},\n:super.Superclass = {rule=Subclass1}\nThe RHS of the rule ﬁrst gets the relevant information from the annotations (using the labels assigned on\nthe LHS of the rule), then adds a new class below the root class for the superconcept (labelled \"amphibian\"\nin our example), a new subclass of this (labelled \"frog\" in our example), and ﬁnally adds annotations to the\nentities in the document.\nFigure 7.1 shows a screenshot from GATE of annotations added, while Figure 7.2 shows a screenshot from\nGATE of an ontology created.\nFigure 7.1: Annotation in GATE\n7.3.2\nNEBOnE\nThe SPRAT application uses the specially developed NEBOnE plugin for GATE in order to generate the\nchanges to the ontology. NEBOnE (Named Entity Based ONtology Editing) is an implementation for pro-\ncessing natural language text and manipulating an ontology. It is derived from the CLOnE plugin [FTB+07]\nfor GATE.\nIn CLOnE, input sentences are analysed deterministically and compositionally with respect to a given ontol-\nogy, which the software consults in order to interpret the input semantics. CLOnE allows users to design,\n",
  "speaker": "SYSTEM",
  "uuid": "5b7e5879-9114-49b8-aa62-b3340c7b7c54"
}
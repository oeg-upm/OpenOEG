{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 123\nBÚSQUEDA \n \n123 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \n6.3. Poda Alfa/Beta. \nPara ilustrar el hecho de que el algoritmo MiniMax anterior realiza demasiados \nesfuerzos y que no es necesario evaluar exhaustivamente todos los sucesores para \nobtener el valor MiniMax, vamos a estudiar el problema en una situación más \nsencilla. Se trata de establecer un procedimiento de etiquetado sin límite de \nprofundidad, como en el apartado 6.1, pero en el que sólo son posibles dos \netiquetas: G (=Ganar) y P (=Perder).  En este caso, podemos establecer el siguiente \nesquema de etiquetado: \n1 Si N es una posición terminal, devolver directamente P o G; en otro caso: \n2 Si N es una posición MAX, devolver G en cuanto aparezca un sucesor con valor \nG (este valor habrá sido calculado por el mismo procedimiento que está siendo \ndescrito); si todos los sucesores tienen valor P, devolver P. \n3 Si N es una posición MIN, devolver P en cuanto aparezca un sucesor con valor \nP; si todos los sucesores tienen valor G, devolver G. \n En la figura 12 aparece un árbol de juego en el que se ha aplicado este método de \netiquetado (se ha explorado de izquierda a derecha). Las aristas punteadas señalan \nposiciones que no han tenido que ser evaluadas (con el mecanismo de etiquetado \ndel apartado 6.1, todas las posiciones deben ser evaluadas). \n \nP \nG \nP \nG \nG \nG \nP \nG \nP \nP \nP \nG \nP \nG \nP \nP \nG \nP \nG \nG \nG \nG \n \nFigura 12 \n",
  "speaker": "SYSTEM",
  "uuid": "26dd75b1-113d-4b5c-9c20-bd2baaf01fa1"
}
{
  "message": "SYSTEM: SEKE2010-MariCarmenSuarez-Figueroa.pdf: Página 1\ngOntt, a Tool for Scheduling and Executing Ontology Development Projects \n \n \nMari Carmen Suárez-Figueroa, Asunción Gómez-Pérez, Oscar Muñoz, Martín Vigo \nOntology Engineering Group. Departamento de Inteligencia Artificial. Facultad de \nInformática. Universidad Politécnica de Madrid \n{mcsuarez, asun, omunoz}@fi.upm.es, mvigo@delicias.dia.fi.upm.es \n \n \nAbstract \n \n Nowadays the ontology engineering field does not \nhave any method that guides ontology practitioners \nwhen \nplanning \nand \nscheduling \ntheir \nontology \ndevelopment projects. The field also lacks the tools \nthat help ontology practitioners to plan, schedule, and \nexecute such projects. This paper tries to contribute to \nthe solution of these problems by proposing the \nidentification of two ontology life cycle models, the \ndefinition of the methodological basis for scheduling \nontology projects, and a tool called gOntt that (1) \nsupports the scheduling of ontology developments and \n(2) helps to execute such development projects.  \n \n1. Introduction \n \nPlanning and scheduling are related activities that \nare applied in different contexts, such as civil \nengineering, \nsoftware \nengineering, \netc. \nWhile \nplanning1 is the act of drawing up plans, a series of \nsteps to be carried out to achieve an objective, \nscheduling1 is defined as the activity to set order and \ntime to planned events. Scheduling should be \nperformed after planning; and both are crucial in any \ndevelopment project. \nIn Software Engineering, every development \nproject has a life cycle [1], which is produced by \ninstantiating a particular life cycle model. Life cycle \nmodels can be seen as abstractions of the phases \nthrough which a product passes along its life. \nTo properly manage software development projects, \nit is crucial to have knowledge of the entire software \ndevelopment life cycle [2]. Software engineers always \nplan and schedule every development project before \nstarting it. The project plan devises the tasks to be \ndone and the actors to perform them. To estimate the \n                                                           \n1 wordnet.princeton.edu/perl/webwn \neffort required to perform each task, techniques such \nas [2] PROBE and COCOMO II can be used. \nThe project schedule links the tasks to be done with \nthe resources in order to support their performance. \nThe most common form of representing schedules is to \nuse a Gantt chart [2]; and the most popular tool for \ncreating a project schedule is Microsoft Project [2]. To \ncreate a schedule, Microsoft Project provides three \ndifferent ways: (a) from scratch; (b) from a project \ntemplate (commercial template, report template, etc.) \nselected by the user using a template library; and (c) \nfrom an existing project. However, according to our \nknowledge, any tool for managing project schedules \nprovides guidelines on how to execute the project.  \nOntologies are used for making knowledge explicit \nand allowing it to be shared. One of the keys when \nbuilding ontologies is to plan and schedule the \nontology \ndevelopment. \nHowever, \nin \nOntology \nEngineering, planning and scheduling are still in their \nearly stages. Only METHONTOLOGY [3] defines the \nscheduling activity, but it does not provide guidelines \nfor helping ontology developers to plan and schedule \ntheir projects. Other methodologies, such as On-To-\nKnowledge [4] and DILIGENT [5], do not include \nthese activities in their developments. Regarding the \ncalculation of cost estimation of projects, the only \ntechnique available is ONTOCOM [6], a model that \npredicts the costs of ontology development projects. \nThe ontology engineering field lacks methods for \nguiding ontology developers when planning and \nscheduling their ontology development projects. \nFurthermore, the template library of Microsoft Project \ndoes not have project templates oriented to ontology \ndevelopment projects; on the other hand, at present, \nno tool can provide ontology developers with ontology \nproject schedules in the form of Gantt charts, nor can \nrecommend \ndevelopers \nwhich \nmethodological \nguidelines and tools should be used for executing a \nprocess or an activity in the ontology development. \nThus, the innovation of this paper is that (1) it \nidentifies two ontology life cycle models, (2) defines \n",
  "speaker": "SYSTEM",
  "uuid": "28cc20fd-f01f-41c7-93c0-7c521ee580cb"
}
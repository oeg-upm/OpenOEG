{
  "message": "SYSTEM: D5.3.2.pdf: Página 16\nPage 16 of 48 \nNeOn Integrated Project EU-IST-027595 \n \n\u0001 Non-ontological resource is defined as a knowledge aware resource whose semantics has \nnot been formalized yet by means of an ontology. Elements in this set are glossaries, \ndictionaries, lexicons, classification schemes and taxonomies, and thesauri.  \n\u0001 Object is defined as a physical entity, something existing in the real world, within the grasp \nof senses.  \n\u0001 Ontological resource is defined as a set of elements extracted from a set of available \nontologies in order to solve a need. Elements from this set can be ontologies, ontology \nmodules, ontology statements or ontology design patterns.  \n\u0001 Ontology network (or network of ontologies) is defined as the set of ontologies participating \nin some of the allowed ''networking'' properties. \n\u0001 Property is defined as a specific entity that is usually associated with individuals; thus a \nproperty can be characterized in terms of individuals or types it applies to and in terms of \nallowed values. \n2.3. Relation between Processes and Activities and NeOn Plug-ins \nMethodologies can be seen as guidelines to establish and promote best practices. Using them \nleads to a more consistent output. Still, many developers have not adopted the use of \nmethodologies. We believe that this is mainly due to the overhead that the use of methodologies \ncauses. Especially at the beginning, users have to go back to the definition of the methodology \nfrequently to check whether they follow it correctly and see which the next steps are. When \nmethodologies are applied more frequently, they are internalized and the lookups are not needed \nanymore. But even then developers might forget certain steps and not follow the methodology as \nintended.  \nOne solution to the overhead may be to guide the user directly in the engineering tool (e.g. the \nNeOn Toolkit) using tool-support for the different activities involved in the methodology. In order to \ncater to different requirements, activity wizards adapted to the specific needs of each user can be \nused. Profiles can be used to distinguish between the most common user types. Each user should \nbe able to configure the tool-support as needed, since sometimes using a wizard/tool can cause \nunnecessary slowdown. Imagine, for example, a person doing label translation in the ontology and \nbeing fluent in both source and target languages. This person should not have to use the label \ntranslator plug-in and a wizard associated with this activity, since the correct translations are \nalready known. \nTo clearly define the “building blocks” of the NeOn Methodology that are mainly processes and \nactivities, a glossary of activities was created in deliverable D5.3.1 [ 10]. This glossary provides \ndefinitions of the terms used and thereby provides a common vocabulary. We will map existing \nNeOn plug-ins to activities defined in the NeOn Glossary.  \nTable 1 presents a mapping between processes and activities involved in the NeOn methodology \nand the tools that support them. It is important to note that due to the nature of the activity \ndefinition, there might never be a plug-in which covers all aspects of an activity completely. Certain \ntasks might only be performed by humans. Also, some plug-ins feature functionalities that can be \nused to assist users in multiple steps of the methodology, covering more than one activity. When \nreading the table, it is evident that there are some activities for which there is no plug-in, and other \nactivities for which there are multiple plug-ins. If this is the case, plug-ins mainly focus on different \naspects or techniques used to carry out the activity.  \nThe main focus of Table 1 is to give the reader a quick way to look up which NeOn plug-in could be \nused or could be a help to carry out a certain process or activity. \n",
  "speaker": "SYSTEM",
  "uuid": "fc3a74d6-23b1-4f84-837e-48ad32fa15df"
}
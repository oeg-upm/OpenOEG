{
  "message": "SYSTEM: Wiki: https://delicias.dia.fi.upm.es/wiki/index.php/SEALS-EvaluatingClassifiers \n\nTiempo total: 25 días.\nDetalle de actividades y problemas encontrados.\nPreparación del proyecto. 3 días\nLectura deliverables SEALS y presentaciones\nSeals community\nInfraestructura SEALS\nPlan de trabajo\nDefinir test data sets: 5 días.\nCrear repositorio local para datos de prueba\nDefinir estructura de los test data sets y de los metadatos asociados\nCrear test data sets siguiendo la estructura definida\nRegistrar los conjuntos de datos de prueba\nPrincipales problemas:\nConceptualmente, en la ontología, no esta clara la relación entre PersistentTestData y TestDataVersion. La relación se establece por medio del servicio web que sube los datos.\nAlgunas propiedades de la ontología se utilizan como identificadores que posteriormente se usan en urls (e.g. hasName). Si estas propiedades tienen caracteres no validos en urls entonces los servicios web fallan. Este comportamiento es recurrente en los diferentes componentes del test suite.\nLas propiedades de la ontología que se usan en los servicios web dependen de la versión del repositorio de resultados.\nCuando estaba definiendo el bpel me di cuenta que la propiedad hasComponentType se usa para distinguir entre los distintos data ítems de un suite ítem, así que esta propiedad debería tener valores distintos por cada data item.\nMantenimiento del repositorio nada intuitivo. Hay que borrar las tripletas directamente.\nDefinir resultados: 2 días\nCrear repositorio local de resultados\nDefinir estructura de los resultados así como de los metadatos asociados (Crear ontología)\nDefinir interpretación de los resultados\nEmpaquetar el clasificador: 4 días\nDefinir interfaz del clasificador\nImplementar\ntool wrapper\n(Andrés)\nCrear\ntool package\npara el wrapper (Simple Tool)\nImplementar cliente parar verificar la validez del\ntool package\nusando las utilidades del\nRuntime Evaluation Service\nPrincipales problemas:\nNo se puede probar el wrapper hasta que se haga el despliegue en el runtime evaluation service.\nVerificar funcionamiento del clasificador en\nRES Worker\nlocalmente: 5 días\nDesplegar localmente el\nRES Worker\ny la extensión para el uso del clasificador (de manera que se use la instancias locales de los repositorios de datos y resultados) (Andrés, Miguel)\nDesplegar\ntool package\nen el\nRES Worker\nlocal (Andrés, Miguel)\nImplementar pruebas de integración usando\nSoapUI\npara verificar la ejecución del clasificador vía\nRES Worker\n(Andrés, Miguel)\nPrincipales problemas:\nLa versión del repositorio de datos de prueba no era la esperada por el test de integración así que se tuvo que modificar este ultimo. El error se produjo por seguir las guías de una una presentación antigua.\nProceso de depuración sólo puede ser hecho por el experto de la plataforma\nUna vez descartados los problemas de configuración hay que depurar el wrapper usando una herramienta de depuración remota.\nVersión del runtime evaluation service desactualizada.\nCrear evaluación. 4 días\nDiseñar proceso de evaluación\nImplementar proceso como un workflow\nBPEL\nValidar el workflow\nBPEL\nusando\nApache ODE 1.3.5\nCrear\nevaluation description\nPrincipales problemas:\nCurva de aprendizaje BPEL\nInstalación de eclipse bpel designer para visualizar el workflow\nInstalación de eclipse java para poder compilar el proyecto maven que incluye el bpel\nDetalles de configuración conocidos sólo por el experto de la plataforma\n.\nVerificar funcionamiento de la evaluación en\nRES Core\nlocalmente y Ejecución local de la evaluación con el clasificador a través del\nRuntime Evaluation Service\n. 2 días\nDesplegar\nevaluation description\nen el\nRES Core\nlocal\nImplementar pruebas de integración usando\nSoapUI\npara verificar la ejecución de la clasificador vía\nRES Core\n, mockeando el RES Worker\nImplementar proyecto\nSoapUI\npara lanzar ejecuciones de la evaluación con el clasificador",
  "speaker": "SYSTEM",
  "uuid": "2bf3eaa7-2b3b-48c2-a0dd-5a761c85623e"
}
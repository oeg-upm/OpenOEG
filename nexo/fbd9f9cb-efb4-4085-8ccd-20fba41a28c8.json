{
  "message": "SYSTEM: StreamingDataAccess_ISWC2010.pdf: Página 3\n2\nBackground\nThe following sections describe the existing work upon which our approach for\nenabling ontology-based access to streaming data sources is based, viz. R2O\nwhich enables ontology-based access to stored relational data, and snee a query\nprocessing engine over relational data streams. A full discussion of related work\ncan be found in Section 7.\n2.1\nOntology-based Access to Stored Relational Data\nThe goal of ontology-based data access is to generate semantic web content\nfrom existing relational data sources available on the web [3]. The objective of\nthese systems is to allow users to construct queries over an ontology (e.g. in\nsparql), which are then rewritten into a set of queries expressed in the query\nlanguage of the data source (typically sql), according to the speciﬁed mappings.\nThe query results are then converted back from the relational format into rdf,\nwhich is returned to the user. ODEMapster is one such system which uses R2O\n(Relational-to-Ontology) to express the mappings between the relational data\nsource and the ontology [1].\nThe mapping deﬁnition language R2O deﬁnes relationships between a set\nof ontologies and relational schemas [1]. The mappings are expressed in terms\nof selections and transformations over database relations following a Global-as-\nView (GAV) approach [13], and can be created either manually or with the help\nof a mapping tool. The resulting mappings are saved as xml which enables them\nto be independent of any speciﬁc DBMS or ontology language.\nMapping relations to ontologies often requires performing operations on the\nrelational sources. Several cases are handled by R2O and detailed below.\nDirect Mapping. A single relation maps to an ontology class and the at-\ntributes of the relation are used to ﬁll the property values of the ontology\ninstances. Each row in the relation will generate a class instance in the on-\ntology.\nJoin/Union. A single relation does not correspond alone to a class, but it has\nto be combined with other relations. The result of the join or union of the\nrelations will generate the corresponding ontology instances.\nProjection. Sometimes not all the attributes of a relation are required for the\nmapping. The unnecessary attributes can simply be ignored. In order to do\nso, a projection on the needed attributes can be performed.\nSelection. Not all rows of a relation correspond to instances of the mapped\nontology class. A subset of the rows must be extracted. To do so, selection\nconditions can be applied to choose the desired subset for the mapping.\nIt is possible to combine joins, unions, projections and selections for more com-\nplex mapping deﬁnitions. R2O also enables the application of functions, e.g. con-\ncatenation, sub-string, or arithmetic functions, to transform the relational data\ninto the appropriate form for the ontology.\n3\n",
  "speaker": "SYSTEM",
  "uuid": "fbd9f9cb-efb4-4085-8ccd-20fba41a28c8"
}
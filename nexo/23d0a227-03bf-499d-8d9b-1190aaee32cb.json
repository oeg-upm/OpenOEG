{
  "message": "SYSTEM: OntologyDebugging_KCAP2009.pdf: Página 7\nAntiPattern SOSWPI \nR1⊆R2, C1⊆∃R1.C2, C1⊆∃R2.C3, disj(C2,C3) => \n     C1⊆∃R1.(C2∪C3) \nIf it makes sense, add the axiom C1⊆∃R2.C2 and follow \nthe SOS recommendations. \nAntiPattern SOSWIP \nC2⊆∃R-1 .C1, C1⊆∃R.C3, disj(C2,C3) => \n     C1⊆∃R.(C2∪C3) \nIf it makes sense, add the axiom C1⊆∃R.C2 and follow the \nSOS recommendations.  \nAntiPattern SMALO \nC1⊆∃R.C2, C1⊆(≥1 R.T) \nThe restriction (≥1 R.T) can be removed, since it does not \nprovide any additional knowledge.  \n3.2.3 \nRecommendations for Guidelines \nThe recommendations provided for these anti-patterns, \ngiven their characteristics, are mainly focusing on making \nthe ontology easier to understand by ontology developers, \nand do not make any change with respect to the semantics \nor intended meaning of the ontology. We have determined \nthat the proposed changes make the ontology easier to un-\nderstand by asking a good range of ontology developers \nabout their preferences when analysing ontologies that were \nnot developed by them. \nGuideline DOC \nC1 ≡ not C2 => disj(C1,C2) \nGuideline DCC \nC1⊆∃R.C2, C1⊆(=2R.T) => C1⊆∀R.C2 \nGuideline GA \nC1⊆∀R.C2, C1⊆(≥2R.T) => C1⊆∀R.C2∩C1⊆(≥2R.T) \nGuideline MIZ \nC1⊆(≥0R.T)  \nCONCLUSIONS AND FUTURE WORK \nIn this paper we have described a strategy for OWL ontol-\nogy debugging that can be used in combination with exist-\ning OWL ontology debugging services in order to improve \nthe efficiency of the debugging process by having a prede-\nfined set of suggested actions to be performed by ontology \ndevelopers. We have obtained this strategy taking into ac-\ncount our experience in the development of DL-based on-\ntologies and a careful analysis about how ontology devel-\nopers and ontology engineers debug their ontologies nowa-\ndays. \nAs part of the work that we had to do in order to come up \nwith this strategy, we have collected a list of common anti-\npatterns that can be found in ontologies and that cause a \nlarge percentage of the inconsistency problems. Besides, we \nhave listed some anti-patterns that do not have an impact on \nthe logical consequences of the ontology being developed, \nbut that are of importance in order to reduce the number of \nerrors in the intended meaning of ontologies or to improve \ntheir understandability. \nFor the time being, our strategy is mainly manual, where \ndebugging tools are used to detect some of the logical an-\ntipatterns, although it remains to the user to find exactly \nwhere the antipattern is and which antipattern is applied. \nHence as part of our future work we are aiming at imple-\nmenting appropriate tools that can be combined with these \ntools and integrated in ontology engineering suites, provid-\ning a better support for the whole task of OWL ontology \ndebugging.  \nWe have initially tested our strategy with a set of inconsis-\ntent ontologies in the geographical domain developed by \nontology developers. However, more systematic evaluations \nhave to be done in the future to test the adequacy of the \nproposed strategy, the clarity of the provided recommenda-\ntions, the time reduction in the debugging task and the ex-\nhaustiveness of the anti-patterns catalogue. We will perform \nthese evaluations once that we have the first implementation \nof the support system. Besides, the list of anti-patterns \ncould be used as an additional piece of information to be \nused to determine the overall quality of an ontology. \nAnother part of future work will be related to applying this \nstrategy for the debugging of well-known inconsistent on-\ntologies (e.g., TAMBIS, the testbed proposed by [14], etc.). \nIn this case we would be extending our work to that of ex-\nperts debugging ontologies that have not been written by \nthem. And we will also focus on how anti-patterns are usu-\nally combined together and how more complex ones can be \nfound that can speed up even more the debugging process. \nFinally, some of the explanations that we have provided for \nthe appearance of anti-patterns are related to the order in \nwhich some of the restrictions and axioms have been added \nto the ontology. Hence keeping a record of the changes that \nhave been made to the ontology following well-known on-\ntology change management systems could be useful in order \nto incorporate this into the anti-pattern detection phases and \nproviding possible ranked solutions to them. \nACKNOWLEDGMENTS \nThis work was partially funded by the COST Action C21 \nsponsored by the European Commission under the grant \nnumber STSM-C21-04241. \nREFERENCES \n[1] Clark P, Thompson J, Porter B. “Knowledge patterns”  \nIn Proceedings of 7th International Conference Princi-\nples of Knowledge Representation and Reasoning \n(KR), Breckenridge, Colorado, USA: 591-600. (2000) \n",
  "speaker": "SYSTEM",
  "uuid": "23d0a227-03bf-499d-8d9b-1190aaee32cb"
}
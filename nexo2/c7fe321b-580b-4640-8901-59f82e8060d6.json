{
  "message": "SYSTEM: 02_RDF%28S%29.pdf: Página 34\n34 \n© Raúl García Castro et al. \nJena example. Graph creation \nhttp://.../JohnSmith \nJohn Smith \nSmith \nJohn \nvcard:Given \nvcard:Family \nvcard:FN \nvcard:N \n// some definitions  \nString personURI = \"http://somewhere/JohnSmith\";  \nString givenName = \"John\";  \nString familyName = \"Smith\";  \nString fullName = givenName + \" \" + familyName;  \n// create an empty  \nModel Model model = ModelFactory.createDefaultModel();  \n// create the resource  \n// and add the properties cascading style  \nResource johnSmith = model.createResource(personURI)  \n    .addProperty(VCARD.FN, fullName)  \n    .addProperty(VCARD.N, model.createResource()    \n    .addProperty(VCARD.Given, givenName) \n    .addProperty(VCARD.Family, familyName));  \n67 \nhttp://jena.sourceforge.net/tutorial/RDF_API/ \n© Raúl García Castro et al. \nJena example. Read and write \n// create an empty model \nModel model = ModelFactory.createDefaultModel(); \n \n// use the FileManager to find the input file \nInputStream in = FileManager.get().open( inputFileName ); \nif (in == null) { \n    throw new IllegalArgumentException(\"File not found\"); \n} \n \n// read the RDF/XML file \nmodel.read(in, \"\"); \n \n// write it to standard out \nmodel.write(System.out); \n<rdf:RDF \n  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' \n  xmlns:vcard='http://www.w3.org/2001/vcard-rdf/3.0#' \n > \n  <rdf:Description rdf:nodeID=\"A0\"> \n    <vcard:Family>Smith</vcard:Family> \n    <vcard:Given>John</vcard:Given> \n  </rdf:Description> \n  <rdf:Description rdf:about='http://somewhere/JohnSmith/'> \n    <vcard:FN>John Smith</vcard:FN> \n    <vcard:N rdf:nodeID=\"A0\"/> \n  </rdf:Description> \n... \n</rdf:RDF> \n68 \nhttp://jena.sourceforge.net/tutorial/RDF_API/ \n",
  "speaker": "SYSTEM",
  "uuid": "c7fe321b-580b-4640-8901-59f82e8060d6"
}
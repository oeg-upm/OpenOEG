{
  "message": "SYSTEM: Wiki: https://delicias.dia.fi.upm.es/wiki/index.php/Proyectos_Fin_de_Carrera \n\nContents\n[\nhide\n]\n1\nLugar para anunciar proyectos fin de carrera\n2\nPropuesta prácticum OREX (Oficina Relaciones Externas)\n3\nOntologies\n4\nSemantic Web\n5\nSemantics and Big Data\n6\nSemantic e-Science\n6.1\nTítulo del trabajo: Creación de un framework para la monitorización y adopción de buenas prácticas de Ciencia Abierta en repositorios software\n6.2\nTítulo del trabajo: Creación grafos de conocimiento a partir de código de software científico en distintos lenguajes\n6.3\nTítulo del trabajo: Evaluación de reconocimiento de entidades nombradas de Software a partir de archivos readme\n6.4\nTítulo del trabajo:  Creación de un framework para comparar proyectos de software científico similares\n6.5\nTítulo del trabajo: Creación de APIs para consultar datos de grafos de conocimientos de manera intuitiva\n6.6\nTítulo del trabajo: Creación de grafos de conocimiento a partir de contenedores para facilitar su monitorización\n6.7\nTítulo del trabajo: Creación de un servicio de enriquecimiento de metadatos de software a partir de repositorios de código científico\n6.8\nTítulo del trabajo: Creación de grafos de conocimiento de metadatos de software a partir de múltiples fuentes de datos\n6.9\nTítulo del trabajo: Creación de un framework para el mantenimiento, curación e integración continua de catálogos de software\n6.10\nTítulo del trabajo: Detección de agradecimientos en proyectos software\n7\nCitizen Science\n8\nLinguistic Linked Data\n9\nOld projects\n9.1\nOntologies\n9.2\nSemantic Web\n9.3\nSemantics and Big Data\n9.4\nSemantics and Big Data\n9.5\nSemantic e-Science\n9.6\nCitizen Science\n9.7\nLinguistic Linked Data\nLugar para anunciar proyectos fin de carrera\n\nhttp://www.fi.upm.es/intranet_p/?pagina=3\nUso de\nhttps://github.blog/2020-10-01-keeping-your-data-pipelines-healthy-with-the-great-expectations-github-action/\nen la asignatura de Web Semántica y Linked Data para la corrección de assignments basadso en datos.\nPropuesta prácticum OREX (Oficina Relaciones Externas)\n\nRediseño y mejora de la usabiliad del sistema online de evaluación de ontologías OOPS!\nOOPS! (OntOlogy Pitfall Scanner!\nhttp://oops.linkeddata.es\n) es un sistema online para la evaluación de ontologías. Este sistema es una herramienta independiente del editor de ontologías empleado y realiza un mayor número de comprobaciones automáticas que el resto de herramientas existentes (33 de las 41 pitfalls definidas en el catálogo). La independencia de editores específicos así como su sencilla interfaz hacen del sistema una herramienta accesible así como fácil de utilizar y comprender para usuarios no expertos en tecnologías semánticas. Además, las funcionalidades de OOPS! pueden ser integradas en sistemas externos a través del servicio web disponible. Este proyecto consiste en realizar un rediseño y mejora de la interfaz de usuario añadiendo nuevas funcionalidades como guías para resolver pitfalls o edición de informes de evaluación.\nLos objetivos concreto del trabajo son:\nMejora del diseño de la interfaz web actual\nIntegración de nueva información (resolver pitfalls)\nImplementación de nuevas funcionalidades (editar informes de evaluación)\nImplementación y despliegue del servicio web mejorado\nFunciones a desarrollar:\nAnálisis de la web actual de OOPS! y sus funcionalidades\nAnálisis de las nuevas funcionalidades\nDiseño de nueva interfaz e interacción con el usuario incluyendo nuevas funcionalidades\nImplementación de la interfaz de usuario\nPruebas\nDocumentación\nRequisitos:\nDiseño web\nHTML + CSS\nJAVA\nJ2SE/J2EE\nJSP\nOntologies\n\nSemantic Web\n\nSemantics and Big Data\n\nSemantic e-Science\n\nTítulo del trabajo: Creación de un framework para la monitorización y adopción de buenas prácticas de Ciencia Abierta en repositorios software\n\nFecha propuesta: Sept 2022.\nTipo: TFG\nResumen general del trabajo: Actualmente es práctica común para los científicos agruparse en organizaciones, que desarrollan herramientas en distintos proyectos de investigación. Sin embargo, estos proyectos no suelen seguir buenas prácticas de Ciencia Abierta (declarar licencia, cómo citar el software, documentación, etc.). Este TFG utilizará trabajo existente para crear catálogos software con el fin de crear analíticas de las prácticas actuales en una organización, y creará sugerencias para guiar a los autores hacia su adopción.\nLista de objetivos concretos:\nCreación de validadores que verifiquen cómo se cumplen las buenas prácticas de Ciencia Abierta en una organización.\nCreación de un portal para visualizar los resultados de manera resumida.\nCreación de sugerencias para aquellos repositorios que se han analizado de acuerdo a las guías propuestas por la UPM.\nCreación de portales de 2 organizaciones distintas.\nDesglose de la dedicación total del trabajo en horas (324 horas en los Grados)\nFamiliarización con SOCA (\nhttps://github.com/oeg-upm/soca\n) (20%)\nFamiliarización con SOMEF (\nhttps://github.com/KnowledgeCaptureAndDiscovery/somef/\n) (20%).\nDiseño de la visualización y relación con las guías UPM (20%)\nProgramación del framework y su validación (40%)\nDocumentación y memoria(20%)\nConocimientos previos recomendados para hacer el trabajo\nPython\nRDF\nJSON\nTítulo del trabajo: Creación grafos de conocimiento a partir de código de software científico en distintos lenguajes\n\nFecha propuesta: Sept 2022.\nTipo: TFG\nEstado:No empezado, propuesto\nResumen general del trabajo: El software que se desarrolla en investigaciones científicas es cada vez más importante para reproducir y reutilizar los resultados descritos en artículos académicos. Dicho software se desarrolla en distintos lenguajes de programación (C, Java, Python, etc.), que se describen con metadatos a la hora de crear paquetes para ser reutilizados. En este TFG se desarrollarán métodos para interpretar los metadatos de los lenguajes más utilizados, reutilizando herramientas existentes, y se integrarán en un grafo de conocimiento.\nLista de objetivos concretos:\nIdentificación de los lenguajes de programación a tratar, prácticas comunes de empaquetado y sus metadatos correspondientes\nIdentificación de herramientas que sirvan para leer cada uno de los metadatos de dichos lenguajes\nIntegración de las herramientas en el software metadata extraction framework (SOMEF)\nhttps://github.com/KnowledgeCaptureAndDiscovery/somef/\nCreación de trazas de provenance para indicar cómo se han extraído cada uno de los metadatos.\nIncorporación de los metadatos a los grafos de conocimientos generados por la herramienta SOMEF.\nDesglose de la dedicación total del trabajo en horas (324 horas en los Grados)\nIdentificación de prácticas comunes en distintos lenguajes de programación (incluyendo Python, Java, C, Javascript, C++, etc.)\nIntegración de las herramientas y parsers en SOMEF (40%)\nExportar resultados en un grafo de conocimiento (10%)\nDocumentación y memoria (20%)\nConocimientos previos recomendados para hacer el trabajo\nPython\nRDF\nTítulo del trabajo: Evaluación de reconocimiento de entidades nombradas de Software a partir de archivos readme",
  "speaker": "SYSTEM",
  "uuid": "c5030225-6201-4c16-b44f-12465971c79d"
}
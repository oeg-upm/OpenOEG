{
  "message": "SYSTEM: RQRQR.pdf: Página 8\ntool, but ELHIO DL has a much greater expressiveness as shown in [10]. That\nexpressiveness has no impact on the prune presented here, though.\nWhen considering that only some predicates are mapped by some RDB2RDF\nmappings and thus only some predicates can provide valid answers, the prune\ncan be more strict. This prune can be performed according to two diﬀerent meth-\nods, depending on whether the RDB2RDF system performs any inference and\nfor instance the answers of subconcepts are included in their respective concepts\nor not. These two methods replace the original pruning step performed in RE-\nQUIEM and generate a number of clauses that is smaller or equal, depending\non the mapped predicates and the method used. In the example the mapped\npredicates will be River, Enclosure and SalineGround.\nIf the inclusion relies on inference and retrieving the instances from one con-\ncept requires using the mappings for the subconcepts, then the prune cannot be\nstopped as soon as a retrievable concept is found and has to continue to the low-\nest retrievable concept in this search tree, possibly including not retrievable gaps\nthat will have to be pruned in the next pruning step. This is specially relevant\nin the cases where the ontology is used for querying but not for the mappings.\nSince the taxonomy is known at query time these relations are not reﬂected in\nthe mappings, it is also important in any case in which there are no underlying\nsystems that would take care of this inference. In this case, Enclosure would be\nrelevant and so would SalineGround, since the information of SalineGround\nbeing included in Enclosure is only known at query time, with the ontology, or\nfor any other reason the RDB2RDF system does not guarantee that the infor-\nmation about salines is included when retrieving the values for enclosures.\nOn the contrary, if querying a concept or property retrieves all the values from\nthe subconcepts or subproperties, then all the lower concepts or properties, the\ndatalog predicates that imply the current one, can be pruned, since they will\nnot provide additional values. In the previous example, once the mapping with\nEnclosure has been found, the predicates in its body would not be inspected,\nsince the RDB2RDF mappings return all the instances for Enclosure, including\nSalineGround, whose mapping is rendered superﬂuous in this case.\nThis deﬁnes respectively two pruning methods: “global” for all retrievable\nconcepts and properties and “ﬁrst” that prunes the clauses that imply a speciﬁc\nconcept or property if this concept or property is retrievable, since that predicate\ndoes provide all the information and no alternative rewritings are necessary. In\ntable 2 the results of applying the original prune method ‘N’, the global ‘G’ or\nthe ﬁrst ‘F’ on the example are presented.\n3.2\nPruning the datalog program\nThe generation of the datalog program in REQUIEM is performed through satu-\nration. In the saturation phase some clauses that will need to be pruned later are\nstill kept so that they can be used in the inferences. For instance, this happens\nto the clauses containing functions. Similarly, in our case, non retrievable pred-\nicates are still kept for the inference, and are removed after the useful clauses\ndepending on them have been generated. In order to get a datalog program that\n",
  "speaker": "SYSTEM",
  "uuid": "d8d8693c-0d38-4347-b14f-0b537b82eedf"
}
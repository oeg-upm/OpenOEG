{
  "message": "SYSTEM: RQRQR.pdf: Página 11\nThis datalog program generated with the ‘g’ variant of the algorithm con-\ntains all the mapped predicates that can provide useful answers, with a reduced\nnumber of clauses. In the next section the evaluation and quantiﬁcation of this\nreduction is performed.\n4\nEvaluation\nFor the evaluation of the system two ontologies have been used, both developed\nand used in the context of independent projects. The ﬁrst ontology is hydrOn-\ntology [12], with 155 concepts and expressiveness SHIN(D). HydrOntology has\nbeen used in several projects and mapped with several gepgraphical databases\nof the Instituto Geogrﬁco Nacional (IGN)1, generating several RDB2RDF map-\nping ﬁles, which, being available, have been used for the tests. More precisely,\nthe databases mapped here are three:\n– Atlas which counts with X mappings.\n– BCN200 providing X mappings.\n– EGM that has X mappings.\nThe second ontology is PhenomenOntology [13], also developed in the context\nof cartography. In this case among the phenomena that could be covered only\nthe module regarding transportation networks has been used, which provides 66\nconcepts, having a common ancestor in “Red” (“Network”) which is the concept\nused for the test queries whose results are shown in table 3. In the case of\nPhenomenOntology, only one ﬁle with X mappings is used.\nBoth of these two ontologies are expressed in OWL, without imposing any\nkind of restriction, thus some of the axioms have to be discarded in the be-\nginning of the process, as described in section 3.1 as they do not fall into the\nexpressiveness of ELHIO¬ DL. The mapping ﬁles are R2O mappings [8].\n8 1 6\n3 5 7\n4 9 2\nTable 3. Number of clauses in each stage and time in the process\nThe results, presented in table 3 vary depending on the method used. The ﬁrst\nletter is for the methods in the original REQUIEM, ‘N’ for “naive”, ‘F’ for “full\nforwarding” and ‘G’ for “greedy”, the second letter stands for the modiﬁcation\napplied as described in this paper, in this case ‘N’ stands for “none”. ‘F’ will stop\nthe prune on the ﬁrst predicate that is mapped, as all the values that are correct\nfor that predicate are assumed to be retrievable from the RDB2RDF mappings,\n1 http://www.ign.es\n",
  "speaker": "SYSTEM",
  "uuid": "39daa8de-af4a-4826-8f53-680a655153e9"
}
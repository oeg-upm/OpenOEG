{
  "message": "SYSTEM: Neon_2008_d2.2.2.pdf: Página 60\nPage 60 of 124\nNeOn Integrated Project EU-IST-027595\nTable 4.2: Pattern for Re-engineering a Classiﬁcation Scheme which follows the\nadjacency list data model(continued)\nSlot\nValue\nGeneral\nThe generated ontology will be based on the taxonomy architectural pattern (AP-TX-01)\n[SFBG+07]. Each category in the classiﬁcation scheme is mapped to a class, and the\nsemantics of the relationship between children and parent categories are mapped to\nsubClassOf relations.\nGraphical Representation\n(UML) General Solution\nOntology\n(UML) Example Solution\nOntology\nPROCESS: How to Re-engineer\nGeneral\n1. Identify the classiﬁcation scheme items which do not have a parent key value, i.e.\nclassiﬁcation scheme items without parents.\nFormally, every cei ∈CE, which\ncaparentID = NULL.\n2. For each one of the above identiﬁed classiﬁcation scheme items cei:\n2.1. Create the corresponding ontology class, Ci class.\n2.2. Identify the classiﬁcation scheme items, cej, which are children of cei, by using\nthe parent key values.\n2.3. For each one of the above identiﬁed classiﬁcation scheme items cej:\n2.3.1. Create the corresponding ontology class, Cj class.\n2.3.2. Set up the subClassOf relation between Cj and Ci.\n2.3.3. Repeat from step 2.2 for cej as a new cei.\n3. If there are more than one classiﬁcation scheme items without parent cei\n3.1. Create an ad-hoc class as the root class of the ontology.\n3.2. Set up the subClassOf relation between Ci class and the root class.\n",
  "speaker": "SYSTEM",
  "uuid": "a251ff1c-844b-4fcd-9fef-a8a15ce40f70"
}
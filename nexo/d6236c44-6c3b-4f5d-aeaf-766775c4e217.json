{
  "message": "SYSTEM: RQRQR.pdf: Página 5\neﬃciency in management of large quantities of data of databases and the ex-\npressive power of the explicit schema in description logics. These capabilities\nand possibilities have led to the creation of the QL proﬁle in OWL 2 [9], tailored\nfor the query rewriting to SQL storages for ABoxes. In order to ensure that a\nquery can be rewritten into a union of conjunctive queries, OWL 2 QL forbids\nthe use of disjunction and AllValuesFrom restrictions, as well as certain other\nfeatures that require recursive query evaluation. The proﬁle EL in OWL 2 has\nalso a special relevance, since it is based on the EL + + family of description log-\nics and it is designed to reason with large terminologies. The central modeling\nfeatures of this proﬁle are class conjunction and SomeValuesFrom restrictions.\nIn order to achieve tractability, the use of negation, disjunction, AllValuesFrom\nrestrictions, and cardinality restrictions is disallowed.\nAs previously stated, there are diﬀerent families of logics with diﬀerent ex-\npressivenesses that allow the rewriting of the query to SQL, and provide similar\nexpressivenesses since even slight increases in expressiveness would prevent the\nqueries from being evaluable by a SQL engine over the ABox [7]. In this paper\nthe focus will be set on ELHIO¬ DL, which is one of the most expressive Horn\nlogics for which query answering is polynomial with respect to data complexity\n[10]. Beside of EL, as in the previously described EL proﬁle of OWL 2, it provides\nbasic concepts of the form {a}, inverse roles and role inclusions. The reasoning\nin this logic can be carried out by the REQUIEM algorithm, presented in [11],\nwhich performs saturation on the query and the relevant part of the DL-Lite\nontology to produce all the rewritings. The whole process can be divided in four\nmain phases performed over the ontology and query:\n– In the ﬁrst phase, the ontology and the query are parsed and clausiﬁed. (The\nclausiﬁcation process for ELHIO¬ KBs is explained in [10]). The statements\nthat fall out of the expressiveness of ELHIO¬ are discarded.\n– In the second phase, the ontology is pruned and the part of it that is useful for\nthe generation of rewritings is taken for the following phases, since saturation\nperforms all the possible inferences. This is how the inferences are limited\nto those useful for the current query.\n– In the third phase, saturation is performed over the ontology and query,\ngenerating a datalog program as query rewriting. The datalog program is\npruned, removing clauses that contain equality, functional terms or nominal\nterms.\n– In the fourth phase, the datalog program is resolved, generating the set of\nconjunctive queries that is the rewriting of the original query and that can\nbe posed to the database or set of databases that are abstracted with the\nschema used by the algorithm.\nAfter that process the queries that should be posed to the DB according to\nthe ontology and the original query are generated, without considering the pos-\nsible query containment (and therefore redundancy) or the availability or the\ninformation in the DB that is to be queried.\n",
  "speaker": "SYSTEM",
  "uuid": "d6236c44-6c3b-4f5d-aeaf-766775c4e217"
}
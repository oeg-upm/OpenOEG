{
  "message": "SYSTEM: 4._methodologies-Concpt-REEng.pdf: Página 23\nOntological Engineering \n©Asunción Gómez-Pérez,\nExample of a Logical Pattern: \nN-Ary Relations\nUse Case \nGeneral \nExpress that: \n A binary relationship really needs a further argument.\n Two binary relationships always go together and \nshould be represented as one n-ary relation. \n A relationship is really amongst several things. \nExamples \nSuppose that someone wants to express that ‘business \nplans’ have ‘business tasks’ with a concrete ‘duration’. \nOntology Design Pattern \nInformal \nGeneral \nCreate a new class and n new object properties. \nTherefore, instantiate the classes Class and ObjectProperty.   \nExamples \nCreate the classes ‘BusinessPlan’, ‘BusinessTask’, ‘hasBT_Relation’, \nand ‘Duration’. \nIn the definition of the class ‘BusinessPlan’, specify an object \nproperty ‘hasBusinessTask’ with the range restriction going to \n‘hasBT_Relation’ class.  \nDefine ‘task_Value’ and ‘hasDuration’ as functional object properties.\nIn the definition of the class ‘hasBT_Relation’, specify two object \nproperties ‘task_Value’ and ‘hasDuration’ with the range restriction \ngoing to the classes ‘BusinessTask’ and ‘Duration’, respectively. \n \n \n",
  "speaker": "SYSTEM",
  "uuid": "5aa70e27-41ed-47f6-adee-05f636f37836"
}
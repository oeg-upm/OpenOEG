{
  "message": "SYSTEM: IntegratorDesignDocument.pdf: Página 5\nDefinition of Time-based Windows\nA window over an RDF stream is defined as\n \nwhere τ is the evaluation time of the window, ts and te define the time boundaries of the window, \nand δ is the window slide. \n \nNote that we do not support the notion of a triple-based window since, in general, the answer to \na query requires more information than can be carried by a single triple.\nWindow-to-Stream Operators \nWe adopt the SNEEql/CQL operators for converting a window into a stream of triples. \nRStream adds a triple to the resulting stream for every triple in the window\nIStream adds a triple to the resulting stream only if it was not in the previous window\nDStream adds a triple to the resulting stream only if it was on the previous window but \nnot in the current one.\nThese are defined as:\n \n \n \nwhere τ is the evaluation time of the window-to-stream operator, and δ is the window slide\nNote about Time\nIt is feasible that RDF graphs capture information about when measures are made. For \nexample, consider the following RDF statements\n:uri1 a wave:WaveHeightMeasurement ;\nwave:hasValue 0.25 ;\nwave:hasLocation loc:BrackleshamBay ;\nwave:measuredAt “27-07-2010 09:00” .\nInitially, the τ annotation on these 5 RDF triples will be set to “27-07-2010 09:00”. However, \nif the triples are processed into windows and back into triples, the τ annotation of the resulting \nRDF stream triples would be the time of evaluation of the RStream operation.\n \nCurrently we do not support returning the details of the annotation time associated with a stream \nor a window. \nSyntax\nIn SPARQL named graphs can be referenced using the FROM NAMED keywords. In this way \ntriples from the specific referenced graph (collection of data) can be used in the query.\nStreams\nAn RDF stream of timestamped triples can be specified using the syntax: \nFROM NAMED STREAM <IRI>\n",
  "speaker": "SYSTEM",
  "uuid": "3338039f-dc69-40ac-9ba4-25dcf8151161"
}
{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 58\nBÚSQUEDA \n \n58 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \n;; El objetivo o1 es encontrado. \n \n;; Si alteramos el orden de \"disparo de las reglas\" puede encontrar o2: \n \n(defun expandir-estado (estado) \n  (case estado \n    (i '(b a)) \n    (a '(d c)) \n    (b '(f e)) \n    (e '(o1)) \n    (c '(o2)) \n    (otherwise (list )))) \n \n;; En cambio si los objetivos estan en niveles diferentes, siempre se \n;; encontrara el menos profundo, independientemente del orden de las \n;; reglas. \n \n(defun expandir-estado (estado) \n  (case estado \n    (i '(a b)) \n    (a '(c d)) \n    (b '(e f)) \n    (e '(g)) \n    (c '(o2)) \n    (g '(o1)) \n    (otherwise (list )))) \n \n;; Asi tambien encuentra o2: \n \n(defun expandir-estado (estado) \n  (case estado \n    (i '(b a)) \n    (a '(d c)) \n    (b '(f e)) \n    (e '(g)) \n    (c '(o2)) \n    (g '(o1)) \n    (otherwise (list )))) \n \n;; Un ejemplo en el que el espacio de estados es un grafo dirigido aciclico, \n;; pero no un arbol. Los estados son explorados varias veces. \n \n(defun expandir-estado (estado) \n  (case estado \n    (i '(b a)) \n    (a '(d c)) \n    (b '(e d)) \n    (d '(e g)) \n    (g '(o1)) \n    (otherwise (list )))) \n \n;; Un ejemplo en el que el espacio de estados es un grafo dirigido, pero \n;; con ciclos dirigidos, y en el que existe una solucion. Observaremos \n;; un efecto de redundancia muy similar al anterior, pero la solucion sera \n;; encontrada sin problemas. \n \n(defun expandir-estado (estado) \n  (case estado \n    (i '(b a)) \n    (a '(d c)) \n    (b '(f e)) \n    (e '(g)) \n    (c '(i)) \n    (g '(o1)) \n    (otherwise (list )))) \n \n \n \n \n \n \n \n \n",
  "speaker": "SYSTEM",
  "uuid": "577b7aae-e80a-4597-a6f3-5f9dc7587f80"
}
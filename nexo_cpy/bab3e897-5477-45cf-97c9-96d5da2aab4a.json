{
  "message": "SYSTEM: Wiki: https://delicias.dia.fi.upm.es/wiki/index.php/SEALS-EvaluatingClassifiers \n\nClasificador desde la linea de comando\n\nIncluir en el classpath el jar de weka\nset CLASSPATH=%CLASSPATH%;D:\\Program Files\\Weka-3-6\\weka.jar\nPara transformar un csv en un arff (ficheros que entiende weka) se debe ejecutar lo siguiente en la linea de comando.\njava weka.core.converters.CSVLoader cirque_topics.csv >> > cirque_topics.arff\nSe deben ignorar los mensajes que dicen que no se han podido cargar los controladores JDBC ya que no se usan en el proceso.\nEl ultimo atributo del fichero arff se asume que es la clase que se quiere predecir con los clasificadores.\nPara validar que el fichero arff esta bien y obtener estadisticas de uso usar:\njava weka.core.Instances cirque_topics.arff\nEjecución clasificador basico (ZeroR escoge la clase mas frecuente y se puede usar como baseline )con crossvalidation:\njava weka.classifiers.rules.ZeroR -t cirque_topics.arff\nPara ejecutar el clasificador usado en las pruebas:\njava -Xmx512m weka.classifiers.meta.ClassificationViaRegression -t cirque_topics.arff -i -o -x 10 -W weka.classifiers.trees.M5P -- -M 4.0 > classificationViaRegression.out &\n-t speciﬁes the training ﬁle (ARFF format)\n -T speciﬁes the test ﬁle in (ARFF format). If this parameter is missing, a crossvalidation will be performed (default: ten-fold cv)\n -x This parameter determines the number of folds for the crossvalidation. A cv will only be performed if -T is missing.\n -i A more detailed performance description via precision, recall, true- and false positive rate is additionally output with this parameter. \n -o This parameter switches the human-readable output of the model description oﬀ. In case of support vector machines or NaiveBayes, this makes some sense unless you want to parse and visualize a lot of information.        \n -M <minimum number of instances> Build regression tree/rule rather than a model tree/rule Set minimum number of instances per leaf (default 4)\n -p # outputs just the predictions for each test instance, along with a range of onebased attribute ids (0 for none)\n & starts the process in background\nUna vez ejecutado el clasificador se pueden extraer los valores de las metricas de evaluación:\ncygwin /cygdrive/c/Documents and Settings/hagarcia/Documents/NetBeansProjects/TimeOut/weka/classifierInputOutput/in-out\nPor ejemplo para obtener precision, recall y f-measure se deben ejecutar:\ngrep -A 19 \"Stratified\"  classificationViaRegression.out | grep \"^Weighted Avg\" | cut -c39-44\ngrep -A 19 \"Stratified\"  classificationViaRegression.out | grep \"^Weighted Avg\" | cut -c49-54\ngrep -A 19 \"Stratified\"  classificationViaRegression.out | grep \"^Weighted Avg\" | cut -c59-64\nClasificador desde Java\n\nIncluir en el pom.xml weka y jena:\n<dependency>\n                   <groupId>org.apache.jena</groupId>\n                   <artifactId>jena-tdb</artifactId>\n                   <version>0.10.1</version>\n               </dependency>\n               <dependency>\n                   <groupId>nz.ac.waikato.cms.weka</groupId>\n                   <artifactId>weka-stable</artifactId>\n                   <version>3.6.6</version>\n               </dependency>\nEl código para ejecutar el clasificador en java:\n//This method trains and evaluates the classifier using the input file which is defined with the input argument (urlInputFile)\n  public String executeClassifier(String urlInputFile) throws Exception{       \n      try{\n          // get the input file from the URL\n          InputStream input=download(urlInputFile);\n          //load the input file (csv) into a set of weka instances\n          CSVLoader loader = new CSVLoader();\n          loader.setSource(input);\n          Instances data = loader.getDataSet();\n          // setting class attribute if the data format does not provide this information\n          if (data.classIndex() == -1)\n             data.setClassIndex(data.numAttributes() - 1);\n           // create a new meta classifier\n           weka.classifiers.meta.ClassificationViaRegression scheme = new weka.classifiers.meta.ClassificationViaRegression();            \n           // set model trees as the classifier used in the meta classifier\n           scheme.setOptions(weka.core.Utils.splitOptions(\"-W weka.classifiers.trees.M5P -- -M 4.0\"));            \n           scheme.buildClassifier(data);\n           // set the evaluation type\n           Evaluation eTest = new Evaluation(data);\n           eTest.crossValidateModel(scheme,data,10,new Random(1));\n           String strSummary = eTest.toSummaryString();\n           logger.info(strSummary);\n           logger.info(eTest.toClassDetailsString());\n           logger.info(\"weighted precision:\"+eTest.weightedPrecision());\n           logger.info(\"weighted recall:\"+eTest.weightedRecall());\n           logger.info(\"weighted f-measure:\"+eTest.weightedFMeasure());\n           //creates an rdf representation of the evaluation resutls\n           String resultOntologyText= getResultOntology(eTest.weightedPrecision(),eTest.weightedRecall(),eTest.weightedFMeasure());\n           logger.info(resultOntologyText);\n           return resultOntologyText;\n       }\n      catch(Exception ex){\n           StringWriter errors = new StringWriter();\n           ex.printStackTrace(new PrintWriter(errors));\n           throw new ToolException(errors.toString());\n      }\n   }\npublic InputStream download(String url) throws IOException {\n       InputStream input = new URL(url).openStream();\n       return input;\n   }\nWrapper para incluirlo en un SimpleTool de SEALS\n\nSe decidió usar el SimpleTool que provee seals para la ejecución del clasificador en la plataforma. El simpleTool recibe un string como argumento de entrada y devuelve un string como un argumento de salida. Esta interfaz encaja perfectamente con el clasificador, la entrada es la url del fichero de entrada, y la salida es un string que contiene el rdf que describe los resultados de la evaluación.\nMiguel Esteban me envió un proyecto maven donde viene una implementación del SimpleTool. En este proyecto maven está la clase SimpleToolBridgeImpl dentro del paquete eu.sealsproject.platform.res.domain.itest.simple. Esta clase tiene el metodo execute con la siguiente firma:\npublic String execute(String parameter) throws ToolBridgeException, ToolException\nEs en este método donde se debe ejecutar el clasificador usando el fichero de instancias que se encuentra en la URL definida en el argumento de entrada\nparameter\n. El rdf que describe los resultados de la evaluación se devuelve en el string que retorna el método.\nclassifierEvaluator=new Classifier();\n           String evaluationResultOnto;\n           logger.info(String.format(\"invoked %s-%s (%s) %s::execute(%s)... \",this.getId(),this.getVersion(),this.getType(),this.getClass().getCanonicalName(),parameter));\n           //testFilePublisher();\n           if (parameter != null){\n               try{\n                   evaluationResultOnto=classifierEvaluator.executeClassifier(parameter, filePublisher);\n                   logger.info(String.format(\"  returning: %s\", evaluationResultOnto.toString()));\n                   return evaluationResultOnto.toString();\n               }\n               catch (ToolException tex){\n                   throw tex;\n               }\n               catch (Exception ex){\n                   StringWriter errors = new StringWriter();\n                   ex.printStackTrace(new PrintWriter(errors));\n                   throw new ToolBridgeException(errors.toString());\n               }\n           }\n           else {                \n               logger.info(\"  throwing tool bridge exception.\");\n               throw new ToolBridgeException(\"null parameter\");\n           }\nInstalación del wrapper en la plataforma SEALS\n\nNota Importante:\nVerificar la versión del runtime evaluation service (tanto core y worker) que se va a instalar. En mi caso tuve que reinstalar el res debido a que había instalado la versión 1.1 y se requeria la versión 2.0 snapshot. Preguntar a Miguel Esteban.\nInstalación de la plataforma SEALS",
  "speaker": "SYSTEM",
  "uuid": "bab3e897-5477-45cf-97c9-96d5da2aab4a"
}
{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 87\nBÚSQUEDA \n \n87 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \nmodificar los subalgoritmos  reorganizar-nodos-a-expandir y expandir-\nnodo, pero nos veríamos obligados a variar el programa genérico busqueda. \nEjercicios. Implementar las tres ideas anteriores. Estúdiese qué sucede con las \nversiones en árbol y en grafo. \nPara terminar este tema comentamos una familia de variantes de los métodos de \nbúsqueda heurística vistos hasta ahora. Se trata de los métodos de búsqueda en \nhaz o en rayo (el símil proviene la búsqueda con una linterna, en la que el haz de luz \nsólo ilumina una parte del espacio de búsqueda). En esta colección de métodos, se \nfija un límite, sea n, que va a ser utilizado para podar de una manera rígida el \nespacio de estados. Según en qué momento se utilice el límite n tenemos variantes \ndiferentes de la búsqueda en haz. \nEn primer lugar, el límite n puede ser interpretado como un límite en anchura. Esto \nsignifica que al expandir un nodo, nos quedamos tan solo con los n nuevos nodos \nmás favorables (o con todos los que haya, si se generan menos de n). En este caso, \ntodavía podemos elegir entre situar esos elementos al comienzo de ABIERTOS (con \nlo que tenemos una variante de la búsqueda de escalada en profundidad) o \nreordenar toda la lista de ABIERTOS (variante de la búsqueda primero el mejor). En \nambos casos, si n = 1 reencontramos la búsqueda irrevocable de escalada por la \nmáxima pendiente.  \nOtra variante en la misma línea consiste en interpretar el límite n como la longitud \nmáxima en la lista ABIERTOS, descartando los nodos menos prometedores. En esta \nversión, se incluyen, en primer lugar, todos los nuevos nodos y, en segundo lugar, \ndejamos en ABIERTOS sólo n nodos. Es también una variante de la búsqueda \nprimero el mejor (pero distinta de la anterior). En este caso, sería apropiado utilizar \nun vector para almacenar ABIERTOS en lugar de una lista. Si la longitud máxima \npermitida es 1 no hay diferencia con las búsquedas anteriores y, por tanto, volvemos \na encontrar la búsqueda irrevocable de escalada por la máxima pendiente. \nLa ventaja de los métodos en haz es que reducen drásticamente el espacio de \nbúsqueda. Sin embargo, se pueden perder soluciones (se trata de métodos \nincompletos). \nEjercicios. Estúdiense los modos de implementación de las distintas búsquedas en \nhaz y compárese su comportamiento en ejemplos concretos (problema del tren, 8-\npuzzle) para diferentes valores del límite n. \n",
  "speaker": "SYSTEM",
  "uuid": "2396d242-4aa8-4a2d-b91c-5665dc8cfc1a"
}
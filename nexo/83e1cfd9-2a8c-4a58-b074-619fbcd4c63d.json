{
  "message": "SYSTEM: Neon_2008_d2.2.2.pdf: Página 95\nD2.2.2 Methods and Tools Supporting Re-engineering\nPage 95 of 124\nFigure 6.1: FLOR Phases\nFigure 6.2: FLOR Steps Example\nExpansion we attempt to assign a WordNet sense to each tag based on its context (i.e., the other tags in its\ncluster) and to extract all relevant synonyms and hypernyms so that we migrate to a richer representation of\nthe tag. Finally, during the Semantic Enrichment step each tag is associated to the appropriate SWE.\nThe ﬁrst step results in the Lexical Representations which is a list of lexical forms for the tag, such as plural\nand singular forms for nouns, or various delimited types of compound tags (sanFrancisco, san.Francisco,\netc). The second step identiﬁes Synonyms and Hypernyms for each tag. The last step generates the list of\nEntities containing the associated SWE’s. Note that a tag can be associated to several relevant SWE’s.\n6.1.1\nSTEP 1: Lexical Processing\nDue to the freedom of tagging as a basic rule of folksonomies, a wide variety of different tag types are in use.\nUnderstanding the types of tags used is the ﬁrst step in deciding which of them are meaningful and should be\ntaken into account as a basis of a semantic enrichment process. Previous work ([ASSM07, GH06, MDA07b])\nhas identiﬁed different conceptual categories of tags (event, location, person), as well as tag categories\nthat can be described by syntactic characteristics. For example, there are many tags containing special\ncharacters (e.g., :P), numbers (e.g., aug07), plurals as well as singular forms of the same word (e.g.,\nbuilding, buildings), concatenated tags (e.g., littlegirl) or tags with spaces (e.g., little\ngirl) and a big number of non-English tags (e.g., sillon). The role of the lexical processing step is to\nidentify these different categories of tags and exclude those that are meaningless and should not be further\n2006–2008 c⃝Copyright lies with the respective authors and their institutions.\n",
  "speaker": "SYSTEM",
  "uuid": "83e1cfd9-2a8c-4a58-b074-619fbcd4c63d"
}
{
  "message": "SYSTEM: Wiki: https://delicias.dia.fi.upm.es/wiki/index.php/Catalogue-of-Pitfalls \n\nP19. Swapping intersection and union:\nthe ranges and/or domains of the properties (relationships and attributes) are defined by intersecting several classes in cases in which the ranges and/or domains should be the union of such classes. An example of this type of pitfall is to create the relationship “takesPlaceIn” with domain “OlympicGames” and with range the intersection of the classes “City” and “Nation”. Another example can be to create the attribute “Name” for the classes “City” and “Drink” and to define its domain as the intersection of both classes. This pitfall is related to the common error that appears when defining ranges and domains described in [3] and also related to the guidelines for defining these elements provided in [2].\nP20. Swapping Label and Comment:\nthe contents of the Label and Comment annotation properties are swapped. An example of this type of pitfall is to include in the Label annotation of the class “Crossroads” the following sentence ’the place of intersection of two or more roads’; and to include in the Comment annotation the word ‘Crossroads’.\nP21. Using a miscellaneous class:\nto create in a hierarchy a class that contains the instances that do not belong to the sibling classes instead of classifying such instances as instances of the class in the upper level of the hierarchy. This class is normally named “Other” or “Miscellaneous”. An example of this type of pitfall is to create the class “HydrographicalResource”, and the subclasses “Stream”, “Waterfall”, etc., and also the subclass “OtherRiverElement”.\nP22. Using different naming criteria in the ontology:\nno naming convention is used in the identifiers of the ontology elements. Some notions about naming conventions are provided in [2]. For example, we can name a class by starting with upper case, e.g. “Ingredient”, and its subclasses by starting with lower case, e.g. “animalorigin”, “drink”, etc.\nP23. Using incorrectly ontology elements:\nan ontology element (class, relationship or attribute) is used to model a part of the ontology that should be modelled with a different element. A particular case of this pitfall regarding to the misuse of classes and property values is addressed in [2]. An example of this type of pitfall is to create the relationship “isEcological” between an instance of “Car” and the instance “Yes” or “No”, instead of creating the attribute “isEcological” whose range is Boolean.\nP24. Using recursive definition:\nan ontology element is used in its own definition. For example, it is used to create the relationship “hasFork” and to establish as its range the following ’the set of restaurants that have at least one value for the relationship “hasFork”.\n[1] Gómez-Pérez, A.\nOntology Evaluation\n. Handbook on Ontologies. S. Staab and R. Studer Editors. Springer. International Handbooks on Information Systems. Pp: 251-274. 2004.\n[2] Noy, N.F., McGuinness. D. L.\nOntology development 101: A guide to creating your first ontology.\nTechnical Report SMI-2001-0880, Standford Medical Informatics. 2001.\n[3] Rector, A., Drummond, N., Horridge, M., Rogers, J., Knublauch, H., Stevens, R.,; Wang, H., Wroe, C.\nOwl pizzas: Practical experience of teaching owl-dl: Common errors and common patterns\n. In Proc. of EKAW 2004, pp: 63–81. Springer. 2004.\nFor further information about pitfalls:\nA Double Classification of Common Pitfalls in Ontologies\nCommon Pitfalls in Ontology Development\nSome extensions we are working on:\nExtension 1 to P5. Defining a relationship inverse to itself:\nExtension 2 to P5. Defining inverse relationships for a symmetric one:\nExtension 3 to P5. Defining wrong equivalent relationships:\nExtension 4 to P5. Defining symmetric relationships that do not have same domain and range:\nExtension 5 to P5. Defining transitive relationships that do not have same domain and range:",
  "speaker": "SYSTEM",
  "uuid": "5b5c6b77-9d79-471f-8610-a1266782c5ac"
}
{
  "message": "SYSTEM: Wiki: Breve resumen de las herramientas:\nOPM (Open Provenance Model):\nEl 19 de Junio de 2008, veinte participantes asistieron al primer workshop sobre el OPM, para discutir una especificación del modelo y lograr un estándar que unificara las distintas propuestas que resultaron del First Provenance Challenge.\nDe esta reunión surgieron las bases teóricas del OPM, un modelo cuya granularidad se centra en las colecciones de datos y sus miembros,  que se representa como un grafo dirigido acíclico y que es independiente de un dominio concreto, definido al margen de cualquier estándar tecnológico. De hecho, uno de los prerrequisitos que se establecen es que no se va a especificar cómo cada sistema ha de representar el provenance internamente, dejando libertad a los desarrolladores para hacerlo de acuerdo al criterio que consideren más acertado.\nNo utiliza ningún recurso ontológico para jerarquizar y relacionar las entidades que define, tanto en el modelo basado en tiempo que propone como en el que no lo está, y aunque es un modelo ideado sobre todo para workflows científicos, se puede adoptar también para gestionar el provenance en bases de datos.\nSin embargo, también tiene limitaciones. Algunas de las definiciones que ofrece para la inferencia de conocimiento no están demostradas, y algunos modelos más recientes alegan que son inconsistentes o contradictorias.  Asimismo, se trata de un modelo que representa ejecuciones pasadas o incluso presentes, pero no hace ninguna elucubración sobre lo que pudiera ocurrir en el futuro basándose en los datos anteriores\nPrOM\nEs una de las propuestas más recientes, (año 2009), y está basada en la ontología Provenir, desechando el modelo del OPM. Sin embargo, argumenta porqué lo hace, explicando que el OPM modela únicamente propiedades causales, mientras que la ontología Provenir  modela propiedades que incluyen la situación geográfica. Además, argumenta que las reglas para realizar inferencia propuestas en el OPM se contradicen fácilmente debido a la generalidad de su grafo.\nEl modelo es independiente del dominio, y gracias a la ontología usada, los desarrolladores pueden extenderla para tratar otros dominios de forma específica. Su capacidad de consulta es alta, pudiendo no sólo contestar a todas las consultas propuestas en el primer Provenance Challenge, sino pudiendo realizar comparaciones con grafos provenance.\nEn cuanto a la implementación del sistema, la herramienta tiene el mismo nombre (PrOM), y los lenguajes que usa son los estándares RDF y SPARQL, (para consultas). Es una de las pocas herramientas que ha sido diseñada para tratar con provenance incompleto, que es el que vamos a encontrar en la realidad con mayor probabilidad.\nRedux\nModelo multicapa diseñado en 2006-07 con el propósito de responder todas las consultas del Provenance Challenge. Posee cuatro capas, donde cada una representa un nivel de abstracción distinto: la primera para las consultas generales, la segunda actividades específicas, la tercera para representar las ejecuciones de las instancias especificadas en la capa anterior, y la cuarta y última para representar información de la ejecución específica.\nNo usa ningún recurso ontológico, y gestiona automáticamente toda la creación del provenance mientras se está ejecutando el workflow, siendo completamente transparente al usuario.\nLa implementación del modelo utiliza bases de datos para el almacenamiento y el lenguaje SQL para responder correctamente todas las consultas del Challenge. Utiliza el Windows WorkFlow Foundation como motor de workflows.\nWings/PEGASUS\nOtro de los modelos multicapa surgidos con motivo del Provenance Challenge, (2006-07). Está dividido en tres capas, donde la capa uno es una plantilla del workflow, (para garantizar que el modelo sea genérico e independiente de dominio), la capa dos representa los datos específicos de las instancias del workflow, y la capa tres almacena todo lo relevante a la ejecución actual del mismo.\nLa granularidad que presenta es a nivel de colecciones y sus miembros, y puede manejar comparaciones con grafos provenance. Además, destaca porque introduce las colecciones anidadas de elementos, que equivaldrían a la capacidad de expresar subtareas dentro de un workflow con mayor nivel de detalle.\nAunque la creación del provenance no es automática a partir de logs, el sistema puede adivinar parte de las ejecuciones futuras a partir de las plantillas del workflow que se introducen en la capa uno. Responde a todas las preguntas del Challenge, y utiliza una ontología para representar toda la información provenance, (en el sistema Wings).\nVISTRAILS\nSe trata del último modelo basado en capas que analizaremos en este documento, creado en el año 2006-07 y con el mismo propósito que los dos anteriores. Se caracteriza por tener un mecanismo basado en cambios, donde cada nodo del grafo representa una versión del workflow, y cada arista corresponde al cambio que transforma un workflow en otro. Se organiza en tres capas: la primera, (capa de evolución del workflow), captura las relaciones entre las series de workflows. La segunda, la capa de workflow, consiste en especificaciones de workflows individuales, y la última, la capa de evolución,  almacena información  acerca de las ejecuciones de los módulos de los workflows.\nLa granularidad que se maneja es a nivel de archivo, (grano muy fino), y está orientado por eventos, (que son los “cambios” que se producen entre versión y versión). Aunque presume ser independiente de dominio, posee un lenguaje específico del mismo.\nLa gestión y creación del provenance se realiza de manera automática a partir de logs guardados, lo que implica que tan sólo se representan ejecuciones pasadas y no el estado actual de los workflows.\nLa herramienta que implementa el modelo está basada en XML y MySQL, y usa los sistemas AIR y FSL como soporte. No gestiona el acceso seguro a los datos del provenance.\nPASOA\nAcrónimo de “Provenance Aware Software Oriented Architecture”, surgida en el año 2007 con el objetivo de crear, almacenar, consultar y gestionar el provenance de los datos electrónicos en workflows.\nHace uso de los “Concept Maps”, que son recursos ontológicos en los que se muestra una visión general de los conceptos y sus relaciones, lo que asegura que la propuesta sea independiente de un dominio concreto. Además, está dirigido por eventos, definiendo interacciones en las que los agentes que intervienen juegan roles e intercambian mensajes.\nLa herramienta que implementa el modelo, (también llamada PASOA), es intensional, puesto que se todas las consultas se hacen en función a una ejecución determinada dentro de un workflow, y no respecto a una entidad. No ofrece ningún tratamiento de seguridad para acceder a los datos, (cualquiera que pueda acceder al sistema accederá a todo lo que haya almacenado en él).\nZOOM\nPresenta un modelo de provenance genérico, orientado sobre todo a workflows científicos en el área de la bioinformática. Data del año 2006-07, por lo que no está basado en el OPM, pero introduce el concepto de sub-workflows o “vistas de usuario”, que son muy parecidas a las “cuentas”, (accounts), del OPM. En ellas se representan con detalle los subprocesos de un workflow, permitiendo tener mayor o menor nivel de granularidad según queramos. En concreto, ZOOM utiliza este sistema para tratar la seguridad, restringiendo la capacidad de explorar a bajo nivel a aquellos usuarios que no dispongan de los permisos suficientes para ello.\nEs un modelo orientado por eventos, y su capacidad de consulta es de nivel dos. Sin embargo, se limita al provenance de ejecuciones pasadas con información basada en logs.\nPara la implementación de la herramienta, se utiliza Oracle en almacenamiento y SQL y Java, (JDBC), en las consultas, (que son intensionales). Además es compatible con otros sistemas como Kepler o Taverna.\nKARMA\nDiseñado para recoger y consultar provenance de datos procedentes de workflows científicos en el contexto del Challenge, (año 2006-07). Está dirigido por eventos y una granularidad variable, porque aunque no trata directamente la restricción del acceso del usuario según sus permisos, sí que admite la anidar workflows para simplificarlos ofreciendo una vista a más alto nivel.\nTanto la gestión como la creación del provenance es automática, manteniéndose actualizada a pesar de que el workflow se esté ejecutando en ese momento. Como soporte, utiliza el sistema XBaya Workflow Composer, usando el lenguaje de descripción de workflows BPEL, (Bussiness Process Execution Language)\nSin embargo, la principal limitación que presenta es que no responde a todas las consultas formuladas en el Challenge, en concreto a la consulta nueve. No utiliza ningún recurso ontológico.\nPASS\nAcrónimo de “Provenance Aware Storage Systems”, sistemas de almacenamiento que tratan el provenance como un objeto de primera clase, recolectándolo automáticamente, almacenándolo, gestionándolo y también aportando un sistema para consultarlo respondiendo a todas las consultas del Challenge.\nSe diseñó el primer prototipo de PASS durante 2005 y 2006, pero el Challenge obligó a desarrollar rápidamente una herramienta de consulta ad-hoc, puesto que el sistema se había centrado en el almacenamiento y gestión automática de provenance sin tener en cuenta qué es lo que iba a pedir el usuario.\nEstá orientado a workflows, y destaca porque posee una granularidad muy fina, a nivel de archivo. Está orientado por eventos.\n\tTener una granularidad muy fina, por otra parte, también hace que muchas veces se almacene el provenance de datos que no nos interesa, además de necesitar un sistema de almacenamiento mucho mayor.\nD-PQuery (Implementación)\nSe trata del algoritmo desarrollado por Paul T.Groth para determinar el provenance de fuentes múltiples en workflows de manera paralela, siendo la única herramienta de las que se analizan en este documento que lo hace de ese modo.\nGenera un provenance representado en un grafo dirigido acíclico, basado en tiempo e independiente de un dominio concreto, y además lo genera de manera totalmente automática a partir de las grabaciones Kickstart, que son producidas en varias aplicaciones de e-Science actuales.\nAunque es reciente (2008-09), no se basa en el OPM, pero entra dentro de sus propósitos generar documentación compatible con dicho modelo. En cuanto a granularidad, se centra en las colecciones de datos y sus miembros.\nComo limitaciones, el provenance que genera representa ejecuciones pasadas de los objetos que incluye, no su estado actual, y obviamente, si queremos general el grafo a partir de otras grabaciones, deberemos desarrollar herramientas que las conviertan al formato de datos que admite el algoritmo. Además, a pesar de que el tiempo de ejecución cuando hay muchos archivos es muy bueno debido al paralelismo de la propuesta, cuando hay pocos archivos tiene un tiempo de reacción muy lento.\nKOPE(Implementación)\n“Knowledge-Oriented Provenance Environment”, es una herramienta  para workflows cuyo objetivo es analizar logs de provenance. Se basa en el modelo de PASOA, y utiliza las librerías PSM (“Problem Solving Methods”), para generar provenance de manera automática en tres niveles de abstracción y granularidad.  El nivel uno representa la observación inicial y la representación de la información, el nivel dos realiza una primera descomposición de la tarea original en subtareas que describen el proceso en más detalle, y el nivel tres descompone las tareas que aún admiten descomposición tras el nivel dos.\nLa herramienta no gestiona la consulta del grafo dirigido acíclico resultante, sino que se centra en la construcción del mismo. Su única limitación es que la granularidad que ofrece es de grano grueso, sin especificar los detalles específicos de la ejecución del proceso en cuestión.\nTupelo\nImplementación del OPM, que permite leer y escribir información OPM en un contexto como datos RDF. Aporta una representación de alto nivel del OPM que puede ser extendida para soportar otras serializaciones del OPM tan pronto como estén disponibles.\nTaverna\nConjunto de herramientas de software libre para el diseño y ejecución de workflows. Permite automatizar métodos experimentales a través de una serie de servicios, (como servicios Web), de un conjunto diverso de dominios, (desde biología o química hasta música).\nHerramientas\nHerramienta\nLicencia\nFuncionalidad\nProcedencia\nThe Open Provenance Model\nModelo de Provenance que define una serie de reglas para identificar las inferencias válidas que pueden hacerse en los grafos provenance\nSurge de la colaboración conjunta de las universidades de Southampton, Indiana, Manchester, Davis, Hasselt, Utah,USC, y Microsoft, NSCA y PNNL\nD-PQuery\nAlgoritmo para determinar el provenance de datos a partir de provenances distribuidos y de manera paralela.\nUniversidad de California del Sur\nVDL\n“Virtual Data Language”. Lenguaje que permite a los usuarios especificar flujos de ejecución grid para derivar información.\nUniversidad de Chicago\nWS-BPEL\n“Bussiness Process Execution Language”. Lenguaje basado en XML diseñado para el control dentralizado de la invocación de diferentes servicios Web. Es uno de los estándares de OASIS.\nOASIS\nVisTrails\nSistema relativamente reciente que aporta una gestión del provenance para tareas computacionales exploratorias, combinando características de los sistemas de flujo de ejecución y de visualización.\nUniversidad de Utah\nKarma\nHerramienta para el almacenamiento de provenance que puede ser añadida a una ciberestructura existente.  Utiliza una arquitectura modular que permite soportar múltiples plugins que la hacen usables en distintos entornos.\nPegasus-WMS\nHerramienta para gestionar los flujos de ejecución. Basada en el Pegasus mapper y el motor DAGMan para flujos de ejecución\nFundación de Ciencia Nacional(NSF), bajo el programa OCI SCDI\nPegasus Mapper\nMotor para realizar el mapping automático de flujos de ejecución en infraestructuras distribuidas.\nDesarrollado en el seno de diversos proyectos para su utilización, como GriPhyn, NVO y SCEC_VME\nPegasus GUI\nHerramienta que aporta una interfaz gráfica sencilla de usar para editar y monitorizar workflows\nEnsemble Manager\nHerramienta que coordina y maneja eficientemente gran cantidad de flujos de ejecución simultáneamente (de 100 a 1000).\nKepler\nHerramienta que ayuda a los usuarios a reutilizar y compartir datos, flujos de ejecución y componentes desarrollados por la comunidad científica.\nNSF (National Science Foundation).\nPASS\nHerramienta para capturar el provenance.\nUniversidad de Harvard\nKOPE\n“Knowledge Oriented Provenance Environment”. Sirve para analizar logs  de provenance. Basado en el modelo de datos de PASOA.\nUPM and University of Manchester\nTaverna\nHerramiente de software libre para diseñar y ejecutar flujos de ejecución.\nCreada por el proyecto myGrid\nTupelo Provenance API\nAPI Java para almacenar datos OPM (“Open Provenance Model”), como datos RDF.\nCreada a partir del proyecto Tupelo\nOrchestra\nSistema que coordina un set de sitios web participantes, cada uno de los cuales maneja una base d e datos. Permite propagar las actualizaciones del contenido de los sitios en función de la confianza de la actualización..\nUniversidad de Pennsylvania.\nBreve resumen de los proyectos:\nProvenance Challenge\nDada la importancia que empezó a cobrar el provenance durante los últimos años, en la IPAW’06 la comunidad decidió que era necesario entender las diferentes representaciones usadas para el provenance, sus aspectos comunes y las razones de sus diferencias. Para ello se creó el “First Provenance Challenge”, en Junio de 2006.\nEn ese evento, 17 equipos contribuyeron con resultados muy distintos, y dado su éxito se decidió convocar un segundo Challenge para fomentar la interoperabilidad entre los sistemas. En esta segunda cita ya empezó a haber acuerdos y consenso entre los distintos equipos, y como resultado surgió el Open Provenance Model, que aunque no ofrecía una implementación fundaba las bases para crear un modelo estándar.\nEl “Third Provenance Challenge” se inauguró en Marzo de 2009, para evaluar el OPM de manera práctica. Aún no ha terminado.\nPASOA\nProyecto creado para investigar el concepto de provenance y su uso para el razonamiento acerca de la calidad y precisión de los datos y servicios en el contexto de e-Science. En sus objetivos entra la definición de ejecución y servicio en relación a la divulgación del workflow, la creación de algoritmos que razonen sobre datos provenance, el diseño de un protocolo de cooperación distribuida que genere datos provenance o investigar propiedades de valor añadido que puedan ser deducidas de dichos datos.\nPegasus\nProyecto que explora lo relevante a la gestión de workflows científicos y que trabaja con dominios científicos para soportar sus datos y cálculos distribuidos de una manera eficiente. Una de las herramientas resultante del proyecto, Pegasus WMS (Workflow Management System), se utilizó junto al sistema Wings para responder con éxito a todas las consultas aparecidas en el “First Provenance Challenge”.\nWings\n“Workflow INstance Generation and Selection”: Sistema workflow diseñado para asistir a los científicos a diseñar experimentos.Razona sobre el conjunto de datos y sobre las restricciones de los componentes para crear y validar workflows y generar metadatos para nuevos productos. Se utiliza con Pegasus, que hace las veces de motor de ejecución para workflows distribuidos.\nKepler\nEl proyecto Kepler está dedicado al mantenimiento y soporte de la herramienta de software libre para workflows científicos Kepler. Kepler puede operar sobre datos almacenados en una variedad de formatos amplia, tanto a nivel local como en Internet, y es un entorno efectivo para integrar distintos componentes software. Usando la interfaz gráfica de Kepler, los usuarios simplemente seleccionan y conectan sus componentes y datos para crear un “workflow científico”. El software de Kepler ayuda a los usuarios a compartir y reutilizar sus datos, workflows y componentes desarrollados por la comunidad científica para satisfacer las necesidades comunes.\nPASS\n“Provenance Aware Software Systems”: Se define una nueva clase de sistema de almacenamiento, que soporta la recolección y mantenimiento automático de provenance. PASS recolecta provenance tan pronto como objetos nuevos son creados en el sistema, y mantiene ese provenance al igual que archivos convencionales de meta-datos. Asimismo, el sistema soporta consultas sobre el provenance.\nORCHESTRA\nCentrado en el ámbito científico, sobre todo en el área de bioinformática, en donde existen varias bases de datos “estandarizadas”, con información superpuesta, similar pero no idéntica, que se diferencian por la calidad de sus datos y el público al que van dirigidas. El sistema colaborativo de compartición de datos ORCHESTRA está orientado al soporte del acuerdo de los distintos esquemas, con usuarios que no están de acuerdo entre sí. Para ello cada participante especifica en quien confía, resolviendo los conflictos de manera local.\nProyectos\nProyecto\nDescripción\nResultado\nHerramientas\nThe Provenance Challenge\nMás que un proyecto es un evento que se lleva celebrando desde 2006 debido a la importancia que ha ido cobrando el provenance estos últimos años. Se presentan y se discuten los aspectos comunes y las fiferencias de las distintas propuestas.\nLos modelos de provenance que se han presentado.\nPASOA\n“Provenance Aware Service Oriented Architecture”. Es un proyecto creado para investigar el concepto de provenance y su uso para el razonamiento acerca de la calidad y precisión de los datos y servicios en el contexto de e-Science.\nModelo de provenance, un protocolo de guardado de la información y el desarrollo de una metodología para implementar aplicaciones con provenance.\nLEAD\n“Linked Environments for Atmospheric Discovery”. Almacena datos metereológicos y modelos de predicciones. Además presenta herramientas de análisis y visualización para que cualquiera que quiera averiguar cómo evoluciona el clima pueda acceder interactivamente.\nEl resultado relevante para este proyecto es el desarrollo de la herramienta Karma para el la recolección y almacenamiento de provenance\nKarma\nPegasus\nSe explora lo relevante a la gestión de flujos de ejecución científicos y se trabaja con dominios científicos para soportar sus datos y cálculos distribuidos de una manera eficiente.\nHerramientas como Pegasus WMS(Workflow Management System), un sistema de gestión de flujos de ejecución para la comunidad científica.\nPegasus WMS, Pegasus Mapper, Pegasus GUI, Ensemble Manager, Corral Glidein Service y Metadata Catalog\nKepler\nProyecto creado para ayudar a científicos, analistas y programadores a crear, ejecutar y compratir modelos y análisis de todas las disciplinas científicas mediante la ampliación de los flujos de ejecución en sus aplicaciones.\nLa herramienta Kepler\nKepler\nPASS\n“Provenance Aware Storage Systems”. Se busca que los proyectos que tratan con provenance lo gestionen como un objeto de primera clase, haciendo que tanto la recolección de información como su mantenimiento y consulta se realicen de manera automática.\nHerramienta PASS, que captura el provenance para cualquier programa que se ejecute en Linux 2.4\nPASS\nORCHESTRA\nProyecto centrado en escenarios de compartición de datos, en concreto los científicos y el área de la bioinformática.\nOrchestra System, herramienta que usa la información del provenance sobre quien efectúa una actualización y los pasos seguidos durante la misma para decidir si deberíamos aceptar o rechazar una actualización de un nodo\nOrchestra",
  "speaker": "SYSTEM",
  "uuid": "f6007976-e04e-425b-ae8f-9e80bfb47745"
}
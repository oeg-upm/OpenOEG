{
  "message": "SYSTEM: NeOn-Methodology-OntologySpecificationGuidelines.pdf: Página 6\nPage 6 of 18 \nNeOn Integrated Project EU-IST-027595 \ndomain experts and the ontology development team carry out this task taking as input a set of \nontological needs for obtaining the purpose, scope and level of formality of the ontology, using \ntechniques as physical or virtual interviewers between them.  \nThe task output is the purpose, scope and level of formality of the ontology, which will be included \nin the corresponding slots of the OSRD template. \nTask 2. Identify intended users.  \nThe goal of this task is to establish which the main intended users of the ontology are. Users, \ndomain experts and the ontology development team carry out this task taking as input a set of \nontological needs for identifying the intended users, using techniques as physical or virtual \ninterviewers between them. \nThe task output is a list with the intended users, which will be included in the corresponding slot of \nthe OSRD template.   \nTask 3. Identify intended uses.  \nThe goal of this task is to obtain the main ontology intended uses, that is, in which kind of \nscenarios the ontology will be used. Users, domain experts and the ontology development team \ncarry out this task taking as input a set of ontological needs for identifying the intended uses, using \ntechniques as physical or virtual interviewers between them. \nThe development of an ontology is motivated by scenarios related to the application that will use \nthe ontology. The task output is a list of intended uses in the form of scenarios. Such scenarios \ndescribe a set of the ontology’s requirements that the ontology should satisfy after being formally \nimplemented. The scenarios can be described in natural language or expressed in UML as use \ncases. The list of scenarios will be included in the corresponding slot of the OSRD template.   \nTask 4. Identify requirements.  \nThe goal of this task is to obtain the set of requirements or needs that the ontology should fulfill. \nUsers, domain experts and the ontology development team carry out this task taking as input a set \nof ontological needs for identifying the ontology requirements, using techniques as writing the \nrequirements in natural language in the form of the so-called competency questions (CQs) and \ntools as mind map tools, excel, and collaborative tools.  \nThe output of this task is a list of competency questions written in Natural Language and a set of \nanswers for the CQs.  \nDifferent approaches for identifying competency questions can be applied, such as: \n\u0001 Top-Down: Complex questions are decomposed in simple ones. \n\u0001 Bottom-Up: Simple questions that are organised to form complex ones. \n\u0001 Middle out: Mix approach between top-down and bottom-up.  \nRegarding the recommended tools, we can mention that MindMap tools allow representing mind \nmaps [2]. These mind maps are diagrams used to represent words, ideas, tasks or other items \nlinked to and arranged radically around a central key word or idea. They are used to generate, \nvisualize, structure and classify ideas. In general, a mind map provides information about a topic \nthat is structured in a tree. Each branch of the tree is typically named and associatively refined by \nits subbranches. Icons and pictures as well as different colors and fonts might be used for \nillustration based on the assumption that our memory performance is improved by visual aspects. \nMany people from academia and industry are familiar with mind maps, and for this reason we think \nthat this recommendation will be very useful for software engineering and ontology practitioners \nforming the ontology development team. Another advantage is that requirements visualization in \nform of a hierarchy is very intuitive and easy to understand and manage. \n",
  "speaker": "SYSTEM",
  "uuid": "7b48889e-c674-4a11-97a9-99422d001d11"
}
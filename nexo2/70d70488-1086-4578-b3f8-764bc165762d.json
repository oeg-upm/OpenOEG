{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 26\nBÚSQUEDA \n \n26 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \nPara acceder a las distintas componentes de un vector, Common Lisp proporciona la \nprimitiva aref, que toma dos argumentos: el primero debe ser un elemento vector \n(es decir, creado por make-array) y el segundo debe ser un número entero entre 0 \ny n-1 si n es la dimensión del vector que es el primer argumento. Por ejemplo, si \nconsideramos que el símbolo v está ligado al vector que aparece en la Figura 5 \ntendríamos: \n \n> (aref v 0) \n===> A \n \n> (aref v 1) \n===> B \n \n0 \nA \n1 \n2 \nB \nC \nV \n \nFigura 5 \nPara modificar el contenido de alguna componente de un vector utilizamos la \nprimitiva setf que es como setq salvo que su primer argumento no tiene por qué \nser un símbolo: puede ser cualquier variable generalizada (ver la Figura 6). \n0 \nA \n1 \n2 \nB \nC \nVariables \ngeneralizadas\nV \n \nFigura 6 \nSiguiendo con el mismo ejemplo, si evaluamos: \n \n> (setf (aref v 0) (+ 4 6)) \n \n===> 10 \ntendremos (ver Figura 7): \n \n> (aref v 0) \n \n===> 10 \n",
  "speaker": "SYSTEM",
  "uuid": "70d70488-1086-4578-b3f8-764bc165762d"
}
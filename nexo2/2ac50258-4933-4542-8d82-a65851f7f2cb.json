{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 111\nBÚSQUEDA \n \n111 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \n \n– Regla (v,w) en el estado [A, …, B]: \n \n \n– precondiciones: B = v y, o bien w = A y en [A, …, B] aparecen todas las ciudades \ndel mapa, o bien w no aparece en [A, …, B]; \n \n \n– acción: construir [A, …, B, w] \nUna vez fijado el nivel conceptual de la representación ya tenemos definido, \nimplícitamente, el espacio de estados y podemos plantearnos el análisis de su \nestructura combinatorial. La representación elegida determina que el espacio de \nestados será siempre un árbol. \nEjercicio. Dibújese el árbol de estados correspondiente al mapa de la figura 15, \nescribiendo los costes al lado de las aristas. \nEl hecho de que el espacio de estados sea un árbol conlleva, como ya sabemos, \nimportantes simplificaciones en el proceso de búsqueda, que pueden ser recogidas \nen las estrategias de control. \nEjercicios. \n1) Prográmese el algoritmo A en árbol, adaptando \"primero el menos costoso\" en \nárbol (basta ordenar ABIERTOS respecto a g + h, en lugar de respecto a g). \n2) El algoritmo anterior puede ser adaptado en el problema del viajante, con la \nrepresentacion fijada, con distintas variantes: \n \na) Podemos identificar los nodos con los estados. Esto implicará que cada \nvez que se requiera la información g, ésta deberá ser recalculada. \n \nb) Para evitar el recálculo citado en (a), podemos modificar la noción de \nestado, incluyendo en él los costes acumulados de las aristas. Por ejemplo, en el \nejemplo de la figura 15, tendríamos como estado [A,0,B,1,D,5]. Esto puede ser \nfácilmente implementado en Common Lisp, apoyándonos en que sus estructuras de \ndatos no tienen que ser homogéneas en cuanto al tipo de sus componentes (no \ntienen por qué ser todo números o todo símbolos, etc.). \n \nc) Si representamos en el nivel físico los estados de (b) por medio de listas \n(o de vectores) lo más probable es que malgastemos mucho espacio de memoria \n(los caminos van aumentando incrementalmente). Para evitar ese derroche, se \npueden representar los estados por medio de estructuras enlazadas con la ayuda de \nun registro con campos: ciudad, padre y coste. (Esto recuerda mucho a la estructura \n",
  "speaker": "SYSTEM",
  "uuid": "2ac50258-4933-4542-8d82-a65851f7f2cb"
}
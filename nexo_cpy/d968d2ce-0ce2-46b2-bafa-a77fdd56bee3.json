{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 54\nBÚSQUEDA \n \n54 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \nreservada otherwise que hace que el cuerpo de su cláusula siempre sea evaluado \nsi se llega hasta ella. Esta posibilidad ha sido utilizada en el ejemplo. \nComo último comentario al ejemplo, obsérvese que en algunos cuerpos de las \ncláusulas del case aparece la primitiva print. Se trata de un procedimiento de \nsalida, pero sin formato. Evalúa su argumento y, como efecto lateral, imprime el \nvalor en pantalla. Otra diferencia con format es que el valor impreso será también \nel valor devuelto por la llamada a print. Así, obtendremos resultados que pueden \nparecer extraños: \n \n> (print 'agua) \n \n \n  AGUA \n===> AGUA \nEs decir, veremos en pantalla dos veces el símbolo AGUA: una vez escrito como \nefecto lateral del print y otra escrito como su valor por la parte de escritura del \nbucle de lectura-evaluación-escritura. Si quisiésemos tan sólo escribir una vez en \npantalla sería mejor evaluar: \n \n> (progn \n \n    (print 'agua) \n \n    (values)) \n \nAGUA  ===> \n\"nada\" \nO en este nivel, bastaría hacer : \n \n> \n'agua \n===> AGUA \nSin embargo, esta última solución no sería adecuada en el case de la función que \nestamos comentando (¿por qué?). \n \n3.4. Texto del fichero SEARCH.LSP. \n \n;;; Busqueda en anchura en arbol \n;; Esquema generico de busqueda: \n(defun busqueda () \n  (let ((ABIERTOS (list (crea-nodo-inicial)))) \n    (do ((el-nodo (first ABIERTOS) (first ABIERTOS))) \n        ((or (endp ABIERTOS) (estado-objetivo? (estado-de-nodo el-nodo))) \n         (if (endp ABIERTOS) \n             (solucion-no-encontrada) \n           (escribe-solucion el-nodo))) \n      (setq ABIERTOS (reorganizar-nodos-a-expandir (expandir-nodo el-nodo) \n                                                   (rest ABIERTOS))) \n      (informacion-proceso-busqueda el-nodo)))) \n \n;; Las funciones nombradas en ese algoritmo generico pueden depender \n;; del tipo de busqueda, del problema a resolver o de las decisiones \n",
  "speaker": "SYSTEM",
  "uuid": "d968d2ce-0ce2-46b2-bafa-a77fdd56bee3"
}
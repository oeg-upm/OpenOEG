{
  "message": "SYSTEM: 04_OntologyLanguages_RDF%28S%29.pdf: Página 35\nAnother data model\nhttp://.../JohnSmith\nJohn Smith\nvcard:FN\nvcard:N\nJohn Smith\nSmith\nJohn\nvcard:Given\nvcard:Family\n// some definitions \nString personURI = \"http://somewhere/JohnSmith\"; String givenName = \"John\"; \nString familyName = \"Smith\"; \nString fullName = givenName + \" \" + familyName; \n// create an empty \nModel Model model = ModelFactory createDefaultModel();\n© O. Corcho, R.García-Castro, O. Muñoz-García\n69\nRDF and RDF Schema\nModel Model model = ModelFactory.createDefaultModel(); \n// create the resource \n// and add the properties cascading style \nResource johnSmith = model.createResource(personURI) \n.addProperty(VCARD.FN, fullName) \n.addProperty(VCARD.N, model.createResource()   \n.addProperty(VCARD.Given, givenName)\n.addProperty(VCARD.Family, familyName)); \nStatements\n// list the statements in the Model \nStmtIterator iter = model.listStatements(); \n// print out the predicate, subject and object of each statement \nwhile (iter.hasNext()) \n{ \nStatement stmt = iter.nextStatement(); // get next statement\nResource subject = stmt.getSubject(); // get the subject\nProperty predicate = stmt.getPredicate(); // get the predicate\nRDFNode object = stmt.getObject(); // get the object\nSystem.out.print(subject.toString()); \nSystem.out.print(\" \" + predicate.toString() + \" \"); \nif (object instanceof Resource) { \nSystem.out.print(object.toString()); \n} \nelse { // object is a literal\nSystem.out.print(\" \\\"\" + object.toString() + \"\\\"\"); \n} \n© O. Corcho, R.García-Castro, O. Muñoz-García\n70\nRDF and RDF Schema\n}\nSystem.out.println(\" .\"); \n} // end of while\nhttp://somewhere/JohnSmith http://www.w3.org/2001/vcard-rdf/3.0#N anon:14df86:ecc3dee17b:-7fff\nanon:14df86:ecc3dee17b:-7fff http://www.w3.org/2001/vcard-rdf/3.0#Family \"Smith\" \nanon:14df86:ecc3dee17b:-7fff http://www.w3.org/2001/vcard-rdf/3.0#Given \"John\" \nhttp://somewhere/JohnSmith http://www.w3.org/2001/vcard-rdf/3.0#FN \n“John Smith\" .\n",
  "speaker": "SYSTEM",
  "uuid": "067a7bf7-ac20-45c6-9e6b-d528b3e9d327"
}
{
  "message": "SYSTEM: Wiki: https://delicias.dia.fi.upm.es/wiki/index.php/SEALSTestData \n\nTDRS 2.0-b\n(will be released M29)\nSPARQL endpoints can be created for data items/components of a suite.\nPlaceholders can be used in the suite metadata, which are automatically substituted with the concrete values upon insertion of the suite into the repository.\nFixed issues:\n645\n,\n646\n,\n647\n,\n655\n,\n671\nNow uses Sesame 2.4.2.\nSyntactically and semantically backwards-compatible with TDRS 1.1.\nTDRS 1.1\n(released M23)\ndcterms:identifier\nis used as identifier rather than\nseals:hasName\n, see\nRepository Metadata (New)\n.\nIdentifier is auto-generated if not defined in the repository metadata.\nRoot node in repository metadata must be a blank node and is automatically overwritten with a dereferenceable URI.\nJava clients have been aligned with those changes.\nSyntactically compatible with TDRS 1.1-b. However, artifacts are now identified by its\ndcterms:identifier\nand the repository metadata has to be aligned with the changes.\nTDRS 1.1-b\n(released M18)\nStorage and retrieval of suites and suite items.\nSuites are described according to\nSuite Metadata\nCompatible with TDRS 1.0\nTDRS 1.0\n(released M10)\nStorage and retrieval of persistent test data.\nRegistration and execution of synthetic test data generators.\nUsage\n\nWe have uploaded\na ZIP file\ncontaining\na HTML form to register a new test data collection (RegisterTestCollection.html)\na HTML form to add a test data version to the collection (AddTestDataVersion.html)\nthe repository metadata for the test data collection (OWLDLImportTestSuiteCollection.xml)\nthe repository metadata for the test data version (OWLDLImportTestSuite1.0.xml)\nthe ZIP file containing the test data (OWLDLImportTestSuite1.0.zip)\nPlease note, that the given test data has already been regisered in the repository. The following instructions describe how this has been accomplished.\nYou first have to register a new test data collection using the HTML file RegisterTestCollection.html. There you paste the RDF/XML metadata of the test data collection (OWLDLImportTestSuiteCollection.xml) to the text area. Then you have to open the HTML file AddTestDataVersion.html and paste the RDF/XML metadata of the test data version (OWLDLImportTestSuite1.0.xml) to the text area and select the ZIP file containing the test data (OWLDLImportTestSuite1.0.zip).\nPlease note\n, that, although, the test data represents a test suite, it is not describing using the\nSuite Ontology\nbut using a ontology defined in WP10.\nThe metadata of the test data collection can be accessed through the URL\nhttp://seals.sti2.at/tdrs-web/testdata/persistent/OWL+DL+Import+Test+Suite/\nand the metadata of the test data version through the URL\nhttp://seals.sti2.at/tdrs-web/testdata/persistent/OWL+DL+Import+Test+Suite/1.0/\n. If you want to retrieve the test data ZIP file, you need to change the value of the Accept header in your HTTP request to \"application/zip\" and send the request to\nhttp://seals.sti2.at/tdrs-web/testdata/persistent/OWL+DL+Import+Test+Suite/1.0/\n. To change the Accept header you can use the Firefox add-on\nModify Headers\n.\nIf you want to use the forms to register and add different test data, please make sure to use a subject URI (in the metadata) that makes sense, i.e. a URI that corresponds to the URL for the resource to be created. For instance, if you register a collection with the seals:hasName value \"Foo Bar\", the subject URI should be \"\nhttp://seals.sti2.at/tdrs-web/testdata/persistent/Foo+Bar\n\". Later, it is VERY important to edit the AddTestDataVersion.html file and change the value of the \"action\" attribute of the form to, for instance, \"\nhttp://seals.sti2.at/tdrs-web/testdata/persistent/Foo+Bar\n\". That means, you have to POST the concrete ZIP file, which corresponds to a version of the test data collection, to the URL of the collection.\nSuite Metadata (from the SEALS wiki)\n\nThis page describes how to use the\nSuite Ontology\nto describe suites of entities, e.g. suites of test data or interpretations, that are to be stored in the Test Data Repository Service (TDRS), Tools Repository Service (TRS) or Results Repository Service (RRS). In order to distinguish between the\nrepository metadata\n, we further use the terms suite metadata to refer to the metadata describing these suites.\nIn the following examples we will assume that the repositories services are accessable under the following URLs:\nTest Data Repository Service:\nhttp://seals.sti2.at/tdrs-web/\nTools Repository Service:\nhttp://seals.sti2.at/trs-web/\nResults Repository Service:\nhttp://seals.sti2.at/rrs-web/\nSuite Ontology\n\nThe suite metadata is based on the UIBK proposal of the\nsuite ontology\n, which uses the concepts of a\nSuite\n,\nSuiteItem\nand\nDataItem\n, where a\nSuite\nconsist of multiple\nSuiteItems\n, which consists of various\nDataItems\n. It defines the specific characteristics of the Suite and the SuiteItems. For instance, the suite metadata describes all the test cases (corresponding to a SuiteItem) defined in a test suite (corresponding to a Suite) and the test data (corresponding to a DataItem) corresponding to each test case. A data item can also have a certain type, for instance, source ontology. If such a type is given for a data item, we refer to it as a\ncomponent\n.\nStructure of a Suite\n\nA suite is encapsulated in a ZIP file, that contains files in arbitrary directories in the ZIP file. The only constraint is, that the suite metadata is in a separate file at the top level of the ZIP file and has the file name\nMetadata.rdf\n. Apart from this constraint, the files(DataItems) in the ZIP can have any name and can remain in any directory in the ZIP file. The metadata defines to which SuiteItem a DataItem belongs, where this DataItem is located and what the name and optionally the component type of the DataItem is. Given these descriptions, there are multiple ways to access such DataItems or components. An example ZIP file structure can be seen below. See section\n#Describing and Accessing Suites\nfor a full example.\n/Metadata.rdf\n/TestCase01/ontology01.owl\n/TestCase01/ontology02.owl\n/TestCase02/ontology01.owl\n/TestCase02/ontology02.owl\n...\nDescribing and Accessing Suites\n\nWe illustrate how to describe and access a suite using an example based on the\nConference Testsuite (version 2010)\nof WP12.\nDescribing the suite\nThe Conference Testsuite ZIP file contains multiple ontology files residing in different directories, and a RDF file containing the suite metadata.\n/Metadata.rdf\n/ont/cmt.owl\n/ont/conference.owl\n/ref/cmt-conference.rdf\nThe test suite consists of various test cases (suite items), each typically associated with a source and target ontology and a reference alignment (data items). Below we see an extract of the suite metadata stored in the Metadata.rdf file. We use a namespace\nconference\nas a shortcut for the URI\nhttp://www.seals-project.eu/alignment/conference#\n:\n<rdf:RDF \n    xmlns:rdf=\"\nhttp://www.w3.org/1999/02/22-rdf-syntax-ns#\n\" \n     xmlns:seals=\"\nhttp://www.seals-project.eu/ontologies/SEALSMetadata.owl#\n\" \n     xmlns:owl=\"\nhttp://www.w3.org/2002/07/owl#\n\" \n     xmlns:dc=\"\nhttp://purl.org/dc/terms/\n\" \n     xmlns:xsd=\"\nhttp://www.w3.org/2001/XMLSchema#\n\" \n     xmlns:rdfs=\"\nhttp://www.w3.org/2000/01/rdf-schema#\n\"> \n\n<rdf:Description rdf:about=\"\nhttp://www.seals-project.eu/alignment/conference#ConferenceSuite\n\">\n    <rdf:type rdf:resource=\"\nhttp://www.seals-project.eu/ontologies/SEALSMetadata.owl#Suite\n\" />\n    <seals:hasSuiteItem rdf:resource=\"\nhttp://www.seals-project.eu/alignment/conference#cmt-conference\n\" />\n</rdf:Description>\n\n<rdf:Description rdf:about=\"\nhttp://www.seals-project.eu/alignment/conference#cmt-conference\n\">\n    <rdf:type rdf:resource=\"\nhttp://www.seals-project.eu/ontologies/SEALSMetadata.owl#SuiteItem\n\" />\n    <seals:hasDataItem rdf:resource=\"\nhttp://www.seals-project.eu/alignment/conference#cmt-source\n\" />\n    <seals:hasDataItem rdf:resource=\"\nhttp://www.seals-project.eu/alignment/conference#conference-target\n\" />\n    <seals:hasDataItem rdf:resource=\"\nhttp://www.seals-project.eu/alignment/conference#cmt-conference-ref\n\" />\n    <dc:identifier>cmt-conference</dc:identifier> \n</rdf:Description>",
  "speaker": "SYSTEM",
  "uuid": "ed2c211a-665a-48dd-989b-f5aee0b154d5"
}
{
  "message": "SYSTEM: BUSQUEDA.pdf: Página 106\nBÚSQUEDA \n \n106 \nJ. Rubio / P.R. Muro / J. Bañares \n \nOctubre 2004 - Curso 2004-2005 \nObsérvese que la heurística idénticamente nula es monótona, puesto que hemos \nsupuesto que los costes de las aristas son positivos. \nEn general, no es necesario comprobar arista a arista si se verifica en cada una de \nellas la condición de monotonía (difícil tarea en espacios de estados infinitos …). Por \nejemplo, en el caso del 8-puzzle, con coste uno en cada arista y con heurística el \nnúmero de dígitos mal situados, la heurística es monótona. La razón es que un \nmovimiento puede colocar en su posición a lo más un dígito. En el problema del tren, \ncon coste el número de kilómetros y con heurística la distancia en línea recta a la \nciudad objetivo, ésta es monótona: se sigue de la propiedad triangular de la distancia \n(d(a,b) <= d(a,c) + d (b,c) para cualquier a, b y c) y de que la distancia en línea recta \nes menor o igual que el número de kilómetros que se realizan. En cambio, si el coste \nes la duración en horas, la heurística no tiene por qué ser monótona. \nEn cuanto a las relaciones entre admisibilidad y monotonía, ya se ha comentado en \nel ejemplo de la figura 11 que una heurística puede ser admisible y en cambio no ser \nmonótona. Sin embargo, la implicación contraria sí que es cierta. \nTeorema. Si una heurística es monótona, entonces es admisible. \nDemostración. Sea h una heurística monótona y sea e0 un estado cualquiera que \npuede ser unido por algún camino con algún estado objetivo. Sea C = (e0, e1, …, en) \nun tal camino (es decir, en es un estado objetivo, lo que implica que h(en) =0). \nPuesto que h es monótona, se tiene h(e0) <= h(e1) + coste-arista(e0,e1) <=  … <= \nh(en) + coste-arista(e0, e1) + …+ coste-arista(en-1,en) = coste(C). Y lo anterior es \ncierto para cualquier camino de e0 a un objetivo, luego h(e0) <= h*(e0) y esto para \ncualquier estado e0 para el que h*(e0) esté definido, lo que termina la demostración. \nCorolario. Si la heurística es monótona, el algoritmo A es un A*. En particular, si h \nes monótona, el algoritmo A encuentra una solución óptima (si existe alguna). \nUn mismo algoritmo A puede ser parametrizado por distintas heurísticas.¿Cuál es \nmejor? Llamemos A1 a un esquema que use h1 y A2 al mismo pero que use h2. \nSupongamos que h1 y h2 son admisibles (o, con otras palabras, que A1, A2 son \nalgoritmos A*). Diremos que A2 está mejor informado que A1 si h1(e) <= h2(e) para \ncada estado e. La razón de ser de esta definición es la siguiente: si A1, A2 son dos \nversiones del mismo esquema A* y A2 está mejor informada que A2, entonces todo \nestado expandido por A2 será también expandido por A1. En particular, A2 expande \ncomo mucho tantos estados como A1. \n",
  "speaker": "SYSTEM",
  "uuid": "ae0f8e7d-3b42-49d4-84ed-c1db8303e78e"
}
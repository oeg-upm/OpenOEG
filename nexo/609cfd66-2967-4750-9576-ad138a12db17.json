{
  "message": "SYSTEM: Semantic_Annotation_of_Geospatial_RESTful_Services_Using_External_Resources_v5.pdf: PÃ¡gina 8\nParameter\n-name\n-link\nDBpediaOntology\n-value\nDBpediaInstance\n-lat/long\n-Bbox\nGeoNamesInstance\n1\n-hasCollection\n0..*\n-hasCollection\n1\n0..*\n0..*\n1\n-hasSuggestion\n0..*\n-hasSynnonym\n1\n0..*\n \n \nFigure 3. Model for the description of RESTful services \n3.3.1 Using semantic sources in the annotation process \nAt this stage, the list of syntactic parameters obtained previously is used to query the \nDBpedia and GeoNames SPARQL Endpoints (the latter is only used in the case of the \ngeospatial domain) and retrieve associated results for each parameter, as follows: \n- \nFirst, the system retrieves all the classes from the DBpedia ontology whose \nnames have an exact match with each parameter of the RESTful service. If the \nsystem obtains correspondences from the matching process, it uses these \nDBpedia concepts individually to retrieve samples (concept instances) from the \nDBpedia SPARQL Endpoint. Likewise, when a parameter matches an ontology \nclass related to some geospatial information; such as latitude, longitude, or \nbounding box, our system retrieves samples from the GeoNames SPARQL \nEndpoint. The resulting information (RDF) is suggested automatically to the \nsystem and registered as a possible value for the corresponding parameter. When \na parameter matches more than once in the DBpedia ontology, our system only \nconsiders concepts that have information (instances), and automatically discards \nthose ontology concepts without instances.  \n- \nNext, the system tries to find correspondences between parameters of the \nRESTful service and DBpedia properties. If the system obtains some \ncorrespondences, it uses these DBpedia properties individually to retrieve \ninformation of the DBpedia or GeoNames SPARQL Endpoint, as described \nabove. Furthermore, this information is registered as a possible correct value for \nthe corresponding parameter. \n- \nFinally, with the obtained classes and properties, the system calls the DBpedia \nand GeoNames SPARQL Endpoints to retrieve values (instances) for those \nclasses and properties, so that now we have possible values for them.  \n",
  "speaker": "SYSTEM",
  "uuid": "609cfd66-2967-4750-9576-ad138a12db17"
}